[{
	"sha1": "2bcd05a827ead109a56cb1f79a83dcd332f42888",
	"repository": "https://github.com/JetBrains/MPS.git",
	"author": "Mihail Muhin",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public getLanguage(id SLanguageId, langName String, version int) : SLanguage inlined to public getLanguage(id SLanguageId, langName String) : SLanguage in class jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory"
	}],
	"time": "6/7/15 7:36 PM",
	"id": 1105075
}, {
	"sha1": "e235f884f2e0bc258da77b9c80492ad33386fa86",
	"repository": "https://github.com/SecUpwN/Android-IMSI-Catcher-Detector.git",
	"author": "Marvin Arnold",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createCellSignalTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createOpenCellIDTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createDefaultMCCTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createLocationTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createSilentSmsTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createCellTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createEventLogTable(database SQLiteDatabase) : void extracted from public onCreate(database SQLiteDatabase) : void in class com.SecUpwN.AIMSICD.adapters.AIMSICDDbAdapter.DbHelper"
	}],
	"time": "6/7/15 9:44 PM",
	"id": 1105586
}, {
	"sha1": "2801269c7e47bd6e243612654a74cee809d20959",
	"repository": "https://github.com/crashub/crash.git",
	"author": "Oliver Trosien",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private convertPemKeyPair(pemKeyPair PEMKeyPair) : KeyPair extracted from public loadKeys() : Iterable<KeyPair> in class org.crsh.auth.FilePublicKeyProvider"
	}],
	"time": "6/7/15 11:15 PM",
	"id": 1102793
}, {
	"sha1": "b0d5315e8ba95d099f93dc2d16339033a6525b59",
	"repository": "https://github.com/vaadin/vaadin.git",
	"author": "Teppo Kurki",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private remove() : void inlined to public testColExpandRatioIsForgotten() : void in class com.vaadin.ui.GridLayoutExpandRatioTest"
	}],
	"time": "6/8/15 4:19 AM",
	"id": 1104750
}, {
	"sha1": "ebb483320d971ff4d9e947309668f5da1fcd3d23",
	"repository": "https://github.com/glyptodon/guacamole-client.git",
	"author": "Michael Jumper",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}],
	"time": "6/8/15 5:46 AM",
	"id": 1103658
}, {
	"sha1": "7655200f58293e5a30bf8b3cbb29ebadae374564",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Egor.Ushakov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private checkRemap() : void extracted from public getLine() : int in class com.intellij.debugger.engine.RemappedSourcePosition"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private checkRemap() : void extracted from public getOffset() : int in class com.intellij.debugger.engine.RemappedSourcePosition"
	}],
	"time": "6/8/15 6:06 AM",
	"id": 1100868
}, {
	"sha1": "722ef9156896248ef3fbe83adde0f6ff8f46856a",
	"repository": "https://github.com/oblac/jodd.git",
	"author": "Igor Spasi?",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected resolveFormEncoding() : String extracted from protected formBuffer() : Buffer in class jodd.http.HttpBase"
	}],
	"time": "6/8/15 6:08 AM",
	"id": 1103199
}, {
	"sha1": "72f61ec9b85a740fd09d10ad711e275d2ec2e564",
	"repository": "https://github.com/jeeeyul/eclipse-themes.git",
	"author": "Jeeeyul Lee",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.TestView moved to net.jeeeyul.eclipse.themes.test.e4app.views.TestView"
	}, {
		"type": "Move Class",
		"description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.SplashHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.SplashHandler"
	}, {
		"type": "Move Class",
		"description": "Move Class net.jeeeyul.eclipse.themes.test.e4app.AboutHandler moved to net.jeeeyul.eclipse.themes.test.e4app.handlers.AboutHandler"
	}],
	"time": "6/8/15 6:29 AM",
	"id": 1102923
}, {
	"sha1": "6cf596df183b3c3a38ed5dd9bb3b0100c6548ebb",
	"repository": "https://github.com/realm/realm-java.git",
	"author": "Christian Melchior",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private showStatus(txt String) : void extracted from private showStatus(realm Realm) : void in class io.realm.examples.realmmigrationexample.MigrationExampleActivity"
	}],
	"time": "6/8/15 7:26 AM",
	"id": 1100435
}, {
	"sha1": "7a4dab88185553bd09e827839fdf52e870ef7088",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Dmitry Batrak",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getDataFile(name String) : File extracted from private getJarFile(name String) : VirtualFile in class com.intellij.codeInsight.JavaExternalDocumentationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getDocumentationText(sourceEditorText String) : String extracted from public testImagesInsideJavadocJar() : void in class com.intellij.codeInsight.JavaExternalDocumentationTest"
	}],
	"time": "6/8/15 8:07 AM",
	"id": 1100856
}, {
	"sha1": "8127b21a220ca677c4e59961d019e7753da7ea6e",
	"repository": "https://github.com/fabric8io/fabric8.git",
	"author": "Jimmi Dyson",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected getProbe(prefix String) : Probe extracted from protected getLivenessProbe() : Probe in class io.fabric8.maven.JsonMojo"
	}],
	"time": "6/8/15 8:49 AM",
	"id": 1103963
}, {
	"sha1": "c22d40fab8dfe4c5cad9ba582caf0855ff64b324",
	"repository": "https://github.com/puniverse/quasar.git",
	"author": "pron",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method protected failedSubscribe(s Subscription) : void extracted from public onSubscribe(s Subscription) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelSubscriber"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected failedSubscribe(s Subscriber, t Throwable) : void extracted from public subscribe(s Subscriber) : void in class co.paralleluniverse.strands.channels.reactivestreams.ChannelPublisher"
		}

	],
	"time": "6/8/15 8:49 AM",
	"id": 1104589
}, {
	"sha1": "04bcfe98dbe7b05e508559930c21379ece845732",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Cedric Champeau",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolvedArtifactsContainer from class org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult.ResolvedArtifactResults"
	}, {
		"type": "Move Class",
		"description": "Move Class org.gradle.internal.component.model.ComponentArtifactIdentifier moved to org.gradle.api.artifacts.component.ComponentArtifactIdentifier"
	}],
	"time": "6/8/15 9:02 AM",
	"id": 1104952
}, {
	"sha1": "cb49e436b9d7ee55f2531ebc2ef1863f5c9ba9fe",
	"repository": "https://github.com/rstudio/rstudio.git",
	"author": "JJ Allaire",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected setMaxHeight(maxHeight int) : void extracted from protected wrapMenuBar(menuBar ToolbarMenuBar) : Widget in class org.rstudio.core.client.widget.ScrollableToolbarPopupMenu"
	}],
	"time": "6/8/15 9:53 AM",
	"id": 1100663
}, {
	"sha1": "abbf32571232db81a5343db17a933a9ce6923b44",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Simon Brandhof",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.sonar.core to org.sonar.server"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.sonar.server.notifications to org.sonar.server.notification"
	}],
	"time": "6/8/15 10:22 AM",
	"id": 1101310
}, {
	"sha1": "7ed3f273ab0caf0337c22f0b721d51829bb0c877",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Ekaterina Tuzova",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private addCoursesFromStepic(result List<CourseInfo>, pageNumber int) : boolean extracted from public getCourses() : List<CourseInfo> in class com.jetbrains.edu.stepic.EduStepicConnector"
	}],
	"time": "6/8/15 10:29 AM",
	"id": 1100842
}, {
	"sha1": "18a7bd1fd1a83b3b8d1b245e32f78c0b4443b7a7",
	"repository": "https://github.com/Athou/commafeed.git",
	"author": "Athou",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private fetch(url String) : byte[] extracted from public fetch(feed Feed) : byte[] in class com.commafeed.backend.favicon.DefaultFaviconFetcher"
	}],
	"time": "6/8/15 10:53 AM",
	"id": 1103915
}, {
	"sha1": "4a2247c24efee48de53ca07302b6810ab7205621",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Teryk Bellahsene",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.sonar.server.custommeasure to org.sonar.server.measure.custom"
	}],
	"time": "6/8/15 11:12 AM",
	"id": 1101296
}, {
	"sha1": "4ef35268bb96bb78b2dc698fa68e7ce763cde32e",
	"repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
	"author": "Chris Kittrell",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method public setColumn(column Integer) : void from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to class org.broadleafcommerce.openadmin.dto.FieldMetadata"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public getColumn() : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to class org.broadleafcommerce.openadmin.dto.FieldMetadata"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute private column : Integer from class org.broadleafcommerce.openadmin.dto.BasicFieldMetadata to class org.broadleafcommerce.openadmin.dto.FieldMetadata"
	}],
	"time": "6/8/15 11:14 AM",
	"id": 1106044
}, {
	"sha1": "55ffa2f3353c5dc77fe6b790e5e045b76a07a772",
	"repository": "https://github.com/dreamhead/moco.git",
	"author": "dreamhead",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to protected onRequestAttached(matcher RequestMatcher) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.ActualHttpServer to public redirectTo(url String) : HttpResponseSetting from class com.github.dreamhead.moco.internal.HttpConfiguration"
	}],
	"time": "6/8/15 11:18 AM",
	"id": 1104637
}, {
	"sha1": "1edac0e92080e7c5e971b2d56c8753bf44ea8a6c",
	"repository": "https://github.com/datastax/java-driver.git",
	"author": "olim7t",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public setMaxRequestsPerConnection(distance HostDistance, newMaxRequests int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerHostThreshold(distance HostDistance, newMaxRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public getMaxRequestsPerConnection(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerHostThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public getNewConnectionThreshold(distance HostDistance) : int extracted from public getMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance) : int in class com.datastax.driver.core.PoolingOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public setNewConnectionThreshold(distance HostDistance, newValue int) : PoolingOptions extracted from public setMaxSimultaneousRequestsPerConnectionThreshold(distance HostDistance, newMaxSimultaneousRequests int) : PoolingOptions in class com.datastax.driver.core.PoolingOptions"
	}],
	"time": "6/8/15 11:19 AM",
	"id": 1106247
}, {
	"sha1": "cc0eaf7faa408a04b68e2b5820f3ebcc75420b5b",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Bas Leijdekkers",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private canBinaryExpressionBeUnboxed(lhs PsiExpression, rhs PsiExpression) : boolean extracted from private canBeUnboxed(expression PsiExpression) : boolean in class com.siyeh.ig.migration.UnnecessaryBoxingInspection.UnnecessaryBoxingVisitor"
	}],
	"time": "6/8/15 11:39 AM",
	"id": 1105950
}, {
	"sha1": "04397f41107bd6de41b31d45a4e8e2ed65628bbe",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Anna Kozlova",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>, processed Set<Module>) : void inlined to protected checkForTestRoots(srcModule Module, testFolders Set<VirtualFile>) : void in class com.intellij.testIntegration.createTest.CreateTestAction"
	}],
	"time": "6/8/15 11:50 AM",
	"id": 1105947
}, {
	"sha1": "372f4ae6cebcd664e3b43cade356d1df233f6467",
	"repository": "https://github.com/raphw/byte-buddy.git",
	"author": "Rafael Winterhalter",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute package ARRAY_MODIFIERS : int from class net.bytebuddy.description.type.TypeDescription.ArrayProjection to class net.bytebuddy.description.type.TypeDescription"
	}, {
		"type": "Move Class",
		"description": "Move Class net.bytebuddy.dynamic.TargetType.TypeVariableProxy moved to net.bytebuddy.description.type.generic.GenericTypeDescription.Visitor.Substitutor.ForRawType.TypeVariableProxy"
	}],
	"time": "6/8/15 12:07 PM",
	"id": 1103823
}, {
	"sha1": "138911ce88b05039242b8d1b2bb5b7a59008f5ee",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Dmitry Batrak",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getHTMLEditorKit(noGapsBetweenParagraphs boolean) : HTMLEditorKit extracted from public getHTMLEditorKit() : HTMLEditorKit in class com.intellij.util.ui.UIUtil"
	}],
	"time": "6/8/15 12:40 PM",
	"id": 1105941
}, {
	"sha1": "c55a8c3761e9aae9f375d312c14b1bbb9ee9c0fa",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Julien Lancelot",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private createComponentDto(reportComponent Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent"
	}],
	"time": "6/8/15 1:21 PM",
	"id": 1105969
}, {
	"sha1": "ce1f3d07976de31aed8f8189ec5e1a6453f4b580",
	"repository": "https://github.com/glyptodon/guacamole-client.git",
	"author": "Michael Jumper",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private CONFIRM_NEW_PASSWORD : Field from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private CONFIRM_NEW_PASSWORD_PARAMETER : String from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private EXPIRED_PASSWORD : CredentialsInfo from class org.glyptodon.guacamole.auth.jdbc.user.UserContextService to class org.glyptodon.guacamole.auth.jdbc.user.UserService"
	}],
	"time": "6/8/15 2:17 PM",
	"id": 1106007
}, {
	"sha1": "56d4b999e8be70be237049708f019c278c356e71",
	"repository": "https://github.com/puniverse/quasar.git",
	"author": "circlespainter",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public pushMethod(entry int, numSlots int, method String, sourceLine int) : void inlined to public pushMethod(entry int, numSlots int) : void in class co.paralleluniverse.fibers.Stack"
	}, {
		"type": "Inline Method",
		"description": "Inline Method package verifySuspend(current Fiber, exc boolean) : Fiber inlined to package verifySuspend(current Fiber) : Fiber in class co.paralleluniverse.fibers.Fiber"
	}, {
		"type": "Inline Method",
		"description": "Inline Method public checkInstrumentation(exc boolean) : boolean inlined to public checkInstrumentation() : boolean in class co.paralleluniverse.fibers.Fiber"
	}, {
		"type": "Inline Method",
		"description": "Inline Method public popMethod(catchAll boolean) : void inlined to public popMethod() : void in class co.paralleluniverse.fibers.Stack"
	}],
	"time": "6/8/15 3:49 PM",
	"id": 1106350
}, {
	"sha1": "2b89553db5081fe4e55b7b34d636d0ea2acf71c5",
	"repository": "https://github.com/hibernate/hibernate-orm.git",
	"author": "Steve Ebersole",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private categorizeAnnotatedClass(annotatedClass Class, attributeConverterManager AttributeConverterManager) : void extracted from public AnnotationMetadataSourceProcessorImpl(sources MetadataSources, rootMetadataBuildingContext MetadataBuildingContextRootImpl, jandexView IndexView) in class org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl"
	}],
	"time": "6/8/15 4:24 PM",
	"id": 1106355
}, {
	"sha1": "446e2537895c15b404a74107069a12f3fc404b15",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Philip Thompson",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.hadoop.BulkRecordWriter.NullOutputHandler moved to org.apache.cassandra.hadoop.cql3.CqlBulkRecordWriter.NullOutputHandler"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.hadoop.AbstractColumnFamilyInputFormat.SplitCallable moved to org.apache.cassandra.hadoop.cql3.CqlInputFormat.SplitCallable"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageFilter() : void renamed to public testCqlNativeStorageFilter() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageFullCopy() : void renamed to public testCqlNativeStorageFullCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageBagOnlyCopy() : void renamed to public testCqlNativeStorageBagOnlyCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageSingleTupleCopy() : void renamed to public testCqlNativeStorageSingleTupleCopy() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageCounterCF() : void renamed to public testCqlNativeStorageCounterCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageJoin() : void renamed to public testCqlNativeStorageJoin() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageCompositeColumnCF() : void renamed to public testCqlNativeStorageCompositeColumnCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageSchema() : void renamed to public testCqlNativeStorageSchema() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testCassandraStorageCompositeKeyCF() : void renamed to public testCqlNativeStorageCompositeKeyCF() : void in class org.apache.cassandra.pig.ThriftColumnFamilyTest"
	}],
	"time": "6/8/15 4:41 PM",
	"id": 1106365
}, {
	"sha1": "0ba343846f21649e29ffc600f30a7f3e463fb24c",
	"repository": "https://github.com/amplab/tachyon.git",
	"author": "Bin Fan",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.BlockMeta"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass tachyon.worker.block.meta.BlockMetaBase from class tachyon.worker.block.meta.TempBlockMeta"
	}],
	"time": "6/10/15 3:33 AM",
	"id": 1109449
}, {
	"sha1": "f1dfb66a368760e77094ac1e3860b332cf0e4eb5",
	"repository": "https://github.com/raphw/byte-buddy.git",
	"author": "Rafael Winterhalter",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.Explicit to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmMethod to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.ForLoadedExecutable.OfLegacyVmConstructor to protected wrap(values List<ParameterDescription>) : ParameterList from class net.bytebuddy.description.method.ParameterList.AbstractBase"
	}],
	"time": "6/10/15 5:31 AM",
	"id": 1108762
}, {
	"sha1": "19a49f8f36b2f6d82534dc13504d672e41a3a8d1",
	"repository": "https://github.com/kuujo/copycat.git",
	"author": "Jordan Halterman",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doAppendEntries(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private doCheckPreviousEntry(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.ActiveState to private handleAppend(request AppendRequest) : AppendResponse from class net.kuujo.copycat.raft.state.PassiveState"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.ActiveState to private applyCommits(commitIndex long) : CompletableFuture<Void> from class net.kuujo.copycat.raft.state.PassiveState"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.ActiveState to private applyIndex(globalIndex long) : void from class net.kuujo.copycat.raft.state.PassiveState"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected transition : boolean from class net.kuujo.copycat.raft.state.ActiveState to class net.kuujo.copycat.raft.state.PassiveState"
	}],
	"time": "6/10/15 6:01 AM",
	"id": 1108190
}, {
	"sha1": "ff9041dc486adf0a8dec41f80bbfbdd49f97016a",
	"repository": "https://github.com/elastic/elasticsearch.git",
	"author": "javanna",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected buildFQuery(builder XContentBuilder, params Params) : void extracted from protected doXContent(builder XContentBuilder, params Params) : void in class org.elasticsearch.index.query.QueryFilterBuilder"
	}],
	"time": "6/10/15 7:46 AM",
	"id": 1107917
}, {
	"sha1": "484038e916dc40bf87eca10c77889d79eca96c4d",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Eugene Zhuravlev",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public removeNodes(paths Collection<TreePath>) : void extracted from public removeNode(nodePath TreePath) : void in class com.intellij.compiler.options.AnnotationProcessorsPanel.MyTreeModel"
	}],
	"time": "6/10/15 9:11 AM",
	"id": 1107379
}, {
	"sha1": "7668c875dfa7240b1ec08eb60b42107bae1b4cd3",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Julien Lancelot",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private createComponentDto(reportComponent Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep to private createComponentDto(reportComponent Component, component Component) : ComponentDto from class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent"
	}],
	"time": "6/10/15 9:30 AM",
	"id": 1107718
}, {
	"sha1": "091ec857d24bfe139d2a5ce143ffc9b32b21cd7c",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Julien Lancelot",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.sonar.core.component.SnapshotQuery moved to org.sonar.core.component.db.SnapshotQuery"
	}, {
		"type": "Move Class",
		"description": "Move Class org.sonar.core.component.SnapshotQueryTest moved to org.sonar.core.component.db.SnapshotQueryTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.sonar.server.computation.step.PersistComponentsStep.PersisComponent renamed to org.sonar.server.computation.step.PersistComponentsStep.PersistComponentExecutor"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public not_update_create_at() : void renamed to public do_not_update_created_at_on_existing_component() : void in class org.sonar.server.computation.step.PersistComponentsStepTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public fail_to_get_periods_if_not_initialized() : void renamed to public get_periods_throws_illegal_state_exception_if_not_initialized() : void in class org.sonar.server.computation.period.PeriodsHolderImplTest"
	}],
	"time": "6/10/15 9:30 AM",
	"id": 1107713
}, {
	"sha1": "219d6ddfd1db62c11efb57e0216436874e087834",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Michael Golubev",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass com.intellij.remoteServer.agent.util.log.LogPipeBase from class com.intellij.remoteServer.agent.util.log.LogPipe"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass com.intellij.remoteServer.impl.runtime.log.LoggingHandlerBase from class com.intellij.remoteServer.impl.runtime.log.LoggingHandlerImpl"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private addAdditionalLoggingHandler(loggingHandler LoggingHandlerBase) : void extracted from public addAdditionalLog(presentableName String) : LoggingHandler in class com.intellij.remoteServer.impl.runtime.log.DeploymentLogManagerImpl"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentNodeImpl"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getLoggingHandler() : LoggingHandlerImpl renamed to public getComponent() : JComponent in class com.intellij.remoteServer.impl.runtime.ui.tree.ServersTreeStructure.DeploymentLogNode"
	}],
	"time": "6/10/15 4:04 PM",
	"id": 1107345
}, {
	"sha1": "45ada13b852af85e1ae0491267a0239d9bdf6f3f",
	"repository": "https://github.com/HubSpot/Singularity.git",
	"author": "tpetr",
	"refactorings": [{
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected validator : SingularityValidator from class com.hubspot.singularity.resources.DeployResource to class com.hubspot.singularity.resources.AbstractRequestResource"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected validator : SingularityValidator from class com.hubspot.singularity.resources.RequestResource to class com.hubspot.singularity.resources.AbstractRequestResource"
	}],
	"time": "6/10/15 4:07 PM",
	"id": 1106945
}, {
	"sha1": "59fd9e696cec5f2ed44c27422bbc426b11647321",
	"repository": "https://github.com/liferay/liferay-portal.git",
	"author": "Andrea Di Giorgi",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public addDependency(project Project, configurationName String, group String, name String, version String, classifier String, transitive boolean) : Dependency extracted from public addDependency(project Project, configurationName String, group String, name String, version String, transitive boolean) : Dependency in class com.liferay.gradle.util.GradleUtil"
	}],
	"time": "6/10/15 6:43 PM",
	"id": 1106576
}, {
	"sha1": "44dea1f292933192ea5287d9b3e14a7daaef3c0f",
	"repository": "https://github.com/FasterXML/jackson-databind.git",
	"author": "Cowtowncoder",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222BeanB moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222BeanB"
	}, {
		"type": "Move Class",
		"description": "Move Class com.fasterxml.jackson.failing.TestExternalTypeId222.Issue222Bean moved to com.fasterxml.jackson.databind.jsontype.TestExternalId.Issue222Bean"
	}],
	"time": "6/10/15 8:33 PM",
	"id": 1109077
}, {
	"sha1": "6d10621465c0e6ae81ad8d240d70a55c72caeea6",
	"repository": "https://github.com/amplab/tachyon.git",
	"author": "Bin Fan",
	"refactorings": [{
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private mBlockSize : long from class tachyon.worker.block.meta.BlockMetaBase to class tachyon.worker.block.meta.BlockMeta"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public getBlockSize() : long from class tachyon.worker.block.meta.BlockMetaBase to class tachyon.worker.block.meta.BlockMeta"
	}],
	"time": "6/10/15 9:21 PM",
	"id": 1109425
}, {
	"sha1": "96a2c3410f3c71d3ab20857036422f1d64c3a6d3",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "Steve Kondik",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private cleanupProximityLocked() : void extracted from private cleanupProximity() : void in class com.android.server.power.PowerManagerService"
	}],
	"time": "6/11/15 12:41 AM",
	"id": 1107119
}, {
	"sha1": "f77804dad35c13d9ff96456e85737883cf7ddd99",
	"repository": "https://github.com/elastic/elasticsearch.git",
	"author": "Simon Willnauer",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.elasticsearch.index.merge.policy to org.elasticsearch.index.shard"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getMergePolicyProvider() : MergePolicyProvider renamed to public getMergePolicy() : MergePolicy in class org.elasticsearch.index.engine.EngineConfig"
	}],
	"time": "6/11/15 6:58 AM",
	"id": 1107905
}, {
	"sha1": "c928852d4ab7d8c744063979208709ed4429b8e9",
	"repository": "https://github.com/elastic/elasticsearch.git",
	"author": "Christoph B\u00fcscher",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryParser to public newFilter(parseContext QueryParseContext, fieldPattern String, queryName String) : Query from class org.elasticsearch.index.query.ExistsQueryBuilder"
	}],
	"time": "6/11/15 9:40 AM",
	"id": 1107899
}, {
	"sha1": "5a9b7249e3d092a78ac8e7d48aeeb62bf1c44e20",
	"repository": "https://github.com/checkstyle/checkstyle.git",
	"author": "Roman Ivanov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private processField(ast DetailAST, parentType int) : void extracted from private processIDENT(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.RequireThisCheck"
	}],
	"time": "6/15/15 1:56 AM",
	"id": 1111984
}, {
	"sha1": "a97341973c3b683d62d1422e5404ed5c7ccf45f8",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Anna Kozlova",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private setNewName(newText String) : PsiElement extracted from public bindToElement(element PsiElement) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private setNewName(newText String) : PsiElement extracted from public handleElementRename(newElementName String) : PsiElement in class org.jetbrains.plugins.javaFX.fxml.refs.FxmlReferencesContributor.MyJavaClassReferenceProvider.JavaClassReferenceWrapper"
	}],
	"time": "6/15/15 3:56 AM",
	"id": 1110287
}, {
	"sha1": "3a0603f8f778be3219a5a0f3a7845cda65f1e172",
	"repository": "https://github.com/datastax/java-driver.git",
	"author": "Alexandre Dutra",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public values(names List<String>, values List<Object>) : Insert extracted from public values(names String[], values Object[]) : Insert in class com.datastax.driver.core.querybuilder.Insert"
	}],
	"time": "6/15/15 4:48 AM",
	"id": 1110245
}, {
	"sha1": "d71154ed21e2d5c65bb0ddb000bcb04ca5735048",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Vladimir Krivosheev",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public canonicalizePath(url String, baseUrl Url, baseUrlIsFile boolean) : String extracted from protected canonicalizeUrl(url String, baseUrl Url, trimFileScheme boolean, sourceIndex int, baseUrlIsFile boolean) : Url in class org.jetbrains.debugger.sourcemap.SourceResolver"
	}],
	"time": "6/15/15 5:59 AM",
	"id": 1110282
}, {
	"sha1": "d5b2bb8cd1393f1c5a5bb623e3d8906cd57e53c4",
	"repository": "https://github.com/undertow-io/undertow.git",
	"author": "Stuart Douglas",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper, elseBranch HandlerWrapper) : PredicatesHandler extracted from public addPredicatedHandler(predicate Predicate, handlerWrapper HandlerWrapper) : PredicatesHandler in class io.undertow.predicate.PredicatesHandler"
		}, {
			"type": "Move Method",
			"description": "Move Method private isOperator(op String) : boolean from class io.undertow.predicate.PredicateParser to class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		}, {
			"type": "Move Class",
			"description": "Move Class io.undertow.util.PredicateTokeniser.Token moved to io.undertow.server.handlers.builder.PredicatedHandlersParser.Token"
		}, {
			"type": "Move Method",
			"description": "Move Method private isOperator(op String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		},{
			"type":"Move Method",
			"description":"Move Method private coerceToType(string String, token Token, type Class, attributeParser ExchangeAttributeParser) : Object from class io.undertow.predicate.PredicateParser to private coerceToType(string String, token Token, type Class, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		},{
			"type":"Move Method",
			"description":"Move Method package tokenize(string String) : Deque from class io.undertow.server.handlers.builder.HandlerParser to public tokenize(string String) : Deque from class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		},{
			"type":"Move Method",
			"description":"Move Method private isSpecialChar(token String) : boolean from class io.undertow.predicate.PredicateParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		},{
			"type":"Move Method",
			"description":"Move Method private coerceToType(string String, token Token, type Class, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.HandlerParser to private coerceToType(string String, token Token, type Class, attributeParser ExchangeAttributeParser) : Object from class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		},{
			"type":"Move Method",
			"description":"Move Method private precedence(operator String) : int from class io.undertow.server.handlers.builder.HandlerParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		},{
			"type":"Move Method",
			"description":"Move Method private precedence(operator String) : int from class io.undertow.predicate.PredicateParser to private precedence(operator String) : int from class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		},{
			"type":"Move Method",
			"description":"Move Method private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.HandlerParser to private isSpecialChar(token String) : boolean from class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		},{
			"type":"Move Method",
			"description":"Move Method private handleSingleArrayValue(string String, builder PredicateBuilder, tokens Deque, token Token, attributeParser ExchangeAttributeParser, endChar String) : Node from class io.undertow.predicate.PredicateParser to private handleSingleArrayValue(string String, builder Token, tokens Deque, endChar String) : Node from class io.undertow.server.handlers.builder.PredicatedHandlersParser"
		}
	],
	"time": "6/15/15 6:06 AM",
	"id": 1111161
}, {
	"sha1": "f6212a7e474f812f31ddbce6d4f7a7a0d498b751",
	"repository": "https://github.com/Netflix/eureka.git",
	"author": "Bertrand Renuart",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected onRemoteStatusChanged(oldStatus InstanceStatus, newStatus InstanceStatus) : void extracted from private updateInstanceRemoteStatus() : void in class com.netflix.discovery.DiscoveryClient"
	}],
	"time": "6/15/15 6:55 AM",
	"id": 1116967
}, {
	"sha1": "718782014519034b28f6d3182fd9d340b7b31a74",
	"repository": "https://github.com/eclipse/vert.x.git",
	"author": "purplefox",
	"refactorings": [{
		"type": "Push Down Attribute",
		"description": "Push Down Attribute protected connectionMap : Map<Channel,C> from class io.vertx.core.net.impl.VertxHandler to class io.vertx.core.http.impl.VertxHttpHandler"
	}],
	"time": "6/15/15 7:22 AM",
	"id": 1112031
}, {
	"sha1": "b40adc25008b6f608ee3eb3422c8884fff987337",
	"repository": "https://github.com/orientechnologies/orientdb.git",
	"author": "lvca",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected readSynchResult(network OChannelBinaryAsynchClient, database ODatabaseDocument) : Object extracted from public command(iCommand OCommandRequestText) : Object in class com.orientechnologies.orient.client.remote.OStorageRemote"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from private indexGet() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public serializeValue(listener OAbstractCommandResultListener, result Object) : void extracted from protected command() : void in class com.orientechnologies.orient.server.network.protocol.binary.ONetworkProtocolBinary"
	}],
	"time": "6/15/15 7:43 AM",
	"id": 1110072
}, {
	"sha1": "06fa57185cba7304c69a7d6c792a15f2632e3e02",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "S\u00e9bastien Lesaint",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.sonar.server.computation.measure.Measure.QualityGateStatus moved to org.sonar.server.computation.measure.QualityGateStatus"
	}],
	"time": "6/15/15 8:07 AM",
	"id": 1110654
}, {
	"sha1": "3972b9b3d4e03bdb5e62dfa663e3e0a1871e3c9f",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Yaroslav Lepenkin",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.intellij.psi.codeStyle.autodetect.NewLineBlocksIterator moved to com.intellij.psi.formatter.common.NewLineBlocksIterator"
	}],
	"time": "6/15/15 9:02 AM",
	"id": 1110272
}, {
	"sha1": "1bf2875e9d73e2d1cd3b58200d5300485f890ff5",
	"repository": "https://github.com/droolsjbpm/drools.git",
	"author": "Mario Fusco",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected initPriorityQueue(kBase InternalKnowledgeBase) : BinaryHeapQueue extracted from public AgendaGroupQueueImpl(name String, kBase InternalKnowledgeBase) in class org.drools.core.common.AgendaGroupQueueImpl"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private internalAddEntry(entry PropagationEntry) : void extracted from public addEntry(entry PropagationEntry) : void in class org.drools.core.phreak.SynchronizedPropagationList"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private evaluatingActionQueue : AtomicBoolean from class org.drools.core.impl.StatefulKnowledgeSessionImpl to class org.drools.reteoo.common.ReteWorkingMemory"
	}, {
		"type": "Move Method",
		"description": "Move Method public notifyHalt() : void from class org.drools.core.common.DefaultAgenda to class org.drools.core.phreak.SynchronizedBypassPropagationList"
	}, {
		"type": "Move Method",
		"description": "Move Method public notifyHalt() : void from class org.drools.reteoo.common.ReteAgenda to class org.drools.core.phreak.SynchronizedBypassPropagationList"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PhreakTimerNode.TimerAction"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public requiresImmediateFlushingIfNotFiring() : boolean renamed to public requiresImmediateFlushing() : boolean in class org.drools.core.phreak.PropagationEntry.AbstractPropagationEntry"
	}],
	"time": "6/15/15 9:41 AM",
	"id": 1112091
}, {
	"sha1": "b7cba6a700d8c5e456cdeffe9c5bf54563eab7d3",
	"repository": "https://github.com/spring-projects/spring-data-rest.git",
	"author": "Greg Turnquist",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected setupMockMvc() : void extracted from public setUp() : void in class org.springframework.data.rest.webmvc.AbstractWebIntegrationTests"
	}],
	"time": "6/15/15 10:32 AM",
	"id": 1111363
}, {
	"sha1": "d5134b15fe6545ec8ab5c2256006cd6fe19eac92",
	"repository": "https://github.com/datastax/java-driver.git",
	"author": "Kevin Gallardo",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package getPreparedQuery(type QueryType, columns Set<ColumnMapper<?>>, options Option[]) : PreparedStatement extracted from package getPreparedQuery(type QueryType, options Option[]) : PreparedStatement in class com.datastax.driver.mapping.Mapper"
	}],
	"time": "6/15/15 10:45 AM",
	"id": 1110240
}, {
	"sha1": "669e0722324965e3c99f29685517ac24d4ff2848",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Manju James",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getClient(timeout long, scheme ClientAuthHashScheme, useAdmin boolean) : Client extracted from public getClient(timeout long, scheme ClientAuthHashScheme) : Client in class org.voltdb.regressionsuites.RegressionSuite"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private runPausedMode(isAdmin boolean) : void extracted from public testPausedMode() : void in class org.voltdb.TestClientInterface"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler, isAdmin boolean) : AdHocPlannerWork extracted from public makeStoredProcAdHocPlannerWork(replySiteId long, sql String, userParams Object[], singlePartition boolean, context CatalogContext, completionHandler AsyncCompilerWorkCompletionHandler) : AdHocPlannerWork in class org.voltdb.compiler.AdHocPlannerWork"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[], readOnly boolean, isAdmin boolean) : AdHocPlannedStmtBatch extracted from public mockStatementBatch(replySiteId long, sql String, extractedValues Object[], paramTypes VoltType[], userParams Object[], partitionParamIndex int, catalogHash byte[]) : AdHocPlannedStmtBatch in class org.voltdb.compiler.AdHocPlannedStmtBatch"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getListenerAddress(hostId int, useAdmin boolean) : String extracted from public getListenerAddress(hostId int) : String in class org.voltdb.regressionsuites.LocalCluster"
	}],
	"time": "6/15/15 10:56 AM",
	"id": 1110155
}, {
	"sha1": "5ff305abb3068e420d8e54a796591d75acc8b8be",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Duarte Meneses",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface org.sonar.api.utils.ProjectTempFolder from class org.sonar.api.utils.internal.DefaultTempFolder"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface org.sonar.api.utils.ProjectTempFolder from class org.sonar.api.utils.internal.JUnitTempFolder"
	}],
	"time": "6/15/15 12:04 PM",
	"id": 1117448
}, {
	"sha1": "e9efc045fbc6fa893c66a03b72b7eedb388cf96c",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "wweiss",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public setMpUniqueIdListener(listener DurableMpUniqueIdListener) : void extracted from public setMpDRGateway(mpGateway PartitionDRGateway) : void in class org.voltdb.iv2.SpScheduler"
	}],
	"time": "6/15/15 12:27 PM",
	"id": 1110153
}, {
	"sha1": "658a918eebcbdeb4f920c2947ca8d0e79ad86d89",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "Michael Bestas",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private initTickerView() : void extracted from protected makeStatusBarView() : PhoneStatusBarView in class com.android.systemui.statusbar.phone.PhoneStatusBar"
	}],
	"time": "6/15/15 1:36 PM",
	"id": 1112638
}, {
	"sha1": "2252ed3754bff8c39db48d172ac76ac5a4e15359",
	"repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
	"author": "Nick Bradbury",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private shouldShowTagToolbar() : boolean inlined to public onCreateView(inflater LayoutInflater, container ViewGroup, savedInstanceState Bundle) : View in class org.wordpress.android.ui.reader.ReaderPostListFragment"
	}],
	"time": "6/15/15 3:08 PM",
	"id": 1117151
}, {
	"sha1": "20d39f7af2165c67d5221f556f58820c992d2cc6",
	"repository": "https://github.com/spring-projects/spring-boot.git",
	"author": "Phillip Webb",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getFullKey(path String, key String) : String extracted from private flatten(properties Properties, input Map<String,Object>, path String) : void in class org.springframework.boot.cloudfoundry.VcapApplicationListener"
	}],
	"time": "6/15/15 3:31 PM",
	"id": 1112627
}, {
	"sha1": "9e61a71540da58c3208fd2c7737f793c3f81e5ae",
	"repository": "https://github.com/fabric8io/fabric8.git",
	"author": "James Strachan",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public createGogsWebhook(kubernetes KubernetesClient, log Log, gogsUser String, gogsPwd String, repoName String, webhookUrl String, webhookSecret String) : boolean extracted from public execute() : void in class io.fabric8.maven.CreateGogsWebhook"
	}],
	"time": "6/15/15 4:16 PM",
	"id": 1116770
}, {
	"sha1": "1cfc6f64f64353bc5530a8ce8cdacfc3eba3e7b2",
	"repository": "https://github.com/spring-projects/spring-boot.git",
	"author": "Oliver Gierke",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private addEntityScanBeanPostProcessor(registry BeanDefinitionRegistry, packagesToScan Set<String>) : void extracted from public registerBeanDefinitions(importingClassMetadata AnnotationMetadata, registry BeanDefinitionRegistry) : void in class org.springframework.boot.orm.jpa.EntityScanRegistrar"
	}],
	"time": "6/15/15 4:21 PM",
	"id": 1112624
}, {
	"sha1": "1c7c03dd9e6d5810ad22d37ecae59722c219ac35",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Thomas Gummerer",
	"refactorings": [{
		"type": "Rename Class",
		"description": "Rename Class com.facebook.buck.cli.AdbOptions renamed to com.facebook.buck.cli.AdbCommandLineOptions"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.facebook.buck.cli.TargetDeviceOptionsTest renamed to com.facebook.buck.cli.TargetDeviceCommandLineOptionsTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.facebook.buck.cli.TargetDeviceOptions renamed to com.facebook.buck.cli.TargetDeviceCommandLineOptions"
	}, {
		"type": "Rename Package",
		"description": "Rename Package com.facebook.buck.cli to com.facebook.buck.event"
	}, {
		"type": "Rename Package",
		"description": "Rename Package com.facebook.buck.cli to com.facebook.buck.android"
	}],
	"time": "6/15/15 5:07 PM",
	"id": 1116663
}, {
	"sha1": "1cacbe2ad700275bc575234ff2b32ee0d6493817",
	"repository": "https://github.com/Netflix/eureka.git",
	"author": "Bertrand Renuart",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected fireEvent(event DiscoveryEvent) : void extracted from protected onRemoteStatusChanged(oldStatus InstanceStatus, newStatus InstanceStatus) : void in class com.netflix.discovery.DiscoveryClient"
	},{
		"type": "Extract Superclass",
		"description": "Extract Superclass com.netflix.discovery.DiscoveryEvent from class com.netflix.discovery.StatusChangeEvent"
	}],
	"time": "6/15/15 5:16 PM",
	"id": 1116963
}, {
	"sha1": "ba5e6d44526a2491a7004423ca2ad780c6992c46",
	"repository": "https://github.com/google/closure-compiler.git",
	"author": "dimvar",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private getRawTypeFromJSType(t JSType) : RawNominalType inlined to private visitOtherPropertyDeclaration(getProp Node) : void in class com.google.javascript.jscomp.GlobalTypeInfo.ProcessScope"
	}],
	"time": "6/15/15 8:22 PM",
	"id": 1116977
}, {
	"sha1": "457a7f637ddb226acf477cae0b04c8ff16ec9a50",
	"repository": "https://github.com/Netflix/eureka.git",
	"author": "David Liu",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass com.netflix.discovery.BaseDiscoveryClientTester from class com.netflix.discovery.AbstractDiscoveryClientTester"
	}],
	"time": "6/15/15 10:22 PM",
	"id": 1117875
}, {
	"sha1": "bd0d3bf75d31a8b5db34b8b66dfb28e5e1f492de",
	"repository": "https://github.com/linkedin/rest.li.git",
	"author": "Xiao Ma",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected extendRecordBaseClass(templateClass JDefinedClass) : void extracted from protected generateRecord(templateClass JDefinedClass, recordSpec RecordTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected extendWrappingMapBaseClass(valueJClass JClass, mapClass JDefinedClass) : void extracted from protected generateMap(mapClass JDefinedClass, mapSpec MapTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected extendUnionBaseClass(unionClass JDefinedClass) : void extracted from protected generateUnion(unionClass JDefinedClass, unionSpec UnionTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected extendWrappingArrayBaseClass(itemJClass JClass, arrayClass JDefinedClass) : void extracted from protected generateArray(arrayClass JDefinedClass, arrayDataTemplateSpec ArrayTemplateSpec) : void in class com.linkedin.pegasus.generator.JavaDataTemplateGenerator"
	}],
	"time": "6/16/15 12:30 AM",
	"id": 1116704
}, {
	"sha1": "bba4af3f52064b5a2de2c9a57f9d34ba67dcdd8c",
	"repository": "https://github.com/codinguser/gnucash-android.git",
	"author": "Ngewi Fet",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method public getAllTransactionsCount() : long from class org.gnucash.android.db.TransactionsDbAdapter to public getRecordsCount() : long from class org.gnucash.android.db.DatabaseAdapter"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testDeletingAccountShouldDeleteSplits() : void renamed to public shouldDeleteSplitsWhenAccountDeleted() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testAlphabeticalSorting() : void renamed to public shouldBeAlphabeticallySortedByDefault() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testAddAccountWithTransaction() : void renamed to public shouldAddAccountsToDatabase() : void in class org.gnucash.android.test.unit.db.AccountsDbAdapterTest"
	}],
	"time": "6/16/15 6:15 AM",
	"id": 1116810
}, {
	"sha1": "32a8c9086040fd6d6fa11a214570ee4f75a4301f",
	"repository": "https://github.com/eclipse/vert.x.git",
	"author": "purplefox",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private handleHttp(conn ServerConnection, ch Channel, msg Object) : void inlined to protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler"
	},{
		"type": "Inline Method",
		"description": "Inline Method private handleExpectWebsockets(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void inlined to protected doMessageReceived(conn ServerConnection, ctx ChannelHandlerContext, msg Object) : void in class io.vertx.core.http.impl.HttpServerImpl.ServerHandler"
	}],
	"time": "6/16/15 6:37 AM",
	"id": 1116953
}, {
	"sha1": "72b5348307d86b1a118e546c24d97f1ac1895bdb",
	"repository": "https://github.com/crate/crate.git",
	"author": "Sebastian Utz",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private rightMergeNode : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to class io.crate.planner.node.dql.join.NestedLoopNode"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute private downstreamNodes : List<String> from class io.crate.planner.node.dql.CollectNode to class io.crate.planner.node.dql.AbstractDQLPlanNode"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute private downstreamNodes : List<String> from class 2 others to class io.crate.planner.node.dql.AbstractDQLPlanNode"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute private downstreamExecutionNodeId : int from class io.crate.planner.node.dql.CollectNode to class io.crate.planner.node.dql.AbstractDQLPlanNode"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute private downstreamExecutionNodeId : int from class 2 others to class io.crate.planner.node.dql.AbstractDQLPlanNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public downstreamNodes(nodes SetString) : void from class io.crate.planner.node.dql.MergeNode to class  io.crate.planner.node.dql.AbstractDQLPlanNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public downstreamNodes(nodes SetString) : void from class io.crate.planner.node.dql.join.NestedLoopNode to class  io.crate.planner.node.dql.AbstractDQLPlanNode"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private leftMergeNode : MergeNode from class io.crate.planner.node.dql.join.NestedLoop to class io.crate.planner.node.dql.join.NestedLoopNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public downstreamExecutionNodeId(downstreamExecutionNodeId int) : void from class io.crate.planner.node.dql.MergeNode to class io.crate.planner.node.dql.AbstractDQLPlanNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public downstreamNodes(downStreamNodes List<String>) : void from class io.crate.planner.node.dql.CollectNode to class io.crate.planner.node.dql.AbstractDQLPlanNode"
	}],
	"time": "6/16/15 7:01 AM",
	"id": 1117005
}, {
	"sha1": "5f18bed8da4dda4fa516907ecbbe28f712e944f7",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Konstantin Bulenkov",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.intellij.util.ui.components.JBPanel moved to com.intellij.ui.components.JBPanel"
	}],
	"time": "6/16/15 7:14 AM",
	"id": 1112702
}, {
	"sha1": "1089957b645bde069d3864563bbf1f7c7da8045c",
	"repository": "https://github.com/orientechnologies/orientdb.git",
	"author": "Tglman",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected rewriteLinksInDocument(document ODocument, rewrite OIndex<OIdentifiable>) : void extracted from private rewriteLinksInDocument(document ODocument) : void in class com.orientechnologies.orient.core.db.tool.ODatabaseImport"
	}],
	"time": "6/16/15 7:33 AM",
	"id": 1112642
}, {
	"sha1": "f1533756133dec84ce8218202585ac85904da7c9",
	"repository": "https://github.com/belaban/JGroups.git",
	"author": "Bela Ban",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public isInMembersList(sender IpAddress) : boolean extracted from public authenticate(token AuthToken, msg Message) : boolean in class org.jgroups.auth.FixedMembershipToken"
	}],
	"time": "6/16/15 8:16 AM",
	"id": 1116609
}, {
	"sha1": "7c26ac669a4e17ca1d2319a5049a56424fd33104",
	"repository": "https://github.com/hierynomus/sshj.git",
	"author": "Jeroen van Erp",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class nl.javadude.sshj.connection.channel.ChannelCloseEofTest moved to com.hierynomus.sshj.connection.channel.ChannelCloseEofTest"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass com.hierynomus.sshj.SshIntegrationTestBase from class com.hierynomus.sshj.connection.channel.ChannelCloseEofTest"
	}],
	"time": "6/16/15 9:12 AM",
	"id": 1116627
}, {
	"sha1": "d7f781da42e54824c17875a6036d3448672637f5",
	"repository": "https://github.com/processing/processing.git",
	"author": "Ben Fry",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute protected ERROR_BACKGROUND_IMAGE_SIZE : String from class processing.core.PConstants to class processing.core.PGraphics"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected ERROR_TEXTFONT_NULL_PFONT : String from class processing.core.PConstants to class processing.core.PGraphics"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected ERROR_BACKGROUND_IMAGE_FORMAT : String from class processing.core.PConstants to class processing.core.PGraphics"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected ERROR_PUSHMATRIX_OVERFLOW : String from class processing.core.PConstants to class processing.core.PGraphics"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected ERROR_PUSHMATRIX_UNDERFLOW : String from class processing.core.PConstants to class processing.core.PGraphics"
	}],
	"time": "6/16/15 10:03 AM",
	"id": 1116686
}, {
	"sha1": "6599c748ef35d38085703cf3bd41b9b5b6af5f32",
	"repository": "https://github.com/nutzam/nutz.git",
	"author": "wendal",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public from(dao Dao, obj Object, filter FieldFilter, ignoreNull boolean, ignoreZero boolean, ignoreDate boolean, ignoreId boolean, ignoreName boolean, ignorePk boolean) : Cnd extracted from public from(dao Dao, obj Object, filter FieldFilter) : Cnd in class org.nutz.dao.Cnd"
	}],
	"time": "6/16/15 10:47 AM",
	"id": 1116655
}, {
	"sha1": "e3b0d87b3ca0fd27cec39937cb3dc3a05b0cfc4e",
	"repository": "https://github.com/infinispan/infinispan.git",
	"author": "Dan Berindei",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected waitForCacheToStabilize(cache Cache<Object,Object>, cacheConfig Configuration) : void extracted from public perform(ctx InvocationContext) : Object in class org.infinispan.commands.CreateCacheCommand"
	}],
	"time": "6/16/15 10:48 AM",
	"id": 1117171
}, {
	"sha1": "c7b6a7aa878aabd6400d2df0490e1eb2b810c8f9",
	"repository": "https://github.com/crate/crate.git",
	"author": "Mathias Fussenegger",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public plan(relation AnalyzedRelation, consumerContext ConsumerContext) : PlannedAnalyzedRelation extracted from public plan(rootRelation AnalyzedRelation, plannerContext Context) : Plan in class io.crate.planner.consumer.ConsumingPlanner"
	}],
	"time": "6/16/15 12:04 PM",
	"id": 1117938
}, {
	"sha1": "6abc40ed4850d74ee6c155f5a28f8b34881a0284",
	"repository": "https://github.com/BuildCraft/BuildCraft.git",
	"author": "Adrian",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private initTemplate() : void extracted from public initialize() : void in class buildcraft.builders.TileFiller"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private initTemplate() : void extracted from public updateEntity() : void in class buildcraft.builders.TileFiller"
	}],
	"time": "6/16/15 12:06 PM",
	"id": 1117830
}, {
	"sha1": "ec52e77ecde749e7c5a483b26cbd8041f2a5a33c",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Benedict Elliott Smith",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List<Future<?>> extracted from public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> in class org.apache.cassandra.db.compaction.CompactionManager"
	}],
	"time": "6/16/15 12:28 PM",
	"id": 1117885
}, {
	"sha1": "bf5ee44b3b576e01ab09cae9f50300417b01dc07",
	"repository": "https://github.com/robovm/robovm.git",
	"author": "BlueRiverInteractive",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getMakerOlympusData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public shouldExcludeXMP() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getMakerPentaxData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getSolicitedServiceUUIDs() : NSArray in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getMakerNikonData() : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public shouldCreateThumbnailFromImageIfAbsent() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public shouldCacheImmediately() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public shouldCreateThumbnailWithTransform() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public shouldExcludeGPS() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getMakerMinoltaData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getThumbnailMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageSourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getLossyCompressionQuality() : double in class org.robovm.apple.imageio.CGImageDestinationProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getMakerCanonData() : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getSolicitedServiceUUIDs() : NSArray in class org.robovm.apple.corebluetooth.CBAdvertisementData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getOverflowServiceUUIDs() : NSArray in class org.robovm.apple.corebluetooth.CBAdvertisementData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getFileSize() : long in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getRawData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getPixelHeight() : long in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getBackgroundColor() : CGColor in class org.robovm.apple.imageio.CGImageDestinationProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getPeripherals() : NSArray in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getDPIHeight() : long in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getDepth() : int in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getDNGData() : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getTypeIdentifierHint() : String in class org.robovm.apple.imageio.CGImageSourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getGPSData() : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getGIFData() : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getColorModel() : CGImagePropertyColorModel in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getOrientation() : CGImagePropertyOrientation in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public shouldCache() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getPNGData() : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getMakerFujiData() : CFDictionary in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getCIFFData() : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getExifAuxData() : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getExifData() : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getIPTCData() : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBCentralManagerOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getICCProfile() : String in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getManufacturerData() : NSData in class org.robovm.apple.corebluetooth.CBAdvertisementData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public isConnectable() : boolean in class org.robovm.apple.corebluetooth.CBAdvertisementData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getScanOptions() : CBCentralManagerScanOptions in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getDateTime() : String in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getJFIFData() : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getLocalName() : String in class org.robovm.apple.corebluetooth.CBAdvertisementData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getMetadata() : CGImageMetadata in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getScanServices() : NSArray in class org.robovm.apple.corebluetooth.CBCentralManagerRestoredState"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getTIFFData() : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getAdvertisementData() : CBAdvertisementData in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getRestoreIdentifier() : String in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public isIndexed() : boolean in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public hasAlphaChannel() : boolean in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getMaxPixelSize() : long in class org.robovm.apple.imageio.CGImageDestinationProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getDPIWidth() : long in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public shouldAllowFloat() : boolean in class org.robovm.apple.imageio.CGImageSourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getTxPowerLevel() : double in class org.robovm.apple.corebluetooth.CBAdvertisementData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public getPixelWidth() : long in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getServiceUUIDs() : NSArray<CBUUID> in class org.robovm.apple.corebluetooth.CBAdvertisementData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public getServices() : NSArray<CBMutableService> in class org.robovm.apple.corebluetooth.CBPeripheralManagerRestoredState"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public get8BIMData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties"
    	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public isContainingFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public isEmbeddingThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public isEnumeratingRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key CFString) : boolean extracted from public isMergingMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public isAllowingDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public isNotifyingOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public has(key NSString) : boolean extracted from public isShowingPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public get8BIMData() : CGImageProperty8BIMData renamed to public getData() : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isAllowingDuplicates() : boolean renamed to public allowsDuplicates() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerScanOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isContainingFloatingPointPixels() : boolean renamed to public containsFloatingPointPixels() : boolean in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isEmbeddingThumbnail() : boolean renamed to public embedsThumbnail() : boolean in class org.robovm.apple.imageio.CGImageDestinationProperties"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isEnumeratingRecursively() : boolean renamed to public enumeratesRecursively() : boolean in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isMergingMetadata() : boolean renamed to public mergesMetadata() : boolean in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isNotifyingOnConnection() : boolean renamed to public notifiesOnConnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isNotifyingOnDisconnection() : boolean renamed to public notifiesOnDisconnection() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isNotifyingOnNotification() : boolean renamed to public notifiesOnNotification() : boolean in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isShowingPowerAlert() : boolean renamed to public showsPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBCentralManagerOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isShowingPowerAlert() : boolean renamed to public showsPowerAlert() : boolean in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setContactInfo(contactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData renamed to public setCreatorContactInfo(creatorContactInfo CGImagePropertyIPTCContactInfoData) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getContactInfo() : CGImagePropertyIPTCContactInfoData renamed to public getCreatorContactInfo() : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCData"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setNotifyOnDisconnection(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnDisconnection(notifiesOnDisconnection boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setNotifyOnNotification(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnNotification(notifiesOnNotification boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setNotifyOnConnection(notify boolean) : CBConnectPeripheralOptions renamed to public setNotifiesOnConnection(notifiesOnConnection boolean) : CBConnectPeripheralOptions in class org.robovm.apple.corebluetooth.CBConnectPeripheralOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setMergeMetadata(merge boolean) : CGImageDestinationCopySourceOptions renamed to public setMergesMetadata(mergesMetadata boolean) : CGImageDestinationCopySourceOptions in class org.robovm.apple.imageio.CGImageDestinationCopySourceOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setShowPowerAlert(showAlert boolean) : CBCentralManagerOptions renamed to public setShowsPowerAlert(showsPowerAlert boolean) : CBCentralManagerOptions in class org.robovm.apple.corebluetooth.CBCentralManagerOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setIndexed(isIndexed boolean) : CGImageProperties renamed to public setIsIndexed(isIndexed boolean) : CGImageProperties in class org.robovm.apple.imageio.CGImageProperties"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setEmbedThumbnail(embed boolean) : CGImageDestinationProperties renamed to public setEmbedsThumbnail(embedsThumbnail boolean) : CGImageDestinationProperties in class org.robovm.apple.imageio.CGImageDestinationProperties"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setEnumerateRecursively(recursive boolean) : CGImageMetadataEnumerationOptions renamed to public setEnumeratesRecursively(enumeratesRecursively boolean) : CGImageMetadataEnumerationOptions in class org.robovm.apple.imageio.CGImageMetadataEnumerationOptions"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setShowPowerAlert(showAlert boolean) : CBPeripheralManagerOptions renamed to public setShowsPowerAlert(showsPowerAlert boolean) : CBPeripheralManagerOptions in class org.robovm.apple.corebluetooth.CBPeripheralManagerOptions"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData extracted from public set(property CGImageProperty8BIM, value String) : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperty8BIMData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public set(property CGImagePropertyIPTC, value double) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData extracted from public set(property CGImagePropertyDNG, value String) : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImagePropertyDNGData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData extracted from public set(property CGImagePropertyNikon, value String) : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImagePropertyNikonData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImageProperty8BIM, value NativeObject) : CGImageProperty8BIMData extracted from public set(property CGImageProperty8BIM, value double) : CGImageProperty8BIMData in class org.robovm.apple.imageio.CGImageProperty8BIMData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData extracted from public set(property CGImagePropertyExifAux, value double) : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImagePropertyExifAuxData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyIPTC, value NativeObject) : CGImagePropertyIPTCData extracted from public set(property CGImagePropertyIPTC, value String) : CGImagePropertyIPTCData in class org.robovm.apple.imageio.CGImagePropertyIPTCData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData extracted from public set(property CGImagePropertyExif, value String) : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImagePropertyExifData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyDNG, value NativeObject) : CGImagePropertyDNGData extracted from public set(property CGImagePropertyDNG, value double) : CGImagePropertyDNGData in class org.robovm.apple.imageio.CGImagePropertyDNGData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData extracted from public set(property CGImagePropertyCanon, value double) : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImagePropertyCanonData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData extracted from public set(property CGImagePropertyIPTCContactInfo, value String) : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData extracted from public set(property CGImagePropertyGIF, value double) : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImagePropertyGIFData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData extracted from public set(property CGImagePropertyCIFF, value double) : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImagePropertyCIFFData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData extracted from public set(property CGImagePropertyPNG, value double) : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImagePropertyPNGData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData extracted from public set(property CGImagePropertyTIFF, value double) : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImagePropertyTIFFData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData extracted from public set(property CGImagePropertyGPS, value String) : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImagePropertyGPSData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyPNG, value NativeObject) : CGImagePropertyPNGData extracted from public set(property CGImagePropertyPNG, value String) : CGImagePropertyPNGData in class org.robovm.apple.imageio.CGImagePropertyPNGData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData extracted from public set(property CGImagePropertyJFIF, value double) : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImagePropertyJFIFData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyTIFF, value NativeObject) : CGImagePropertyTIFFData extracted from public set(property CGImagePropertyTIFF, value String) : CGImagePropertyTIFFData in class org.robovm.apple.imageio.CGImagePropertyTIFFData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyCIFF, value NativeObject) : CGImagePropertyCIFFData extracted from public set(property CGImagePropertyCIFF, value String) : CGImagePropertyCIFFData in class org.robovm.apple.imageio.CGImagePropertyCIFFData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyJFIF, value NativeObject) : CGImagePropertyJFIFData extracted from public set(property CGImagePropertyJFIF, value String) : CGImagePropertyJFIFData in class org.robovm.apple.imageio.CGImagePropertyJFIFData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyExif, value NativeObject) : CGImagePropertyExifData extracted from public set(property CGImagePropertyExif, value double) : CGImagePropertyExifData in class org.robovm.apple.imageio.CGImagePropertyExifData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyNikon, value NativeObject) : CGImagePropertyNikonData extracted from public set(property CGImagePropertyNikon, value double) : CGImagePropertyNikonData in class org.robovm.apple.imageio.CGImagePropertyNikonData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyGIF, value NativeObject) : CGImagePropertyGIFData extracted from public set(property CGImagePropertyGIF, value String) : CGImagePropertyGIFData in class org.robovm.apple.imageio.CGImagePropertyGIFData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyExifAux, value NativeObject) : CGImagePropertyExifAuxData extracted from public set(property CGImagePropertyExifAux, value String) : CGImagePropertyExifAuxData in class org.robovm.apple.imageio.CGImagePropertyExifAuxData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyGPS, value NativeObject) : CGImagePropertyGPSData extracted from public set(property CGImagePropertyGPS, value double) : CGImagePropertyGPSData in class org.robovm.apple.imageio.CGImagePropertyGPSData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyCanon, value NativeObject) : CGImagePropertyCanonData extracted from public set(property CGImagePropertyCanon, value String) : CGImagePropertyCanonData in class org.robovm.apple.imageio.CGImagePropertyCanonData"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public set(key CGImagePropertyIPTCContactInfo, value NativeObject) : CGImagePropertyIPTCContactInfoData extracted from public set(property CGImagePropertyIPTCContactInfo, value double) : CGImagePropertyIPTCContactInfoData in class org.robovm.apple.imageio.CGImagePropertyIPTCContactInfoData"
	}],
	"time": "6/16/15 1:58 PM",
	"id": 1117916
}, {
	"sha1": "851ab757698304e9d8d4ae24ab75be619ddae31a",
	"repository": "https://github.com/GoClipse/goclipse.git",
	"author": "Bruno Medeiros",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public contains(otherOffset int) : boolean extracted from public inclusiveContains(otherOffset int) : boolean in class melnorme.lang.tooling.ast.SourceRange"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public contains(other SourceRange) : boolean extracted from public inclusiveContains(other SourceRange) : boolean in class melnorme.lang.tooling.ast.SourceRange"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getInvocationOffest() : int renamed to public getInvocationOffset() : int in class melnorme.lang.ide.ui.editor.actions.AbstractOpenElementOperation"
	}],
	"time": "6/16/15 2:13 PM",
	"id": 1117765
}, {
	"sha1": "c9b2006381301c99b66c50c4b31f329caac06137",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Ning Shi",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private open(forWrite boolean, truncate boolean) : void extracted from public open(forWrite boolean) : void in class org.voltdb.utils.PBDRegularSegment"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private open(forWrite boolean, truncate boolean) : void extracted from public open(forWrite boolean) : void in class org.voltdb.utils.PBDMMapSegment"
	}],
	"time": "6/16/15 3:01 PM",
	"id": 1117296
}, {
	"sha1": "0f8a0af934f09deef1b58e961ffe789c7299bcc1",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Andrew Gallagher",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.facebook.buck.cxx.AbstractCxxPreprocessorInput.ConflictingHeadersException moved to com.facebook.buck.cxx.AbstractCxxHeaders.ConflictingHeadersException"
	}, {
		"type": "Move Method",
		"description": "Move Method private addAllEntriesToIncludeMap(destination Map, source Map) : void from class com.facebook.buck.cxx.AbstractCxxPreprocessorInput to public addAllEntriesToIncludeMap(destination Map, source Map) : void from class com.facebook.buck.cxx.AbstractCxxHeaders"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public combineCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type, String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : CxxPreprocessorInput renamed to public collectCxxPreprocessorInput(params BuildRuleParams, cxxPlatform CxxPlatform, preprocessorFlags ImmutableMultimap<CxxSource.Type, String>, prefixHeaders ImmutableList<SourcePath>, headerSymlinkTrees ImmutableList<SymlinkTree>, frameworkSearchPaths ImmutableList<Path>, cxxPreprocessorInputFromDeps Iterable<CxxPreprocessorInput>) : ImmutableList<CxxPreprocessorInput> in class com.facebook.buck.cxx.CxxDescriptionEnhancer"
	}],
	"time": "6/16/15 4:55 PM",
	"id": 1117640
}, {
	"sha1": "f26d234e8d3458f34454583c22e3bd5f4b2a5da8",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Thomas Gummerer",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getDevices() : List<IDevice> extracted from public adbCall(adbCallable AdbCallable) : boolean in class com.facebook.buck.android.AdbHelper"
	}],
	"time": "6/16/15 4:56 PM",
	"id": 1117635
}, {
	"sha1": "ea96643364e91125f560e9508a5cbcdb776bde64",
	"repository": "https://github.com/google/closure-compiler.git",
	"author": "moz",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private parseFormalParameterList(inTypeExpression boolean) : FormalParameterListTree extracted from private parseFormalParameterList() : FormalParameterListTree in class com.google.javascript.jscomp.parsing.parser.Parser"
	}],
	"time": "6/16/15 8:22 PM",
	"id": 1117895
}, {
	"sha1": "66901e86e8bea2b999ed9f33e013fa5ed21507c7",
	"repository": "https://github.com/killbill/killbill.git",
	"author": "stephane brossier",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private sanityOnPaymentInfoPlugin(paymentInfoPlugin PaymentTransactionInfoPlugin) : void inlined to private doOperation() : OperationResult in class org.killbill.billing.payment.core.sm.payments.PaymentOperation"
	}],
	"time": "6/16/15 8:32 PM",
	"id": 1118012
}, {
	"sha1": "35893c115ba23bd62a7036a33390420f074ce660",
	"repository": "https://github.com/real-logic/Aeron.git",
	"author": "Todd L. Montgomery",
	"refactorings": [{
			"type": "Inline Method",
			"description": "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyPublicationClosed(times VerificationMode) : void inlined to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnRemoveChannelOnUnknownSessionId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnAddSubscriptionWithInvalidUri() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyExceptionLogged() : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnRemoveChannelOnUnknownStreamId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnRemoveChannelOnUnknownSessionId() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyNeverSucceeds() : void inlined to public shouldErrorOnAddSubscriptionWithInvalidUri() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldBeAbleToAddSinglePublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldNotTimeoutPublicationOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifySenderNotifiedOfNewPublication() : void inlined to public shouldTimeoutPublication() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyReceiverRemovesSubscription(times VerificationMode) : void inlined to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyReceiverRemovesSubscription(times VerificationMode) : void inlined to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyReceiverSubscribes() : void inlined to public shouldNotTimeoutSubscriptionOnKeepAlive() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private verifyReceiverSubscribes() : void inlined to public shouldTimeoutSubscription() : void in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}, {
			"type": "Rename Method",
			"description": "Rename Method private processTimersUntil(condition BooleanSupplier) : long renamed to private doWorkUntil(condition BooleanSupplier) : long in class uk.co.real_logic.aeron.driver.DriverConductorTest"
		}
	],
	"time": "6/16/15 9:43 PM",
	"id": 1117698
}, {
	"sha1": "0d4b27952751de0caab01774048c3e0ec74824ce",
	"repository": "https://github.com/bumptech/glide.git",
	"author": "judds",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package clearCallbacksAndListener() : void extracted from private checkCurrentDimens() : void in class com.bumptech.glide.request.target.ViewTarget.SizeDeterminer"
	}],
	"time": "6/16/15 10:48 PM",
	"id": 1117840
}, {
	"sha1": "1f3be625e62f44d929c01f6574678eea05754474",
	"repository": "https://github.com/eclipse/jetty.project.git",
	"author": "Jan Bartel",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public gatherScannables() : void extracted from public configureScanner() : void in class org.eclipse.jetty.maven.plugin.JettyRunMojo"
	}],
	"time": "6/17/15 12:18 AM",
	"id": 1118051
}, {
	"sha1": "0b024834549c53512ef18bce89f60ef9225d4819",
	"repository": "https://github.com/brianfrankcooper/YCSB.git",
	"author": "nitsanw",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private throttle(currTimeMillis long) : void extracted from public run() : void in class com.yahoo.ycsb.ClientThread"
	}],
	"time": "6/17/15 1:00 AM",
	"id": 1117550
}, {
	"sha1": "303cb535239a6f07cbe24a033ef965e2f55758eb",
	"repository": "https://github.com/netty/netty.git",
	"author": "Norman Maurer",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private principal(certs Certificate[]) : Principal inlined to public getLocalPrincipal() : Principal in class io.netty.handler.ssl.OpenSslEngine.OpenSslSession"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private principal(certs Certificate[]) : Principal inlined to public getPeerPrincipal() : Principal in class io.netty.handler.ssl.OpenSslEngine.OpenSslSession"
	}],
	"time": "6/17/15 1:35 AM",
	"id": 1117922
}, {
	"sha1": "b47634176fa48ad925f79886c6aaca225cb9af64",
	"repository": "https://github.com/spring-projects/spring-boot.git",
	"author": "izeye",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> extracted from public findAll() : Iterable<Metric<?>> in class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private findAll(predicate Predicate<String>) : Iterable<Metric<?>> extracted from public findAll(prefix String) : Iterable<Metric<?>> in class org.springframework.boot.actuate.metrics.buffer.BufferMetricReader"
	}],
	"time": "6/17/15 2:03 AM",
	"id": 1117232
}, {
	"sha1": "5a38d0bca0e48853c3f7c00a0f098bada64797df",
	"repository": "https://github.com/eucalyptus/eucalyptus.git",
	"author": "Evan Thomas",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricLoadCacheKey moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricLoadCacheKey"
	}, {
		"type": "Move Class",
		"description": "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricCacheKey moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricCacheKey"
	}, {
		"type": "Move Class",
		"description": "Move Class com.eucalyptus.cloudwatch.domain.metricdata.MetricDataQueue.AbsoluteMetricCache moved to com.eucalyptus.cluster.callback.cloudwatch.AbsoluteMetricQueue.AbsoluteMetricCache"
	}, {
		"type": "Move Class",
		"description": "Move Class com.eucalyptus.cluster.callback.CloudWatchHelper moved to com.eucalyptus.cluster.callback.cloudwatch.CloudWatchHelper"
	}, {
		"type": "Rename Package",
		"description": "Rename Package com.eucalyptus.cloudwatch.domain.absolute to com.eucalyptus.cluster.callback.cloudwatch"
	}],
	"time": "6/17/15 2:26 AM",
	"id": 1120125
}, {
	"sha1": "da29a040ebae664274b28117b157044af0f525fa",
	"repository": "https://github.com/FasterXML/jackson-databind.git",
	"author": "Tatu Saloranta",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private _writeCloseableValue(gen JsonGenerator, value Object, cfg SerializationConfig) : void inlined to public writeValue(gen JsonGenerator, value Object) : void in class com.fasterxml.jackson.databind.ObjectWriter"
	}],
	"time": "6/17/15 3:02 AM",
	"id": 1117817
}, {
	"sha1": "cb98ee25ff52bf97faebe3f45cdef0ced9b4416e",
	"repository": "https://github.com/spring-projects/spring-boot.git",
	"author": "Stephane Nicoll",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideMessageCodesFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideLocale() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private load(config Class<?>, environment String[]) : void extracted from public overrideDateFormat() : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfigurationTests"
		}

	],
	"time": "6/17/15 4:27 AM",
	"id": 1117231
}, {
	"sha1": "7f80425b6a0af9bdfef12c8a873676e39e0a04a6",
	"repository": "https://github.com/graphhopper/graphhopper.git",
	"author": "Peter",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute protected edgeCount : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package flagsSizeIsLong : boolean from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected N_ELE : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeDisconnect(edgeToRemove int, edgeToUpdatePointer long, baseNode int, adjNode int) : long from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private removedNodes : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private NO_NODE : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private initialized : boolean from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_NODEA : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package bounds : BBox from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected N_ADDITIONAL : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected nodes : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package wayGeometry : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.GraphHopperStorage to public getDebugInfo(node int, area int) : String from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected N_LAT : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private maxGeoRef : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.GraphHopperStorage to protected createSingleEdge(edgeId int, nodeId int) : SingleEdge from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private getDist(pointer long) : double from class com.graphhopper.storage.GraphHopperStorage to private getDist(pointer long) : double from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected N_LON : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package nodeAccess : NodeAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected setNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setNodesHeader() : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected loadNodesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadNodesHeader() : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private nextEdge() : int from class com.graphhopper.storage.GraphHopperStorage to private nextEdge() : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected nodeCount : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_LINKB : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected initStorage() : void from class com.graphhopper.storage.GraphHopperStorage to package initStorage() : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private edgeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private MAX_EDGES : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package extStorage : GraphExtension from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_LINKA : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureEdgeIndex(edgeIndex int) : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.GraphHopperStorage to private ensureGeometry(bytePos long, byteLength int) : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected setEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setEdgesHeader() : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected N_EDGE_REF : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.GraphHopperStorage to private nextGeoRef(arrayLength int) : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_FLAGS : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method package setEdgeCount(cnt int) : void from class com.graphhopper.storage.GraphHopperStorage to package setEdgeCount(cnt int) : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.GraphHopperStorage to private connectNewEdge(fromNode int, newOrExistingEdge int) : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.GraphHopperStorage to package inPlaceNodeRemove(removeNodeCount int) : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected setWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected setWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.GraphHopperStorage to protected initNodeAndEdgeEntrySize() : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.GraphHopperStorage to private getOtherNode(nodeThis int, edgePointer long) : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.GraphHopperStorage to package initNodeRefs(oldCapacity long, newCapacity long) : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_DIST : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method package checkInit() : void from class com.graphhopper.storage.GraphHopperStorage to package checkInit() : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.GraphHopperStorage to private invalidateEdge(edgePointer long) : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected nodeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.GraphHopperStorage to package copyProperties(from EdgeIteratorState, to EdgeIteratorState) : EdgeIteratorState from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_NAME : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.GraphHopperStorage to protected getLinkPosInEdgeArea(nodeThis int, nodeOther int, edgePointer long) : long from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.GraphHopperStorage to private writeEdge(edge int, nodeThis int, nodeOther int, nextEdge int, nextEdgeOther int) : long from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected edges : DataAccess from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private distToInt(distance double) : int from class com.graphhopper.storage.GraphHopperStorage to private distToInt(distance double) : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private nodeEntryIndex : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_GEO : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private getRemovedNodes() : GHBitSet from class com.graphhopper.storage.GraphHopperStorage to package getRemovedNodes() : GHBitSet from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected loadEdgesHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadEdgesHeader() : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected edgeEntryBytes : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private isTestingEnabled() : boolean from class com.graphhopper.storage.GraphHopperStorage to private isTestingEnabled() : boolean from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextNodeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package nameIndex : NameIndex from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute protected E_NODEB : int from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private trimToSize() : void from class com.graphhopper.storage.GraphHopperStorage to protected trimToSize() : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.GraphHopperStorage to package internalEdgeAdd(fromNodeId int, toNodeId int) : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private INT_DIST_FACTOR : double from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.GraphHopperStorage to protected nextEdgeEntryIndex(sizeInBytes int) : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method private stringHashCode(str String) : int from class com.graphhopper.storage.GraphHopperStorage to private stringHashCode(str String) : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method protected loadWayGeometryHeader() : int from class com.graphhopper.storage.GraphHopperStorage to protected loadWayGeometryHeader() : int from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package bitUtil : BitUtil from class com.graphhopper.storage.GraphHopperStorage to class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Move Method",
		"description": "Move Method package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.GraphHopperStorage to package ensureNodeIndex(nodeIndex int) : void from class com.graphhopper.storage.BaseGraph"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.graphhopper.storage.LevelGraphStorageTest renamed to com.graphhopper.storage.GraphHopperStorageCHTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected createGraph(is3D boolean) : Graph renamed to protected createGHStorage(is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected createGraph(em EncodingManager, is3D boolean) : Graph renamed to protected createGHStorage(em EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package calcPathViaQuery(weighting String, graph Graph, fromLat double, fromLon double, toLat double, toLon double) : Path renamed to package calcPathViaQuery_(weighting String, ghStorage GraphHopperStorage, fromLat double, fromLon double, toLat double, toLon double) : Path in class com.graphhopper.routing.AbstractRoutingAlgorithmTester"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected newRAMGraph() : GraphStorage renamed to protected newRAMGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected createGraph() : GraphStorage renamed to protected createGHStorage() : GraphHopperStorage in class com.graphhopper.storage.AbstractGraphStorageTester"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package createTarjanTestGraph() : GraphStorage renamed to package createTarjanTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package createGraph(eman EncodingManager) : GraphStorage renamed to package createStorage(eman EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package createDeadEndUnvisitedNetworkGraph(em EncodingManager) : GraphStorage renamed to package createDeadEndUnvisitedNetworkStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package createSubnetworkTestGraph2(em EncodingManager) : GraphStorage renamed to package createSubnetworkTestStorage2(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package createSubnetworkTestGraph() : GraphStorage renamed to package createSubnetworkTestStorage() : GraphHopperStorage in class com.graphhopper.routing.util.PrepareRoutingSubnetworksTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public createGraph(location String, enabled3D boolean) : GraphStorage renamed to public createGHStorage(location String, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected newGraph(dir Directory, enabled3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, enabled3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getGraph() : GraphStorage renamed to public getGraphHopperStorage() : GraphHopperStorage in class com.graphhopper.GraphHopper"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setGraph(graph GraphStorage) : void renamed to public setGraphHopperStorage(ghStorage GraphHopperStorage) : void in class com.graphhopper.GraphHopper"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package createGraph(dir Directory, encodingManager EncodingManager, is3D boolean) : Graph renamed to package createGHStorage(dir Directory, encodingManager EncodingManager, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.index.AbstractLocationIndexTester"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected newGraph(dir Directory, is3D boolean) : GraphStorage renamed to protected newGHStorage(dir Directory, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphHopperStorageWithTurnCostsTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected createGraph(em EncodingManager) : GraphStorage renamed to protected createStorage(em EncodingManager) : GraphHopperStorage in class com.graphhopper.routing.EdgeBasedRoutingAlgorithmTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public createGraph(location String, is3D boolean) : GraphStorage renamed to public createGHStorage(location String, is3D boolean) : GraphHopperStorage in class com.graphhopper.storage.GraphStorageViaMMapTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected createTestGraph() : Graph renamed to protected createTestStorage() : GraphHopperStorage in class com.graphhopper.routing.AbstractRoutingAlgorithmTester"
	}, {
		"type": "Extract And Move Method",
		"description": "Extract And Move Method public setAdditionalEdgeField(edgePointer long, value int) : void extracted from public setAdditionalEdgeField(edgePointer long, value int) : void in class com.graphhopper.storage.GraphHopperStorage & moved to class com.graphhopper.storage.BaseGraph"
	}],
	"time": "6/17/15 5:42 AM",
	"id": 1117304
}, {
	"sha1": "182f4d1174036417aad9d6db908ceaf64234fd5f",
	"repository": "https://github.com/geoserver/geoserver.git",
	"author": "Andrea Aime",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.VectorTransformChain to public pre(item ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.VectorTransformChain to public post(task ImportTask, data ImportData) : void from class org.geoserver.importer.transform.TransformChain"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.geoserver.importer.transform.PostVectorTransform renamed to org.geoserver.importer.transform.PostTransform"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.geoserver.importer.transform.AbstractVectorTransform renamed to org.geoserver.importer.transform.AbstractTransform"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.geoserver.importer.transform.PreVectorTransform renamed to org.geoserver.importer.transform.PreTransform"
	}],
	"time": "6/17/15 6:09 AM",
	"id": 1117213
}, {
	"sha1": "e4de9513d0a06d381b4521211cf688b77379c39d",
	"repository": "https://github.com/restlet/restlet-framework-java.git",
	"author": "quilicicf",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerReader to public computeSectionName(apiDeclarationPath String) : String from class org.restlet.ext.apispark.internal.conversion.swagger.v1_2.SwaggerUtils"
	}],
	"time": "6/17/15 6:09 AM",
	"id": 1117822
}, {
	"sha1": "40e41d11d7847d660bba6691859b0506514bd0ac",
	"repository": "https://github.com/bennidi/mbassador.git",
	"author": "bennidi",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class net.engio.mbassy.ConditionalHandlers.ConditionalMessageListener moved to net.engio.mbassy.ConditionalHandlerTest.ConditionalMessageListener"
	}, {
		"type": "Move Class",
		"description": "Move Class net.engio.mbassy.ConditionalHandlers.TestEvent moved to net.engio.mbassy.ConditionalHandlerTest.TestEvent"
	}],
	"time": "6/17/15 7:55 AM",
	"id": 1117602
}, {
	"sha1": "2ef067fc70055fc4d55c75937303414ddcf07e0e",
	"repository": "https://github.com/Graylog2/graylog2-server.git",
	"author": "Dennis Oelkers",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class KeysPresentMatcher moved from integration.BaseRestTest to integration.BaseRestTestHelper"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass integration.BaseRestTestHelper from class integration.BaseRestTest"
	}],
	"time": "6/17/15 8:59 AM",
	"id": 1118067
}, {
	"sha1": "e66e49cd4a9dd8027204f712f780170a5c129f5b",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "alarmnummer",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.hazelcast.spi.ServiceInfo moved to com.hazelcast.spi.impl.servicemanager.ServiceInfo"
	}],
	"time": "6/17/15 9:05 AM",
	"id": 1118362
}, {
	"sha1": "49d544d558e9c7f1106b5923204b1fbec2696cf7",
	"repository": "https://github.com/open-keychain/open-keychain.git",
	"author": "Dominik Sch\u00fcrmann",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.sufficientlysecure.keychain.util.orbot to org.sufficientlysecure.keychain.util.tor"
	}],
	"time": "6/17/15 10:26 AM",
	"id": 1118338
}, {
	"sha1": "15fd4f9caea01e53725086e290d3b35ec4bd4cd9",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "jie.liu",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected reset(animateTransition boolean) : void extracted from public reset() : void in class com.android.keyguard.KeyguardAbsKeyInputView"
	}],
	"time": "6/17/15 11:39 AM",
	"id": 1118131
}, {
	"sha1": "5103ace802b2819438318dd53b5b07512aae0d25",
	"repository": "https://github.com/Netflix/eureka.git",
	"author": "Tomasz Bak",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public fillUpRegistryOfServer(serverIdx int, count int, instanceTemplate InstanceInfo) : void extracted from public fillUpRegistry(count int, instanceTemplate InstanceInfo) : void in class com.netflix.eureka2.integration.EurekaDeploymentClients"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testRegistrationAndDiscoveryServices() : void renamed to public testRegistrationAndInterestServices() : void in class com.netflix.eureka2.testkit.embedded.server.EmbeddedWriteServerTest"
	}],
	"time": "6/17/15 1:22 PM",
	"id": 1119965
}, {
	"sha1": "f01d8610b9ceebc1de59d42f569b8af3efbe0a0f",
	"repository": "https://github.com/AsyncHttpClient/async-http-client.git",
	"author": "Stephane Landelle",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package signatureBaseString(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : StringBuilder extracted from public calculateSignature(method String, uri Uri, oauthTimestamp long, nonce String, formParams List<Param>, queryParams List<Param>) : String in class org.asynchttpclient.oauth.OAuthSignatureCalculator"
	}],
	"time": "6/17/15 6:11 PM",
	"id": 1118568
}, {
	"sha1": "c753d2e41ba667f9b5a31451a16ecbaecdc65d80",
	"repository": "https://github.com/square/okhttp.git",
	"author": "Jake Wharton",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package com.squareup.okhttp.internal.spdy to com.squareup.okhttp.internal.framed"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyConnection renamed to com.squareup.okhttp.internal.framed.FramedConnection"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSource renamed to com.squareup.okhttp.internal.framed.FramedStream.FramedDataSource"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyTimeout renamed to com.squareup.okhttp.internal.framed.FramedStream.StreamTimeout"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyStream.SpdyDataSink renamed to com.squareup.okhttp.internal.framed.FramedStream.FramedDataSink"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyStream renamed to com.squareup.okhttp.internal.framed.FramedStream"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.squareup.okhttp.internal.spdy.SpdyServer renamed to com.squareup.okhttp.internal.framed.FramedServer"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.squareup.okhttp.internal.http.SpdyTransport renamed to com.squareup.okhttp.internal.http.FramedTransport"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.squareup.okhttp.mockwebserver.MockWebServer.SpdySocketHandler renamed to com.squareup.okhttp.mockwebserver.MockWebServer.FramedSocketHandler"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package isSpdy() : boolean renamed to package isFramed() : boolean in class com.squareup.okhttp.Connection"
	}],
	"time": "6/17/15 7:40 PM",
	"id": 1118645
}, {
	"sha1": "9a581e07cb6381d70f3fd9bb2055e810e2a682a9",
	"repository": "https://github.com/rstudio/rstudio.git",
	"author": "Kevin Ushey",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getBoolean(key String) : boolean extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private has(key String) : boolean extracted from public init(widget AceEditorWidget, position Position) : void in class org.rstudio.studio.client.workbench.views.source.editors.text.ChunkOptionsPopupPanel"
	}],
	"time": "6/17/15 9:52 PM",
	"id": 1118145
}, {
	"sha1": "247232bdde24b81814a82100743f77d881aaf06b",
	"repository": "https://github.com/spring-projects/spring-integration.git",
	"author": "Gunnar Hillert",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private handleInputStreamMessage(sourceFileInputStream InputStream, originalFile File, tempFile File, resultFile File) : File extracted from private handleFileMessage(sourceFile File, tempFile File, resultFile File) : File in class org.springframework.integration.file.FileWritingMessageHandler"
	}],
	"time": "6/17/15 9:57 PM",
	"id": 1118798
}, {
	"sha1": "c11fef6e7c80681ce69e5fdc7f4796b0b7a18e2b",
	"repository": "https://github.com/open-keychain/open-keychain.git",
	"author": "Vincent Breitmoser",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public displayInputFragment(showOpenDialog boolean) : void extracted from private handleActions(savedInstanceState Bundle, intent Intent) : void in class org.sufficientlysecure.keychain.ui.DecryptFilesActivity"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected cryptoOperation(cryptoInput CryptoInputParcel, showProgress boolean) : void extracted from protected cryptoOperation(cryptoInput CryptoInputParcel) : void in class org.sufficientlysecure.keychain.ui.base.CryptoOperationFragment"
	}],
	"time": "6/17/15 10:10 PM",
	"id": 1118292
}, {
	"sha1": "7a1659c12d76b510809dea1dea1f5100bcf4cd60",
	"repository": "https://github.com/apache/pig.git",
	"author": "Xuefu Zhang",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private initialize() : void extracted from public launchPig(physicalPlan PhysicalPlan, grpName String, pigContext PigContext) : PigStats in class org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private startSparkJob() : void renamed to private addFilesToSparkJob() : void in class org.apache.pig.backend.hadoop.executionengine.spark.SparkLauncher"
	}],
	"time": "6/18/15 1:08 AM",
	"id": 1119037
}, {
	"sha1": "ce4f6292d6350a2c6b82d995352fdf6d07042c9c",
	"repository": "https://github.com/infinispan/infinispan.git",
	"author": "Pedro Ruivo",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private replayRemoteTransactionIfNeeded(ctx RemoteTxInvocationContext, topologyId int) : void extracted from public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.TxInterceptor"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public throwRollbackExceptionIfAny() : void extracted from public commit() : void in class org.infinispan.transaction.tm.DummyTransaction"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected assertNoTransactions(cacheName String) : void extracted from protected assertNoTransactions() : void in class org.infinispan.test.MultipleCacheManagersTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected eventually(message String, ec Condition, timeout long, pollInterval long, unit TimeUnit) : void extracted from protected eventually(ec Condition, timeout long, pollInterval long, unit TimeUnit) : void in class org.infinispan.test.AbstractInfinispanTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected eventually(message String, ec Condition, timeoutMillis long, loops int) : void extracted from protected eventually(ec Condition, timeoutMillis long, loops int) : void in class org.infinispan.test.AbstractInfinispanTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private verifyRemoteTransaction(ctx RemoteTxInvocationContext, command AbstractTransactionBoundaryCommand) : void extracted from private invokeNextInterceptorAndVerifyTransaction(ctx TxInvocationContext, command AbstractTransactionBoundaryCommand) : Object in class org.infinispan.interceptors.TxInterceptor"
	}, {
		"type": "Inline Method",
		"description": "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private localGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand, isGetCacheEntry boolean) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor"
	}, {
		"type": "Inline Method",
		"description": "Inline Method protected lockAndWrap(ctx InvocationContext, key Object, ice InternalCacheEntry, command FlagAffectedCommand) : void inlined to private remoteGet(ctx InvocationContext, key Object, isWrite boolean, command FlagAffectedCommand) : InternalCacheEntry in class org.infinispan.interceptors.distribution.TxDistributionInterceptor"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private sendCommitCommand(ctx TxInvocationContext, command CommitCommand) : void inlined to public visitCommitCommand(ctx TxInvocationContext, command CommitCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createRollbackRpcOptions() : RpcOptions extracted from public visitRollbackCommand(ctx TxInvocationContext, command RollbackCommand) : Object in class org.infinispan.interceptors.distribution.TxDistributionInterceptor"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private configuration : Configuration from class org.infinispan.tx.TransactionXaAdapterTmIntegrationTest to class org.infinispan.partitionhandling.impl.PartitionHandlingManagerImpl"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public removeRecoveryInformationFromCluster(where Collection, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(where Collection, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.tx.recovery.PostCommitRecoveryStateTest.RecoveryManagerDelegate"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public removeRecoveryInformationFromCluster(lockOwners Collection, xid Xid, sync boolean, gtx GlobalTransaction) : void renamed to public removeRecoveryInformation(lockOwners Collection, xid Xid, sync boolean, gtx GlobalTransaction, fromCluster boolean) : void in class org.infinispan.transaction.xa.recovery.RecoveryManagerImpl"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected assertNotLocked(cache Cache, key Object) : void renamed to protected assertEventuallyNotLocked(cache Cache, key Object) : void in class org.infinispan.test.AbstractCacheTest"
	}],
	"time": "6/18/15 3:08 AM",
	"id": 1119109
}, {
	"sha1": "480537e0f8aaf50a7648bf445b33230aa32a9b44",
	"repository": "https://github.com/grails/grails-core.git",
	"author": "graemerocher",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public weaveTestMixins(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void extracted from public weaveTestMixins(classNode ClassNode, values ListExpression) : void in class org.grails.compiler.injection.test.TestMixinTransformation"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public weaveMixinsIntoClass(classNode ClassNode, values ListExpression, applicationClassNode ClassNode) : void extracted from public weaveMixinsIntoClass(classNode ClassNode, values ListExpression) : void in class org.grails.compiler.injection.test.TestMixinTransformation"
	}],
	"time": "6/18/15 5:02 AM",
	"id": 1118835
}, {
	"sha1": "881baed894540031bd55e402933bcad28b74ca88",
	"repository": "https://github.com/jfinal/jfinal.git",
	"author": "James",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private validateLongValue(value String, min long, max long, errorKey String, errorMessage String) : void extracted from protected validateLong(field String, min long, max long, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private validateIntegerValue(value String, min int, max int, errorKey String, errorMessage String) : void extracted from protected validateInteger(field String, min int, max int, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private validateLongValue(value String, errorKey String, errorMessage String) : void extracted from protected validateLong(field String, errorKey String, errorMessage String) : void in class com.jfinal.validate.Validator"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.jfinal.plugin.activerecord.tx.TxByActionMethods renamed to com.jfinal.plugin.activerecord.tx.TxByMethods"
	}],
	"time": "6/18/15 5:57 AM",
	"id": 1118473
}, {
	"sha1": "021bf45623b748e70f20d956e86d595191241786",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Simon Brandhof",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package getPluginMetrics() : List<Metric> extracted from public start() : void in class org.sonar.server.startup.RegisterMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method package register(metrics Iterable) : void extracted from public start() : void in class org.sonar.server.startup.RegisterMetrics"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package getMetricsRepositories() : List renamed to package getPluginMetrics() : List in class org.sonar.server.startup.RegisterMetrics"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public disable(session DbSession, ids List) : void renamed to public disableByIds(session DbSession, ids List) : void in class org.sonar.server.metric.persistence.MetricDao"
	}, {
		"type": "Move Class",
		"description": "Move Class org.sonar.core.metric.DefaultMetricFinderTest moved to org.sonar.server.metric.DefaultMetricFinderTest"
	}],
	"time": "6/18/15 6:52 AM",
	"id": 1118403
}, {
	"sha1": "f8d5cf01f123a1d0a65857aa2db0571fe9cd1911",
	"repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
	"author": "Oguz Kocer",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getIconImageURL(size int, iconUrl String, blogUrl String) : String extracted from public getIconImageURL(size int) : String in class org.wordpress.android.models.Blog"
	}],
	"time": "6/18/15 7:25 AM",
	"id": 1119086
}, {
	"sha1": "b83e6a535cbca21d5ea764b0c49bfca8a9ff9db4",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Mats Rydberg",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest from class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReaderTest"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.kernel.api.impl.index.AbstractLuceneIndexAccessorReaderTest from class org.neo4j.kernel.api.impl.index.LuceneUniqueIndexAccessorReaderTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public lookup(value Object) : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected query(query Query) : PrimitiveLongIterator extracted from public scan() : PrimitiveLongIterator in class org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader"
	}, {
		"type": "Rename Method",
		"description":"Rename Method public newMatchAllQuery() : Query renamed to public newAllQuery() : Query in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure"
	}, {
		"type": "Rename Method",
		"description":"Rename Method public newQuery(value Object) : Query renamed to public newValueQuery(value Object) : Query in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure"
	}, {
		"type": "Rename Method",
		"description":"Rename Method protected getAllNodes(propertyValue String) : List renamed to protected getAllNodesWithProperty(propertyValue String) : List in class org.neo4j.kernel.api.index.IndexAccessorCompatibility"
	}, {
		"type": "Rename Method",
		"description":"Rename Method public newQueryForChangeOrRemove(nodeId long) : Term renamed to public newTermForChangeOrRemove(nodeId long) : Term in class org.neo4j.kernel.api.impl.index.LuceneDocumentStructure"
	}],
	"time": "6/18/15 7:27 AM",
	"id": 1119504
}, {
	"sha1": "d949fe9079a82ee31aa91244aa67baaf56b7e28f",
	"repository": "https://github.com/baasbox/baasbox.git",
	"author": "Claudio",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public execMultiLineCommands(db ODatabaseRecordTx, log boolean, stopOnException boolean, commands String[]) : void extracted from public execMultiLineCommands(db ODatabaseRecordTx, log boolean, commands String[]) : void in class com.baasbox.db.DbHelper"
	}],
	"time": "6/18/15 7:33 AM",
	"id": 1119758
}, {
	"sha1": "ab298886b59f4ad0235cd6d5764854189eb59eb6",
	"repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
	"author": "Danilo Ercoli",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public openPostInReaderOrInAppWebview(ctx Context, remoteBlogID String, remoteItemID String, itemType String, itemURL String) : void extracted from public openPostInReaderOrInAppWebview(ctx Context, post PostModel) : void in class org.wordpress.android.ui.stats.StatsUtils"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.wordpress.android.ui.stats.StatsSinglePostDetailsActivity renamed to org.wordpress.android.ui.stats.StatsSingleItemDetailsActivity"
	}],
	"time": "6/18/15 8:36 AM",
	"id": 1119082
}, {
	"sha1": "c265bde2ace252bc1e1c65c6af93520e5994edd2",
	"repository": "https://github.com/jberkel/sms-backup-plus.git",
	"author": "Jan Berkel",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getTokenForLogging() : String extracted from public toString() : String in class com.zegoggles.smssync.auth.OAuth2Token"
	}],
	"time": "6/18/15 8:52 AM",
	"id": 1118508
}, {
	"sha1": "07807aed847e1d0589c094461544e54a2677cbf5",
	"repository": "https://github.com/fabric8io/fabric8.git",
	"author": "Ioannis Canellos",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method protected isKubernetesJsonArtifact(classifier String, type String) : boolean from class io.fabric8.maven.JsonMojo to package isKubernetesJsonArtifact(classifier String, type String) : boolean from class io.fabric8.maven.AbstractFabric8Mojo"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute private DEFAULT_CONFIG_FILE_NAME : String from class io.fabric8.maven.ApplyMojo to class io.fabric8.maven.AbstractFabric8Mojo"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method private hasKubernetesJson(f File) : boolean from class io.fabric8.maven.ApplyMojo to package hasKubernetesJson(f File) : boolean from class io.fabric8.maven.AbstractFabric8Mojo"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected combineDependencies : boolean from class io.fabric8.maven.JsonMojo to class io.fabric8.maven.AbstractFabric8Mojo"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method private getDependencies() : Set<File> from class io.fabric8.maven.ApplyMojo to package getDependencies() : Set<File> from class io.fabric8.maven.AbstractFabric8Mojo"
	}],
	"time": "6/18/15 11:29 AM",
	"id": 1119833
}, {
	"sha1": "8707194f003444a9fb8e00bffa2893ef0c2492c6",
	"repository": "https://github.com/processing/processing.git",
	"author": "codeanticode",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private setFrameCentered() : void inlined to public placeWindow(location int[], editorLocation int[]) : void in class processing.opengl.PSurfaceJOGL"
	}],
	"time": "6/18/15 1:03 PM",
	"id": 1119732
}, {
	"sha1": "5a853a60f93e09c446d458673bc7a2f6bb26742c",
	"repository": "https://github.com/google/closure-compiler.git",
	"author": "blickly",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.google.javascript.jscomp.parsing.TypeDeclarationsIRFactory moved to com.google.javascript.jscomp.JsdocToEs6TypedConverter.TypeDeclarationsIRFactory"
	}],
	"time": "6/18/15 2:34 PM",
	"id": 1119978
}, {
	"sha1": "c76e6e1f27a6697b3b88ad4ed710441b801afb3b",
	"repository": "https://github.com/rackerlabs/blueflood.git",
	"author": "Tilottama Gaat",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.http.DefaultHandler"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to class com.rackspacecloud.blueflood.http.DefaultHandler"
	}],
	"time": "6/18/15 3:41 PM",
	"id": 1119656
}, {
	"sha1": "ed966510ccf8441115614e2258aea61df0ea55f5",
	"repository": "https://github.com/amplab/tachyon.git",
	"author": "Bin Fan",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private reserveSpace(size long) : void extracted from public addBlockMeta(block BlockMeta) : Optional<BlockMeta> in class tachyon.worker.block.meta.StorageDir"
	}],
	"time": "6/18/15 8:46 PM",
	"id": 1120023
}, {
	"sha1": "23c49d834d3859fc76a604da32d1789d2e863303",
	"repository": "https://github.com/k9mail/k-9.git",
	"author": "Marcus Wolschon",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private setNotificationContent(context Context, message Message, sender CharSequence, subject CharSequence, builder Builder, accountDescr String) : Builder extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private buildNotificationNavigationStack(context Context, account Account, message LocalMessage, newMessages int, unreadCount int, allRefs ArrayList<MessageReference>) : TaskStackBuilder extracted from private notifyAccountWithDataLocked(context Context, account Account, message LocalMessage, data NotificationData) : void in class com.fsck.k9.controller.MessagingController"
	}],
	"time": "6/18/15 9:19 PM",
	"id": 1119677
}, {
	"sha1": "a9ca2efae56815dc464189b055ffe9da23766f7f",
	"repository": "https://github.com/antlr/antlr4.git",
	"author": "parrt",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getDescendants(t ParseTree) : List<ParseTree> extracted from public descendants(t ParseTree) : List<ParseTree> in class org.antlr.v4.runtime.tree.Trees"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public getAmbuityParserInterpreter(g Grammar, originalParser Parser, tokens TokenStream) : ParserInterpreter extracted from public getAllPossibleParseTrees(g Grammar, originalParser Parser, tokens TokenStream, decision int, alts BitSet, startIndex int, stopIndex int, startRuleIndex int) : List<ParserRuleContext> in class org.antlr.v4.tool.GrammarParserInterpreter"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testInterp(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void renamed to public testAmbiguousTrees(lg LexerGrammar, g Grammar, startRule String, input String, decision int, expectedAmbigAlts String, overallTree String, expectedParseTrees String[]) : void in class org.antlr.v4.test.tool.TestAmbigParseTrees"
	}],
	"time": "6/18/15 9:25 PM",
	"id": 1119661
}, {
	"sha1": "f841d8dda2bf461f595755f85c3eba786783702d",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Adam Murdoch",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private adaptResult(result BuildResult, startTime long, endTime long) : AbstractOperationResult inlined to private adaptResult(source BuildOperationInternal) : AbstractOperationResult in class org.gradle.tooling.internal.provider.runner.ClientForwardingBuildListener"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getPayload() : Object renamed to public getFailure() : Throwable in class org.gradle.internal.progress.BuildOperationInternal"
	}],
	"time": "6/19/15 1:38 AM",
	"id": 1121362
}, {
	"sha1": "13b63c194b010201c439932ece2f1bc628ebf287",
	"repository": "https://github.com/eclipse/jetty.project.git",
	"author": "Greg Wilkins",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private __propertyPattern : Pattern from class org.eclipse.jetty.xml.XmlConfiguration to class org.eclipse.jetty.start.Props"
	}],
	"time": "6/19/15 2:27 AM",
	"id": 1120191
}, {
	"sha1": "0eaa5217883cfeca688aad1d462192c194741827",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Jean-Baptiste Lievremont",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private userWriter : UserJsonWriter from class org.sonar.server.issue.ws.IssueJsonWriter to class org.sonar.server.issue.InternalRubyIssueService"
	},
	{
		"type": "Move Attribute",
		"description": "Move Attribute package userWriter : UserJsonWriter from class org.sonar.server.issue.ws.IssueJsonWriter to class org.sonar.server.issue.InternalRubyIssueServiceTest"
	}],
	"time": "6/19/15 9:57 AM",
	"id": 1119473
}, {
	"sha1": "ece12f9d370108549fffac105e4bcb7faeaaf124",
	"repository": "https://github.com/spring-projects/spring-framework.git",
	"author": "Sam Brannen",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private assertMissingTextAttribute(attributes Map<String,Object>) : void extracted from public synthesizeAnnotationFromMapWithMissingAttributeValue() : void in class org.springframework.core.annotation.AnnotationUtilsTests"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private assertMissingTextAttribute(attributes Map<String,Object>) : void extracted from public synthesizeAnnotationFromMapWithNullAttributeValue() : void in class org.springframework.core.annotation.AnnotationUtilsTests"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private validateAttributes(attributes Map<String, Object>, annotationType Class<? extends Annotation>) : void renamed to private enrichAndValidateAttributes(attributes Map<String, Object>, annotationType Class<? extends Annotation>) : Map<String, Object> in class org.springframework.core.annotation.MapAnnotationAttributeExtractor"
	}],
	"time": "6/19/15 10:27 AM",
	"id": 1120106
}, {
	"sha1": "03573a655bcbb77f7a76d8e22d851cc22796b4f8",
	"repository": "https://github.com/infinispan/infinispan.git",
	"author": "William Burns",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected shouldInvoke(event Event<K,V>) : boolean extracted from protected shouldInvoke(event CacheEntryEvent<K,V>, isLocalNodePrimaryOwner boolean) : CacheEntryEvent<K,V> in class org.infinispan.notifications.cachelistener.CacheNotifierImpl.BaseCacheEntryListenerInvocation"
	}],
	"time": "6/19/15 11:03 AM",
	"id": 1120213
}, {
	"sha1": "797fb7fc1415ac0ebe9a8262677dfa4462ed6cb4",
	"repository": "https://github.com/JetBrains/MPS.git",
	"author": "Artem Tikhomirov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private doAppendNode(node SNode) : void extracted from public appendNode(node SNode) : void in class jetbrains.mps.text.impl.TextGenSupport"
	}],
	"time": "6/19/15 11:28 AM",
	"id": 1121377
}, {
	"sha1": "4bfe164cc8b4556b98df18098b162e0a84038b32",
	"repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
	"author": "Danilo Ercoli",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private trackLastVisibleTab(position int) : void extracted from protected onResume() : void in class org.wordpress.android.ui.main.WPMainActivity"
	}],
	"time": "6/19/15 12:15 PM",
	"id": 1120196
}, {
	"sha1": "5e08a9e8e93a2f117b5fbec9c6d54500d8e99a4d",
	"repository": "https://github.com/apache/camel.git",
	"author": "Willem Jiang",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public copyAttachments(that Message) : void extracted from public copyFrom(that Message) : void in class org.apache.camel.impl.MessageSupport"
	}],
	"time": "6/19/15 12:15 PM",
	"id": 1120077
}, {
	"sha1": "4983f83d1bedb7b737fc56d409c1c06b04e34e4e",
	"repository": "https://github.com/rstudio/rstudio.git",
	"author": "Kevin Ushey",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private setValue(value boolean, force boolean) : void extracted from public setValue(value boolean) : void in class org.rstudio.core.client.widget.ThemedCheckBox"
	}],
	"time": "6/19/15 2:47 PM",
	"id": 1120314
}, {
	"sha1": "7c7ecf4cffda166938efd0ae34830e2979c25c73",
	"repository": "https://github.com/liferay/liferay-plugins.git",
	"author": "Shinn Lok",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected updateSyncDLObject(syncDLObject SyncDLObject) : void extracted from public onAfterUpdate(resourcePermission ResourcePermission) : void in class com.liferay.sync.hook.listeners.ResourcePermissionModelListener"
	}],
	"time": "6/19/15 3:00 PM",
	"id": 1120442
}, {
	"sha1": "a896b8bf8f7067e41291eb7771deed76b3621fa0",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Anish Khanzode",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private m_framework : Framework from class org.voltdb.importer.ImportProcessor.BundleWrapper to class org.voltdb.importer.ImportProcessor"
	}],
	"time": "6/19/15 4:07 PM",
	"id": 1120321
}, {
	"sha1": "2d036ecf1d7170b4ec7346579a1ef8904109530a",
	"repository": "https://github.com/mockito/mockito.git",
	"author": "Brice Dutheil",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private allMockedTypes(features MockFeatures<T>) : Class<?>[] extracted from public generateMockClass(features MockFeatures<T>) : Class<? extends T> in class org.mockito.internal.creation.bytebuddy.MockBytecodeGenerator"
	}],
	"time": "6/19/15 4:07 PM",
	"id": 1120985
}, {
	"sha1": "40f00732b9652350ac11830367fd32db67987fc7",
	"repository": "https://github.com/apache/tomcat.git",
	"author": "Mark Thomas",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private certificateKeystoreType : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Method",
		"description": "Move Method public getCertificateKeyAlias() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeyAlias() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private certificateKeystoreFile : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private certificateKeyAlias : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private certificateKeystoreProvider : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private certificateKeystorePassword : String from class org.apache.tomcat.util.net.SSLHostConfig to class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Method",
		"description": "Move Method public getCertificateKeystoreFile() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreFile() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Method",
		"description": "Move Method public getCertificateKeystorePassword() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystorePassword() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Method",
		"description": "Move Method public getCertificateKeystoreType() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreType() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}, {
		"type": "Move Method",
		"description": "Move Method public getCertificateKeystoreProvider() : String from class org.apache.tomcat.util.net.SSLHostConfig to public getCertificateKeystoreProvider() : String from class org.apache.tomcat.util.net.SSLHostConfigCertificate"
	}],
	"time": "6/19/15 4:38 PM",
	"id": 1120391
}, {
	"sha1": "7e104c3ed4b80ec8e9b72356396f879d1067cc40",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Eugene Susla",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private downloadArtifact(artifactToDownload Artifact, repoSys RepositorySystem, session RepositorySystemSession, buckFiles Map<Path,SortedSet<Prebuilt>>, graph MutableDirectedGraph<Artifact>) : void extracted from public resolve(mavenCoords String[]) : void in class com.facebook.buck.maven.Resolver"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createBuckFiles(buckFilesData Map<Path,SortedSet<Prebuilt>>) : void extracted from public resolve(mavenCoords String[]) : void in class com.facebook.buck.maven.Resolver"
	}],
	"time": "6/19/15 6:27 PM",
	"id": 1120931
}, {
	"sha1": "acf67c8cb58d13827e14bbeeec11a66f9277015f",
	"repository": "https://github.com/processing/processing.git",
	"author": "Ben Fry",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method protected runSketchEDT(args String[], constructedSketch PApplet) : void inlined to public runSketch(args String[], constructedSketch PApplet) : void in class processing.core.PApplet"
	}],
	"time": "6/19/15 6:31 PM",
	"id": 1121053
}, {
	"sha1": "e2dd54ab180b577b08cf6b0e69310ac81fc99fd3",
	"repository": "https://github.com/apache/hive.git",
	"author": "Jason Dere",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private foldExprFull(desc ExprNodeDesc, constants Map<ColumnInfo,ExprNodeDesc>, cppCtx ConstantPropagateProcCtx, op Operator<? extends Serializable>, tag int, propagate boolean) : ExprNodeDesc extracted from private foldExpr(desc ExprNodeDesc, constants Map<ColumnInfo,ExprNodeDesc>, cppCtx ConstantPropagateProcCtx, op Operator<? extends Serializable>, tag int, propagate boolean) : ExprNodeDesc in class org.apache.hadoop.hive.ql.optimizer.ConstantPropagateProcFactory"
	}],
	"time": "6/19/15 7:19 PM",
	"id": 1121499
}, {
	"sha1": "e32f161fc023d1ee153c49df312ae10b06941465",
	"repository": "https://github.com/opentripplanner/OpenTripPlanner.git",
	"author": "Andrew Byrd",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.opentripplanner.analyst.qbroker to org.opentripplanner.analyst.broker"
	}],
	"time": "6/19/15 7:36 PM",
	"id": 1121439
}, {
	"sha1": "da6167af3bdbf7663af6c20fb603aba27dd5e174",
	"repository": "https://github.com/ratpack/ratpack.git",
	"author": "Luke Daley",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private post(responseStatus HttpResponseStatus, lastContentFuture ChannelFuture) : void extracted from private post(responseStatus HttpResponseStatus) : void in class ratpack.server.internal.DefaultResponseTransmitter"
	}],
	"time": "6/19/15 10:53 PM",
	"id": 1121219
}, {
	"sha1": "cd8c4d578a609bdd6395d3a8c49bfd19ed700dea",
	"repository": "https://github.com/brettwooldridge/HikariCP.git",
	"author": "Brett Wooldridge",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.zaxxer.hikari.util.NanosecondClockSource moved to com.zaxxer.hikari.util.ClockSource.NanosecondClockSource"
	}, {
		"type": "Move Class",
		"description": "Move Class com.zaxxer.hikari.util.MillisecondClockSource moved to com.zaxxer.hikari.util.ClockSource.MillisecondClockSource"
	}],
	"time": "6/20/15 3:06 AM",
	"id": 1120998
}, {
	"sha1": "1571049ec04b1e7e6f082ed5ec071584e7200c12",
	"repository": "https://github.com/brettwooldridge/HikariCP.git",
	"author": "Brett Wooldridge",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.zaxxer.hikari.util.IConcurrentBagEntry moved to com.zaxxer.hikari.util.ConcurrentBag.IConcurrentBagEntry"
	}, {
		"type": "Move Class",
		"description": "Move Class com.zaxxer.hikari.util.IBagStateListener moved to com.zaxxer.hikari.util.ConcurrentBag.IBagStateListener"
	}],
	"time": "6/20/15 3:12 AM",
	"id": 1120997
}, {
	"sha1": "5fb36a321af7df470d4c845cb18da8f85be31c38",
	"repository": "https://github.com/scobal/seyren.git",
	"author": "alenkacz",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private evaluateTemplate(check Check, subscription Subscription, alerts List<Alert>, templateContent String) : String extracted from public createBody(check Check, subscription Subscription, alerts List<Alert>) : String in class com.seyren.core.util.velocity.VelocityEmailHelper"
	}],
	"time": "6/20/15 4:49 AM",
	"id": 1121744
}, {
	"sha1": "71820e573134be3fad3935035249cd77c4412f4e",
	"repository": "https://github.com/SlimeKnights/TinkersConstruct.git",
	"author": "Bernhard Bonigl",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class tconstruct.library.modifiers.RecipeMatch moved to tconstruct.library.mantle.RecipeMatch"
	}],
	"time": "6/20/15 11:27 AM",
	"id": 1120836
}, {
	"sha1": "de50b3becb31c367f867382ff9cd898ba1628350",
	"repository": "https://github.com/open-keychain/open-keychain.git",
	"author": "Adithya Abraham Philip",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public isOrbotInRequiredState(middleButton int, middleButtonRunnable Runnable, fragmentActivity FragmentActivity) : boolean extracted from public isOrbotInRequiredState(middleButton int, middleButtonRunnable Runnable, proxyPrefs ProxyPrefs, fragmentActivity FragmentActivity) : boolean in class org.sufficientlysecure.keychain.util.orbot.OrbotHelper"
	}],
	"time": "6/20/15 3:42 PM",
	"id": 1120602
}, {
	"sha1": "c45b9e6615181b7d8f4d7b5b1cc141169081c02c",
	"repository": "https://github.com/osmandapp/Osmand.git",
	"author": "Victor Shcherb",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private addPreviousToActionPoints(lastProjection Location, routeNodes List<Location>, DISTANCE_ACTION double, prevFinishPoint int, routePoint int, loc Location) : void extracted from private calculateActionPoints(topLatitude double, leftLongitude double, bottomLatitude double, rightLongitude double, lastProjection Location, routeNodes List<Location>, cd int, it Iterator<RouteDirectionInfo>, zoom int) : void in class net.osmand.plus.views.RouteLayer"
	}],
	"time": "6/20/15 5:09 PM",
	"id": 1120722
}, {
	"sha1": "ffae1691c0cd526ed1095fbabbc0855d016790d7",
	"repository": "https://github.com/apache/drill.git",
	"author": "Jinfeng Ni",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected validateAndConvert(sqlNode SqlNode) : ConvertedRelNode extracted from public getPlan(sqlNode SqlNode) : PhysicalPlan in class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected convertToDrel(relNode RelNode) : DrillRel extracted from protected convertToDrel(relNode RelNode, validatedRowType RelDataType) : DrillRel in class org.apache.drill.exec.planner.sql.handlers.DefaultSqlHandler"
	}],
	"time": "6/20/15 7:42 PM",
	"id": 1121732
}, {
	"sha1": "5d1a70a4d32ac4c96a32535c68c69b20288d8968",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "jinchul.kim",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package removeLruProcessLocked(app ProcessRecord) : void in class com.android.server.am.ActivityManagerService"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package appDiedLocked(app ProcessRecord, pid int, thread IApplicationThread, fromBinderDied boolean) : void in class com.android.server.am.ActivityManagerService"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public killProcessGroup(uid int, pid int) : void extracted from package startProcessLocked(processName String, info ApplicationInfo, knownToBeDead boolean, intentFlags int, hostingType String, hostingName ComponentName, allowWhileBooting boolean, isolated boolean, isolatedUid int, keepIfLarge boolean, abiOverride String, entryPoint String, entryPointArgs String[], crashHandler Runnable) : ProcessRecord in class com.android.server.am.ActivityManagerService"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public killProcessGroup(uid int, pid int) : void extracted from private crashApplication(r ProcessRecord, crashInfo CrashInfo) : void in class com.android.server.am.ActivityManagerService"
		}

	],
	"time": "6/20/15 9:39 PM",
	"id": 1120496
}, {
	"sha1": "7a2e0ae5f6172cbe34f9bc4a5cde666314ff75dd",
	"repository": "https://github.com/codefollower/Lealone.git",
	"author": "Honghua Zhu",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package setPassword(user User, session Session, password Expression) : void extracted from public update() : int in class org.lealone.command.ddl.CreateUser"
	}, {
		"type": "Extract Method",
		"description": "Extract Method package setSaltAndHash(user User, session Session, salt Expression, hash Expression) : void extracted from public update() : int in class org.lealone.command.ddl.CreateUser"
	}],
	"time": "6/20/15 11:57 PM",
	"id": 1120803
}, {
	"sha1": "b36ab386559d04db114db8edd87c8d4cbf850c12",
	"repository": "https://github.com/joel-costigliola/assertj-core.git",
	"author": "Joel Costigliola",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass org.assertj.core.api.StrictAssertions from class org.assertj.core.api.Assertions"
	}],
	"time": "6/21/15 2:25 AM",
	"id": 1120898
}, {
	"sha1": "bec15926deb49d2b3f7b979d4cfc819947a434ec",
	"repository": "https://github.com/languagetool-org/languagetool.git",
	"author": "Andriy Rysin",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute public VIDMINKY_MAP : Map from class org.languagetool.tagging.uk.UkrainianTagger to class org.languagetool.tagging.uk.PosTagHelper"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private hasRequiredPosTag(posTagsToFind Collection, tokenReadings AnalyzedTokenReadings) : boolean renamed to private getReadingWithVidmPosTag(posTagsToFind Collection, tokenReadings AnalyzedTokenReadings) : boolean in class org.languagetool.rules.uk.TokenAgreementRule"
	}],
	"time": "6/21/15 12:33 PM",
	"id": 1121417
}, {
	"sha1": "4ffcb5a65e6d24c58ef75a5cd7692e875619548d",
	"repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
	"author": "Justin Wetherell",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private collectGarbage() : void extracted from public main(args String[]) : void in class com.jwetherell.algorithms.sorts.timing.SortsTiming"
	}],
	"time": "6/21/15 4:41 PM",
	"id": 1120785
}, {
	"sha1": "f2385a56e6aa040ea4ff18a23ce5b63a4eeacf29",
	"repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
	"author": "Justin Wetherell",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private putOutTheGarbage() : void extracted from public main(args String[]) : void in class com.jwetherell.algorithms.sorts.timing.SortsTiming"
	}],
	"time": "6/21/15 5:27 PM",
	"id": 1120782
}, {
	"sha1": "c8e09e2056c54ead97bce4386a25b222154223b1",
	"repository": "https://github.com/droolsjbpm/drools.git",
	"author": "kedzie",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface org.drools.core.util.ByteArrayClassLoader from class org.drools.core.base.ClassFieldAccessorCache.DefaultByteArrayClassLoader"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public loadClass(className String, classLoader ClassLoader) : Class<?> extracted from public instantiateObject(className String, classLoader ClassLoader) : Object in class org.drools.core.util.ClassUtils"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public instantiateObject(className String, args Object[]) : Object extracted from public instantiateObject(className String) : Object in class org.drools.core.util.ClassUtils"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.drools.core.base.ClassFieldAccessorCache.ByteArrayClassLoader renamed to org.drools.core.base.ClassFieldAccessorCache.DefaultByteArrayClassLoader"
	}],
	"time": "6/21/15 6:50 PM",
	"id": 1121326
}, {
	"sha1": "09b9d989658ef5bf9333c081c92b57a7611ad207",
	"repository": "https://github.com/querydsl/querydsl.git",
	"author": "Ruben Dijkstra",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class com.querydsl.sql.types.JSR310InstantTypeTest"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass com.querydsl.sql.types.AbstractJSR310DateTimeTypeTest from class 6 others"
	}],
	"time": "6/21/15 7:29 PM",
	"id": 1120650
}, {
	"sha1": "dd4bc630c3de70204081ab196945d6b55ab03beb",
	"repository": "https://github.com/spring-projects/spring-framework.git",
	"author": "Juergen Hoeller",
	"refactorings": [{
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute private completableFuturePresent : boolean from class org.springframework.aop.interceptor.AsyncExecutionInterceptor to class org.springframework.aop.interceptor.AsyncExecutionAspectSupport"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.aop.interceptor.AsyncExecutionInterceptor.CompletableFutureDelegate moved to org.springframework.aop.interceptor.AsyncExecutionAspectSupport.CompletableFutureDelegate"
	}],
	"time": "6/21/15 7:29 PM",
	"id": 1121426
}, {
	"sha1": "9d44f0e06232661259681d64002dd53c7c43099d",
	"repository": "https://github.com/k9mail/k-9.git",
	"author": "cketti",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private handleSendFailure(account Account, localStore Store, localFolder Folder, message Message, exception Exception, permanentFailure boolean) : void extracted from public sendPendingMessagesSynchronous(account Account) : void in class com.fsck.k9.controller.MessagingController"
	}],
	"time": "6/21/15 7:43 PM",
	"id": 1120903
}, {
	"sha1": "01cddc5afb590b4d36cb784637a8ea8aa31d3561",
	"repository": "https://github.com/languagetool-org/languagetool.git",
	"author": "Daniel Naber",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getMouseAdapter() : MouseAdapter extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createNonOfficeElements(cons GridBagConstraints, portPanel JPanel) : void extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getMotherTonguePanel(cons GridBagConstraints) : JPanel extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getTreeModel(rootNode DefaultMutableTreeNode) : DefaultTreeModel extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getTreeButtonPanel() : JPanel extracted from public show(rules List<Rule>) : void in class org.languagetool.gui.ConfigurationDialog"
	}],
	"time": "6/22/15 5:37 AM",
	"id": 1121834
}, {
	"sha1": "74d2cc420e5590ba3bc0ffcc15b30b76a9cbef0b",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Alistair Jones",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private availability() : Availability extracted from private availability(millis long) : Availability in class org.neo4j.kernel.AvailabilityGuard"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method public givenAccessGuardWith2ConditionsWhenGrantTwiceAndAwaitThenTrue() : void renamed to public givenAccessGuardWith2ConditionsWhenGrantEachAndAwaitThenTrue() : void in class org.neo4j.kernel.AvailabilityGuardTest"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method public deny(requirementNotMet AvailabilityRequirement) : void renamed to public require(requirement AvailabilityRequirement) : void in class org.neo4j.kernel.AvailabilityGuard"
	}],
	"time": "6/22/15 7:06 AM",
	"id": 1122167
}, {
	"sha1": "8ea46f48063c38473c12ca7c114106ca910b6e74",
	"repository": "https://github.com/wicketstuff/core.git",
	"author": "Andrea Del Bene",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private testRenderedTab() : void extracted from public renderSimpleTab() : void in class org.wicketstuff.foundation.tab.FoundationTabTest"
	}],
	"time": "6/22/15 7:56 AM",
	"id": 1121723
}, {
	"sha1": "70a25d4afdc435e9cad4460b2a20b7aabdd21e35",
	"repository": "https://github.com/mongodb/morphia.git",
	"author": "Ross Lodge",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private performBasicMappingTest() : void extracted from public testBasicMapping() : void in class org.mongodb.morphia.TestMapping"
	}],
	"time": "6/22/15 10:05 AM",
	"id": 1121850
}, {
	"sha1": "31a5434ea433bdec2283797bf9415c02bb2f41c1",
	"repository": "https://github.com/spring-projects/spring-framework.git",
	"author": "Sebastien Deleuze",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected addDefaultHeaders(headers HttpHeaders, t T, contentType MediaType) : void extracted from public write(t T, contentType MediaType, outputMessage HttpOutputMessage) : void in class org.springframework.http.converter.AbstractHttpMessageConverter"
	}],
	"time": "6/22/15 12:05 PM",
	"id": 1121836
}, {
	"sha1": "72acc2126611f0bff9b672de18b9b2f8dacdc03a",
	"repository": "https://github.com/Graylog2/graylog2-server.git",
	"author": "Kay Roepke",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface org.graylog2.bootstrap.CliCommand from class org.graylog2.bootstrap.CmdLineTool"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface org.graylog2.bootstrap.CliCommand from class org.graylog2.bootstrap.commands.ShowVersion"
	}, {
		"type": "Move Class",
		"description": "Move Class org.graylog2.bootstrap.commands.journal.JournalDecode moved to org.graylog2.commands.journal.JournalDecode"
	}, {
		"type": "Move Class",
		"description": "Move Class org.graylog2.UI moved to org.graylog2.shared.UI"
	}, {
		"type": "Move Class",
		"description": "Move Class org.graylog2.bootstrap.commands.journal.AbstractJournalCommand moved to org.graylog2.commands.journal.AbstractJournalCommand"
	}, {
		"type": "Move Class",
		"description": "Move Class org.graylog2.bootstrap.commands.journal.JournalTruncate moved to org.graylog2.commands.journal.JournalTruncate"
	}, {
		"type": "Move Class",
		"description": "Move Class org.graylog2.bootstrap.commands.journal.JournalShow moved to org.graylog2.commands.journal.JournalShow"
	}, {
		"type": "Move Class",
		"description": "Move Class org.graylog2.bootstrap.commands.Radio moved to org.graylog2.radio.commands.Radio"
	}, {
		"type": "Move Class",
		"description": "Move Class org.graylog2.bootstrap.commands.Server moved to org.graylog2.commands.Server"
	}],
	"time": "6/22/15 1:20 PM",
	"id": 1121861
}, {
	"sha1": "001de307492df8f84ad15f6aaa0bd1e748d4ce27",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Davide Grohmann",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.neo4j.kernel.Recovery moved to org.neo4j.kernel.recovery.Recovery"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.neo4j.kernel.impl.transaction.log.rotation.LogRotationControl renamed to org.neo4j.kernel.impl.transaction.log.rotation.StoreFlusher"
	}],
	"time": "6/22/15 1:34 PM",
	"id": 1122164
}, {
	"sha1": "3b95d10985776fb7b710089ff71074fd2bf860ee",
	"repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
	"author": "Will Kwon",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getBlogsForCurrentView() : List<Map<String,Object>> extracted from protected doInBackground(params Void[]) : SiteList in class org.wordpress.android.ui.main.SitePickerAdapter.LoadSitesTask"
	}],
	"time": "6/22/15 1:48 PM",
	"id": 1121855
}, {
	"sha1": "77fab3caea4495798a248035f0e928f745c7c2db",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Jacob Hansson",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public releaseAllShared() : void inlined to public releaseAll() : void in class org.neo4j.kernel.impl.locking.community.CommunityLockClient"
	}, {
		"type": "Inline Method",
		"description": "Inline Method public releaseAllExclusive() : void inlined to public releaseAll() : void in class org.neo4j.kernel.impl.locking.community.CommunityLockClient"
	}],
	"time": "6/22/15 2:06 PM",
	"id": 1122159
}, {
	"sha1": "186357ac6c2da1a5a12c0287a08408ac5ec6683b",
	"repository": "https://github.com/mrniko/redisson.git",
	"author": "Nikita",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public createClient(host String, port int, timeout int) : RedisClient extracted from public createClient(host String, port int) : RedisClient in class org.redisson.connection.MasterSlaveConnectionManager"
	}],
	"time": "6/22/15 2:24 PM",
	"id": 1121720
}, {
	"sha1": "ebb1c2c364e888d4a0f47abe691cb2bad4eb4e75",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Xin Jia",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private isGroupbyMatchingIndex(matchingCase MatViewIndexMacthingGroupby, groupbyColRefs List<ColumnRef>, groupbyExprs List<AbstractExpression>, indexedColRefs List<ColumnRef>, indexedExprs List<AbstractExpression>, srcColumnArray List<Column>) : boolean extracted from private findBestMatchIndexForMatviewMinOrMax(matviewinfo MaterializedViewInfo, srcTable Table, groupbyExprs List<AbstractExpression>, singleUniqueMinMaxAggExpr AbstractExpression) : Index in class org.voltdb.compiler.DDLCompiler"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private isIndexOptimalForMinMax(matchingCase MatViewIndexMacthingGroupby, singleUniqueMinMaxAggExpr AbstractExpression, indexedColRefs List<ColumnRef>, indexedExprs List<AbstractExpression>, srcColumnArray List<Column>) : boolean extracted from private findBestMatchIndexForMatviewMinOrMax(matviewinfo MaterializedViewInfo, srcTable Table, groupbyExprs List<AbstractExpression>, singleUniqueMinMaxAggExpr AbstractExpression) : Index in class org.voltdb.compiler.DDLCompiler"
	}],
	"time": "6/22/15 3:24 PM",
	"id": 1121538
}, {
	"sha1": "4d05a3b1168441216dcaea8282c39338285182af",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "alarmnummer",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.ExecutorCallbackAdapter moved to com.hazelcast.spi.InvocationBuilder.ExecutorCallbackAdapter"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.cache.impl.operation.CacheCreateConfigOperation.CacheConfigCreateCallback"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.client.impl.client.MultiTargetClientRequest.SingleTargetCallback"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.partition.impl.MigrationRequestOperation.MigrationCallback"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass com.hazelcast.spi.impl.SimpleExecutionCallback from class com.hazelcast.client.impl.protocol.task.AbstractMultiTargetMessageTask.SingleTargetCallback"
	}],
	"time": "6/22/15 3:53 PM",
	"id": 1122778
}, {
	"sha1": "a9b1e5d67421ed98b49ae25c3bbd6e27a0ab1590",
	"repository": "https://github.com/openhab/openhab.git",
	"author": "Bernd Pfrommer",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private bail(txt String) : void extracted from public processData() : Msg in class org.openhab.binding.insteonplm.internal.message.MsgFactory"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private processBindingConfiguration() : void extracted from public updated(config Dictionary<String,?>) : void in class org.openhab.binding.insteonplm.InsteonPLMActiveBinding"
	}],
	"time": "6/22/15 4:45 PM",
	"id": 1122760
}, {
	"sha1": "711992f22ae6d6dfc43bdb4c01bf8f921d175b38",
	"repository": "https://github.com/apache/drill.git",
	"author": "dbarclay",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private nextRowInternally() : boolean extracted from public next() : boolean in class org.apache.drill.jdbc.impl.DrillCursor"
	}],
	"time": "6/22/15 5:05 PM",
	"id": 1123128
}, {
	"sha1": "8c5a20d786e66ee4c4b0d743f0f80bf681c419be",
	"repository": "https://github.com/mongodb/mongo-java-driver.git",
	"author": "Jeff Yemin",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.mongodb.JsonPoweredTestHelper moved to util.JsonPoweredTestHelper"
	}],
	"time": "6/22/15 6:05 PM",
	"id": 1122348
}, {
	"sha1": "f166866cd68efa963534c5bc7fc9ca38e4aa2838",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "Kra1o5",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public is24HourFormatLocale(context Context) : boolean inlined to public is24HourFormat(context Context, userHandle int) : boolean in class android.text.format.DateFormat"
	}],
	"time": "6/22/15 7:02 PM",
	"id": 1121904
}, {
	"sha1": "b7f4914d81a7a618acf2eba52af1093fc23cfba9",
	"repository": "https://github.com/facebook/presto.git",
	"author": "Nileema Shingte",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private tryGetLookupSource() : void extracted from public getOutput() : Page in class com.facebook.presto.operator.LookupJoinOperator"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private tryGetLookupSource() : void extracted from public needsInput() : boolean in class com.facebook.presto.operator.LookupJoinOperator"
	}],
	"time": "6/22/15 9:56 PM",
	"id": 1122130
}, {
	"sha1": "e083683f4fe9206609201bb39a60bbd8ee0c8a0f",
	"repository": "https://github.com/spring-projects/spring-framework.git",
	"author": "Rossen Stoyanchev",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass org.springframework.web.socket.server.support.AbstractHandshakeHandler from class org.springframework.web.socket.server.support.DefaultHandshakeHandler"
	}],
	"time": "6/22/15 11:30 PM",
	"id": 1122508
}, {
	"sha1": "becced5f0b7bac8200df7a5706b568687b517b90",
	"repository": "https://github.com/spring-projects/spring-boot.git",
	"author": "Tomasz Przyby?a",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createPreparedEvent(propName String, propValue String) : SpringApplicationEvent extracted from public overridePidFileWithSpring() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createEnvironmentPreparedEvent(propName String, propValue String) : SpringApplicationEvent extracted from public differentEventTypes() : void in class org.springframework.boot.actuate.system.ApplicationPidFileWriterTests"
	}],
	"time": "6/23/15 3:43 AM",
	"id": 1121897
}, {
	"sha1": "6540dde58190f642e59ca10516f84eb85f855373",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Alexey Kudravtsev",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public averageAmongMedians(time long[], part int) : long from class com.intellij.testFramework.PlatformTestUtil to public averageAmongMedians(time long[], part int) : long from class com.intellij.util.ArrayUtil"
	}],
	"time": "6/23/15 6:36 AM",
	"id": 1121973
}, {
	"sha1": "0b93231025f51c7ec62fd8588985c5dc807854e4",
	"repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
	"author": "Sergey Ignatov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected doSomething(virtualFile VirtualFile, module Module, project Project, title String, withProgress boolean) : boolean extracted from protected doSomething(virtualFile VirtualFile, module Module, project Project, title String) : boolean in class com.goide.actions.fmt.GoExternalToolsAction"
	}],
	"time": "6/23/15 6:55 AM",
	"id": 1122338
}, {
	"sha1": "9a3fa887cfa03c082f249d1d4003d87c14ba5d24",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "branimir",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getRandomToken(r Random) : LongToken extracted from public getRandomToken() : LongToken in class org.apache.cassandra.dht.Murmur3Partitioner"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private generateFakeEndpoints(tmd TokenMetadata, numOldNodes int, numVNodes int) : void extracted from private generateFakeEndpoints(numOldNodes int) : void in class org.apache.cassandra.dht.BootStrapperTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getSpecifiedTokens(metadata TokenMetadata, initialTokens Collection<String>) : Collection<Token> extracted from public getBootstrapTokens(metadata TokenMetadata) : Collection<Token> in class org.apache.cassandra.dht.BootStrapper"
	}],
	"time": "6/23/15 8:03 AM",
	"id": 1122401
}, {
	"sha1": "4184c577f4bbc57f3ac13639557cfd99cdaca3e7",
	"repository": "https://github.com/infinispan/infinispan.git",
	"author": "Karsten Blees",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private stopped : boolean from class org.infinispan.persistence.async.State to class org.infinispan.persistence.async.AsyncCacheWriter"
	}],
	"time": "6/23/15 8:24 AM",
	"id": 1123482
}, {
	"sha1": "5db323b99f7064af8780f2c35f245461cf55cc8e",
	"repository": "https://github.com/mongodb/morphia.git",
	"author": "Justin Lee",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private performBasicMappingTest() : void extracted from public testBasicMapping() : void in class org.mongodb.morphia.TestMapping"
	}],
	"time": "6/23/15 9:30 AM",
	"id": 1122541
}, {
	"sha1": "5373a852a7e45715e0a6771b7cd56592994c07dd",
	"repository": "https://github.com/crate/crate.git",
	"author": "Philipp Bogensberger",
	"refactorings": [{
		"type": "Push Down Method",
		"description": "Push Down Method public plan() : Plan from class io.crate.planner.node.dql.ESDQLPlanNode to class io.crate.planner.node.dql.ESGetNode"
	}],
	"time": "6/23/15 10:52 AM",
	"id": 1122454
}, {
	"sha1": "b8929ccb4057c74ac64679216487a4abcd3ae1c3",
	"repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
	"author": "Alexander Zolotov",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private GO_CHECK_IMPORT_PATH : Pattern from class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration to class com.goide.runconfig.GoRunUtil"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isAvailableInModule(module Module) : boolean extracted from protected setupConfigurationFromContext(configuration GoTestRunConfigurationBase, context ConfigurationContext, sourceElement Ref) : boolean in class com.goide.runconfig.testing.GoTestRunConfigurationProducerBase"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private GO_CHECK_GITHUB_IMPORT_PATH : Pattern from class com.goide.runconfig.testing.frameworks.gocheck.GocheckRunConfiguration to class com.goide.runconfig.GoRunUtil"
	}],
	"time": "6/23/15 1:18 PM",
	"id": 1123108
}, {
	"sha1": "99528dcc3b4a82b5e52a87d3e7aed5c6479028c7",
	"repository": "https://github.com/WhisperSystems/TextSecure.git",
	"author": "Moxie Marlinspike",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class ExpandingLayerDrawable moved from org.thoughtcrime.securesms.contacts.ContactPhotoFactory to org.thoughtcrime.securesms.contacts.avatars.ResourceContactPhoto"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private getSynchronousRecipient(context Context, recipientId long) : Recipient inlined to package getRecipient(context Context, recipientId long, asynchronous boolean) : Recipient in class org.thoughtcrime.securesms.recipients.RecipientProvider"
	}],
	"time": "6/23/15 2:15 PM",
	"id": 1123651
}, {
	"sha1": "d3533c1a0716ca114d294b3ea183504c9725698f",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Jacob Hansson",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createNewThread(group Group, job Runnable, metadata Map<String,String>) : Thread extracted from public schedule(group Group, job Runnable, metadata Map<String,String>) : JobHandle in class org.neo4j.kernel.impl.util.Neo4jJobScheduler"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.neo4j.ndp.transport.socket.client.WebSocketConnection renamed to org.neo4j.ndp.transport.socket.client.SecureWebSocketConnection"
	}],
	"time": "6/23/15 2:17 PM",
	"id": 1124846
}, {
	"sha1": "e70b04810eb1e73f60e3d8b3980b8271ce473565",
	"repository": "https://github.com/springfox/springfox.git",
	"author": "Dilip Krishnan",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class springfox.documentation.schema.property.provider.DefaultModelPropertiesProvider moved to springfox.documentation.schema.property.DefaultModelPropertiesProvider"
	}, {
		"type": "Move Class",
		"description": "Move Class springfox.documentation.schema.property.provider.ModelPropertiesProvider moved to springfox.documentation.schema.property.ModelPropertiesProvider"
	}],
	"time": "6/23/15 2:54 PM",
	"id": 1123376
}, {
	"sha1": "abe6cd5d4614eb2ae3a78d85196f4d786d5886bd",
	"repository": "https://github.com/apache/hive.git",
	"author": "Pengcheng Xiong",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private uniqueCounter : int from class org.apache.hadoop.hive.ql.optimizer.calcite.translator.HiveOpConverterPostProc to class org.apache.hadoop.hive.ql.optimizer.calcite.translator.HiveOpConverter"
	}],
	"time": "6/23/15 3:02 PM",
	"id": 1123509
}, {
	"sha1": "8815eb7d947be6d2a0281c15a3a60d8ba040db95",
	"repository": "https://github.com/apache/drill.git",
	"author": "Sudheesh Katkam",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.handlers.SqlHandlerUtil"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.vector.complex.impl.$"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.SchemaUtilites"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.client.PrintingResultsListener"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.expr.fn.impl.AggregateErrorFunctions"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.store.parquet.ParquetReaderUtility"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.common.exceptions.TestUserException"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.handlers.CreateTableHandler"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.DrillSqlWorker"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.handlers.DescribeTableHandler"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private logger : Logger from class org.apache.drill.common.exceptions.UserException to class org.apache.drill.exec.planner.sql.handlers.ShowTablesHandler"
	}],
	"time": "6/23/15 4:01 PM",
	"id": 1123124
}, {
	"sha1": "3d5e343df6a39ce3b41624b90974d83e9899541e",
	"repository": "https://github.com/go-lang-plugin-org/go-lang-idea-plugin.git",
	"author": "Alexander Zolotov",
	"refactorings": [{
		"type": "Rename Method",
		"description": "Rename Method public getVariants() : Object[] renamed to public processResolveVariants(processor GoScopeProcessor) : void in class com.goide.psi.impl.GoVarReference"
	}],
	"time": "6/23/15 4:19 PM",
	"id": 1123103
}, {
	"sha1": "ec5230abc7500734d7b78a176c291378e100a927",
	"repository": "https://github.com/spring-projects/spring-integration.git",
	"author": "Gary Russell",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private doClose() : void inlined to public close() : void in class org.springframework.integration.ip.tcp.connection.CachingClientConnectionFactory.CachedConnection"
	}],
	"time": "6/23/15 4:35 PM",
	"id": 1123153
}, {
	"sha1": "5f78f9ef1e6c798849d34cc66721e6c1d9709b6f",
	"repository": "https://github.com/apache/hive.git",
	"author": "Prasanth Jayachandran",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package generateSplitsInfo(conf Configuration, numSplits int) : List<OrcSplit> extracted from package generateSplitsInfo(conf Configuration) : List<OrcSplit> in class org.apache.hadoop.hive.ql.io.orc.OrcInputFormat"
	}],
	"time": "6/23/15 6:19 PM",
	"id": 1123501
}, {
	"sha1": "37d842bfed9779e662321a5ee43c36b058386843",
	"repository": "https://github.com/wildfly/wildfly.git",
	"author": "Brian Stansberry",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public executeReloadAndWaitForCompletion(client ModelControllerClient, timeout int) : void extracted from public executeReloadAndWaitForCompletion(client ModelControllerClient) : void in class org.jboss.as.test.shared.ServerReload"
	}],
	"time": "6/23/15 8:14 PM",
	"id": 1122787
}, {
	"sha1": "b25d3f32ed2e2da86f5c746098686445c2e2a314",
	"repository": "https://github.com/Netflix/zuul.git",
	"author": "Mike Smith",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private putFilter(sName String, filter ZuulFilter, lastModified long) : void extracted from public putFilter(file File) : boolean in class com.netflix.zuul.FilterLoader"
	}],
	"time": "6/23/15 11:44 PM",
	"id": 1122892
}, {
	"sha1": "fab1516773d50bf86d9cc37e2f6db13496f0ecae",
	"repository": "https://github.com/jersey/jersey.git",
	"author": "Michal Gajdos",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public close() : void extracted from public hasNext() : boolean in class org.glassfish.jersey.server.internal.scanning.JarFileScanner"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private init() : void extracted from public FilesScanner(fileNames String[], recursive boolean) in class org.glassfish.jersey.server.internal.scanning.FilesScanner"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private init() : void extracted from public reset() : void in class org.glassfish.jersey.server.internal.scanning.FilesScanner"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.glassfish.jersey.server.internal.scanning.ResourceFinderStackTest renamed to org.glassfish.jersey.server.internal.scanning.CompositeResourceFinderTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.glassfish.jersey.server.internal.scanning.ResourceFinderStack renamed to org.glassfish.jersey.server.internal.scanning.CompositeResourceFinder"
	}],
	"time": "6/24/15 6:33 AM",
	"id": 1123789
}, {
	"sha1": "32dd05fc13b53873bf18c589622b55d12e3883c7",
	"repository": "https://github.com/jankotek/MapDB.git",
	"author": "Jan Kotek",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private insertOrUpdate(recid long, out DataOutputByteArray, isInsert boolean) : void extracted from protected update2(recid long, out DataOutputByteArray) : void in class org.mapdb.StoreAppend"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method protected longStackValParitySet(value long) : long from class org.mapdb.StoreDirect to protected longParitySet(value long) : long from class org.mapdb.Store"
	}],
	"time": "6/24/15 8:51 AM",
	"id": 1122979
}, {
	"sha1": "2fd96c777164dd812e8b5a4294b162889601df1d",
	"repository": "https://github.com/bitcoinj/bitcoinj.git",
	"author": "Amichai Rothman",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public newSha256Digest() : MessageDigest extracted from public sha256hash160(input byte[]) : byte[] in class org.bitcoinj.core.Utils"
	}],
	"time": "6/24/15 10:21 AM",
	"id": 1123773
}, {
	"sha1": "a6601066ddc72ef8e71c46c5a51e1252ea0a1af5",
	"repository": "https://github.com/bitcoinj/bitcoinj.git",
	"author": "Amichai Rothman",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private digest : MessageDigest from class org.bitcoinj.core.Utils to class org.bitcoinj.core.Sha256Hash"
	}],
	"time": "6/24/15 10:21 AM",
	"id": 1123770
}, {
	"sha1": "1d96e1ad1dca6e2151603e10515bb04f0c2730fc",
	"repository": "https://github.com/bitcoinj/bitcoinj.git",
	"author": "Michael Bell",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public updatedChannel(channel StoredServerChannel) : void extracted from public closeChannel(channel StoredServerChannel) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelServerStates"
	}, {
		"type": "Extract Method",
		"description": "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from package removeChannel(channel StoredClientChannel) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates"
	}, {
		"type": "Extract Method",
		"description": "Extract Method package updatedChannel(channel StoredClientChannel) : void extracted from private putChannel(channel StoredClientChannel, updateWallet boolean) : void in class org.bitcoinj.protocols.channels.StoredPaymentChannelClientStates"
	}],
	"time": "6/24/15 10:29 AM",
	"id": 1123761
}, {
	"sha1": "6c59050b8b03adf6d8043f3fb7add0496f447edf",
	"repository": "https://github.com/structr/structr.git",
	"author": "Axel Morgner",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getSchemaProperties(schemaNode SchemaNode) : List<SchemaProperty> extracted from private getPropertiesForView(type Class, view String, schemaNode SchemaNode) : Map<String,Object> in class org.structr.rest.resource.SchemaTypeResource"
	}],
	"time": "6/24/15 10:45 AM",
	"id": 1123527
}, {
	"sha1": "cfea606b129dbfc5703eb279d4803185afc99c58",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Natthu Bharambe",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getPathToJSBundleDir(target BuildTarget) : Path extracted from protected ReactNativeBundle(ruleParams BuildRuleParams, resolver SourcePathResolver, entryPath SourcePath, isDevMode boolean, bundleName String, jsPackager SourcePath, platform ReactNativePlatform, depsFinder ReactNativeDeps) in class com.facebook.buck.js.ReactNativeBundle"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getPathToResources() : Path renamed to public getResources() : Path in class com.facebook.buck.js.ReactNativeBundle"
	}],
	"time": "6/24/15 1:08 PM",
	"id": 1123736
}, {
	"sha1": "f797bfa4da53315b49f8d97b784047f33ba1bf5f",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Stefania Alborghetti",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private fromUnixTimestamp(timestamp long, nanos long) : long extracted from private fromUnixTimestamp(timestamp long) : long in class org.apache.cassandra.utils.UUIDGen"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected createTableName() : String extracted from protected createTable(query String) : String in class org.apache.cassandra.cql3.CQLTester"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private makeCasRequest(queryState QueryState, options QueryOptions) : CQL3CasRequest extracted from public executeWithCondition(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.ModificationStatement"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage extracted from public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.cql3.TypeTest moved to org.apache.cassandra.cql3.validation.entities.TypeTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private makeCasRequest(options BatchQueryOptions, state QueryState) : Pair<CQL3CasRequest,Set<ColumnDefinition>> extracted from private executeWithConditions(options BatchQueryOptions, state QueryState) : ResultMessage in class org.apache.cassandra.cql3.statements.BatchStatement"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.cql3.CrcCheckChanceTest moved to org.apache.cassandra.cql3.validation.miscellaneous.CrcCheckChanceTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.cql3.SSTableMetadataTrackingTest moved to org.apache.cassandra.cql3.validation.miscellaneous.SSTableMetadataTrackingTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected assertInvalidThrowMessage(errorMessage String, exception Class<? extends Throwable>, query String, values Object[]) : void extracted from protected assertInvalidMessage(errorMessage String, query String, values Object[]) : void in class org.apache.cassandra.cql3.CQLTester"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public executeInternalWithoutCondition(queryState QueryState, options QueryOptions) : ResultMessage extracted from public executeInternal(queryState QueryState, options QueryOptions) : ResultMessage in class org.apache.cassandra.cql3.statements.ModificationStatement"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.cql3.FrozenCollectionsTest moved to org.apache.cassandra.cql3.validation.entities.FrozenCollectionsTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.cql3.UserTypesTest moved to org.apache.cassandra.cql3.validation.entities.UserTypesTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.apache.cassandra.cql3.SliceQueryFilterWithTombstonesTest renamed to org.apache.cassandra.cql3.validation.miscellaneous.TombstonesTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.apache.cassandra.cql3.UseStatementTest renamed to org.apache.cassandra.cql3.validation.operations.UseTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.apache.cassandra.cql3.MultiColumnRelationTest renamed to org.apache.cassandra.cql3.validation.operations.SelectMultiColumnRelationTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.apache.cassandra.cql3.SingleColumnRelationTest renamed to org.apache.cassandra.cql3.validation.operations.SelectSingleColumnRelationTest"
	}],
	"time": "6/24/15 1:10 PM",
	"id": 1123899
}, {
	"sha1": "d49765899cb9df6781fff9773ffc244b5167351c",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Russell Porter",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet<Path>, locales ImmutableSet<String>) : Predicate<Path> extracted from public testFilterLocales() : void in class com.facebook.buck.android.FilterResourcesStepTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getTestPathPredicate(enableStringWhitelisting boolean, whitelistedStringDirs ImmutableSet<Path>, locales ImmutableSet<String>) : Predicate<Path> extracted from public testFilterStrings() : void in class com.facebook.buck.android.FilterResourcesStepTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public enableStringsFilter() : Builder renamed to public enableStringWhitelisting() : Builder in class com.facebook.buck.android.FilterResourcesStep.Builder"
	}],
	"time": "6/24/15 1:21 PM",
	"id": 1123715
}, {
	"sha1": "84b7b3974ae8171a4de2f804eb94fcd1d6cd6647",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Simon Stewart",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.facebook.buck.java.ReportGenerator moved to com.facebook.buck.java.coverage.ReportGenerator"
	}],
	"time": "6/24/15 1:23 PM",
	"id": 1123712
}, {
	"sha1": "071588a418dbc743e0f7dbfe218cd8a6c0f97421",
	"repository": "https://github.com/spring-projects/spring-data-neo4j.git",
	"author": "Vince Bickers",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.springframework.data.neo4j.integration to org.springframework.data.neo4j.examples"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.springframework.data.neo4j.integration.movies to org.springframework.data.neo4j.queries"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.springframework.data.neo4j.integration.helloworld to org.springframework.data.neo4j.examples.galaxy"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.transactions.ApplicationConfig moved to org.springframework.data.neo4j.transactions.ApplicationConfig"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.repositories.ProgrammaticRepositoryTest moved to org.springframework.data.neo4j.repositories.ProgrammaticRepositoryTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.extensions.UserRepository moved to org.springframework.data.neo4j.extensions.UserRepository"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.template.ExceptionTranslationTest moved to org.springframework.data.neo4j.template.ExceptionTranslationTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.MovieRepository moved to org.springframework.data.neo4j.repositories.repo.MovieRepository"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.transactions.TransactionBoundaryTest moved to org.springframework.data.neo4j.transactions.TransactionBoundaryTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.domain.Cinema moved to org.springframework.data.neo4j.web.domain.Cinema"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.repositories.RepoScanningTest moved to org.springframework.data.neo4j.repositories.RepoScanningTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.repositories.RepositoryDefinitionTest moved to org.springframework.data.neo4j.repositories.RepositoryDefinitionTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.movies.TransactionIntegrationTest moved to org.springframework.data.neo4j.transactions.TransactionIntegrationTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.WebIntegrationTest moved to org.springframework.data.neo4j.web.WebIntegrationTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepositoryTest moved to org.springframework.data.neo4j.extensions.CustomGraphRepositoryTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.repository.support.GraphRepositoryFactoryTest moved to org.springframework.data.neo4j.repositories.support.GraphRepositoryFactoryTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.UserRepository moved to org.springframework.data.neo4j.repositories.repo.UserRepository"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.template.TemplateApplicationEventTest moved to org.springframework.data.neo4j.template.TemplateApplicationEventTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.template.context.DataManipulationEventConfiguration moved to org.springframework.data.neo4j.template.context.DataManipulationEventConfiguration"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.domain.Genre moved to org.springframework.data.neo4j.examples.movies.domain.Genre"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.transactions.service.WrapperService moved to org.springframework.data.neo4j.transactions.service.WrapperService"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomPersistenceContext moved to org.springframework.data.neo4j.extensions.CustomPersistenceContext"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.repo.UserRepository moved to org.springframework.data.neo4j.web.repo.UserRepository"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepository moved to org.springframework.data.neo4j.extensions.CustomGraphRepository"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.context.WebAppContext moved to org.springframework.data.neo4j.web.context.WebAppContext"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.repositories.domain.Movie moved to org.springframework.data.neo4j.repositories.domain.Movie"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.service.UserService moved to org.springframework.data.neo4j.web.service.UserService"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.extensions.domain.User moved to org.springframework.data.neo4j.extensions.domain.User"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.extensions.CustomGraphRepositoryImpl moved to org.springframework.data.neo4j.extensions.CustomGraphRepositoryImpl"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.service.UserServiceImpl moved to org.springframework.data.neo4j.web.service.UserServiceImpl"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.transactions.service.BusinessService moved to org.springframework.data.neo4j.transactions.service.BusinessService"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.repo.GenreRepository moved to org.springframework.data.neo4j.web.repo.GenreRepository"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.repositories.domain.User moved to org.springframework.data.neo4j.repositories.domain.User"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.domain.User moved to org.springframework.data.neo4j.web.domain.User"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.template.Neo4jTemplateTest moved to org.springframework.data.neo4j.template.Neo4jTemplateTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.movies.domain.Genre moved to org.springframework.data.neo4j.web.domain.Genre"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.context.WebPersistenceContext moved to org.springframework.data.neo4j.web.context.WebPersistenceContext"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.web.controller.UserController moved to org.springframework.data.neo4j.web.controller.UserController"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.template.TestNeo4jEventListener moved to org.springframework.data.neo4j.template.TestNeo4jEventListener"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.data.neo4j.integration.repositories.repo.PersistenceContextInTheSamePackage moved to org.springframework.data.neo4j.repositories.repo.PersistenceContextInTheSamePackage"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.springframework.data.neo4j.integration.repositories.context.PersistenceContext renamed to org.springframework.data.neo4j.repositories.context.RepositoriesTestContext"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.springframework.data.neo4j.integration.movies.context.PersistenceContext renamed to org.springframework.data.neo4j.examples.movies.context.MoviesContext"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.springframework.data.neo4j.integration.helloworld.context.HelloWorldContext renamed to org.springframework.data.neo4j.examples.galaxy.context.GalaxyContext"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.springframework.data.neo4j.integration.movies.End2EndIntegrationTest renamed to org.springframework.data.neo4j.examples.movies.MoviesIntegrationTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.springframework.data.neo4j.integration.jsr303.PersistenceConfiguration renamed to org.springframework.data.neo4j.examples.jsr303.JSR303Context"
	}],
	"time": "6/24/15 2:10 PM",
	"id": 1123966
}, {
	"sha1": "fce2d1f07c14bbac286e16ec666fd4bf26abd43d",
	"repository": "https://github.com/rackerlabs/blueflood.git",
	"author": "Chinmay Gupte",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to public sendResponse(channel ChannelHandlerContext, request HttpRequest, messageBody String, status HttpResponseStatus) : void from class com.rackspacecloud.blueflood.http.DefaultHandler"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private sendResponseTimer : Timer from class com.rackspacecloud.blueflood.inputs.handlers.HttpMetricsIngestionHandler to class com.rackspacecloud.blueflood.http.DefaultHandler"
	}],
	"time": "6/24/15 2:36 PM",
	"id": 1123699
}, {
	"sha1": "add1d4f07c925b8a9044cb3aa5bb4abdeaf49fc7",
	"repository": "https://github.com/apache/giraph.git",
	"author": "Maja Kabiljo",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private registerSerializer(kryo HadoopKryo, className String, serializer Serializer) : void extracted from private createKryo() : HadoopKryo in class org.apache.giraph.writable.kryo.HadoopKryo"
	}],
	"time": "6/24/15 4:23 PM",
	"id": 1123840
}, {
	"sha1": "ab98bcacf6e5bf1c3a06f6bcca68f178f880ffc9",
	"repository": "https://github.com/phishman3579/java-algorithms-implementation.git",
	"author": "Justin Wetherell",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private runTest(testable Testable, unsorted Integer[], sorted Integer[], results double[], count int) : int extracted from public main(args String[]) : void in class com.jwetherell.algorithms.sorts.timing.SortsTiming"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private runTests(testable Testable, tests int, unsorteds Integer[][], sorteds Integer[][], strings String[]) : boolean extracted from private runTests() : boolean in class com.jwetherell.algorithms.data_structures.timing.DataStructuresTiming"
	}],
	"time": "6/24/15 5:48 PM",
	"id": 1123684
}, {
	"sha1": "22fb2c9c6974bd1fe0f6ff684f52e6cfbed1a387",
	"repository": "https://github.com/gwtproject/gwt.git",
	"author": "Goktug Gokdogan",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void extracted from public visit(type JInterfaceType, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private rescueMembersAndInstantiateSuperInterfaces(type JDeclaredType) : void extracted from public visit(type JClassType, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public _disabled_testJsType3DimArray_castedFromNativeWithACall() : void renamed to public __disabled__testJsType3DimArray_castedFromNativeWithACall() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private rescueMembersIfInstantiable(type JDeclaredType) : void renamed to private rescueMembers(type JDeclaredType) : void in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public _disabled_testJsTypeArray_returnFromNativeWithACall() : void renamed to public testJsTypeArray_returnFromNativeWithACall() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public _disabled_testJsTypeArray_asAField() : void renamed to public __disabled__testJsTypeArray_asAField() : void in class com.google.gwt.core.client.interop.JsTypeArrayTest"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private rescueAndInstantiate(type JClassType) : void inlined to public visit(x JNewInstance, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private rescueAndInstantiate(type JClassType) : void inlined to public visit(x JsniMethodRef, ctx Context) : boolean in class com.google.gwt.dev.jjs.impl.ControlFlowAnalyzer.RescueVisitor"
	}],
	"time": "6/24/15 6:41 PM",
	"id": 1124507
}, {
	"sha1": "abba5d83602c7ae23901bd579ba9fbb7dc36adc0",
	"repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
	"author": "Chris Kittrell",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass org.broadleafcommerce.openadmin.dto.override.MetadataOverride from class org.broadleafcommerce.openadmin.dto.override.FieldMetadataOverride"
	}],
	"time": "6/24/15 6:52 PM",
	"id": 1125111
}, {
	"sha1": "00aa01fb90f3210d1e3027d7f759fb1085b814bd",
	"repository": "https://github.com/apache/drill.git",
	"author": "Sudheesh Katkam",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public setSessionOption(drillClient DrillClient, option String, value String) : void extracted from public setControls(drillClient DrillClient, controls String) : void in class org.apache.drill.exec.testing.ControlsInjectionUtil"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private assertCancelled(controls String, testQuery String, listener WaitUntilCompleteListener) : void inlined to private assertCancelledWithoutException(controls String, listener WaitUntilCompleteListener, query String) : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private assertCompleteState(result Pair, expectedState QueryState) : void renamed to private assertStateCompleted(result Pair, expectedState QueryState) : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public resumeFragment(outcomeListener RpcOutcomeListener, handle FragmentHandle) : void renamed to public unpauseFragment(outcomeListener RpcOutcomeListener, handle FragmentHandle) : void in class org.apache.drill.exec.rpc.control.ControlTunnel"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public cancelBeforeAnyResultsArrive() : void renamed to public cancelWhenQueryIdArrives() : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testInterruptingPartitionerThreadFragment() : void renamed to public interruptingPartitionerThreadFragment() : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testInterruptingAfterMSorterSetup() : void renamed to public failsAfterMSorterSetup() : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testInterruptingAfterMSorterSorting() : void renamed to public failsAfterMSorterSorting() : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private testInterruptingBlockedFragmentsWaitingForData(control String) : void renamed to private interruptingBlockedFragmentsWaitingForData(control String) : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private assertExceptionInjected(throwable Throwable, exceptionClass Class, desc String) : void renamed to private assertExceptionMessage(throwable Throwable, exceptionClass Class, desc String) : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public settingNoopInjectionsAndQuery() : void renamed to public settingNoOpInjectionsAndQuery() : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testInterruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void renamed to public interruptingWhileFragmentIsBlockedInAcquiringSendingTicket() : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testInterruptingBlockedMergingRecordBatch() : void renamed to public interruptingBlockedMergingRecordBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testInterruptingBlockedUnorderedReceiverBatch() : void renamed to public interruptingBlockedUnorderedReceiverBatch() : void in class org.apache.drill.exec.server.TestDrillbitResilience"
	}],

	"time": "6/24/15 8:24 PM",
	"id": 1124355
}, {
	"sha1": "4baf0a4de8d03022df48d696d210cc8b3117d38a",
	"repository": "https://github.com/aws/aws-sdk-java.git",
	"author": "AWS",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private killServer() : void inlined to public cleanUp() : void in class com.amazonaws.util.EC2MetadataUtilsTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private pause(delay long) : void extracted from private pauseExponentially(retries int) : void in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private callUntilCompletion(batch Map) : FailedBatch renamed to private doBatchWriteItemWithRetry(batch Map, batchWriteRetryStrategy BatchWriteRetryStrategy) : FailedBatch in class com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapper"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.amazonaws.services.elasticfilesystem.model.transform.BadRequestExceptionUnmarshaller renamed to com.amazonaws.services.config.model.transform.InvalidRecordingGroupExceptionUnmarshaller"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.amazonaws.services.elasticfilesystem.model.transform.DependencyTimeoutExceptionUnmarshaller renamed to com.amazonaws.services.cognitoidentity.model.transform.ConcurrentModificationExceptionUnmarshaller"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.amazonaws.services.elasticfilesystem.model.transform.FileSystemAlreadyExistsExceptionUnmarshaller renamed to com.amazonaws.services.cognitosync.model.transform.ConcurrentModificationExceptionUnmarshaller"
	}],
	"time": "6/24/15 8:54 PM",
	"id": 1124370
}, {
	"sha1": "3f0d9221d3f96c20db10e868cc33c2e972318ba6",
	"repository": "https://github.com/apache/drill.git",
	"author": "adeneche",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public createNewWrapperCurrent(batchRecordCount int) : SelectionVector4 extracted from public createNewWrapperCurrent() : SelectionVector4 in class org.apache.drill.exec.record.selection.SelectionVector4"
	}],
	"time": "6/24/15 8:54 PM",
	"id": 1124354
}, {
	"sha1": "7f20e63a7252f33c888085134d16ee8bf45f183f",
	"repository": "https://github.com/mockito/mockito.git",
	"author": "Szczepan Faber",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.mockito.internal.matchers.MatchersPrinter moved to org.mockito.internal.matchers.text.MatchersPrinter"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.mockito.internal.util to org.mockito.internal.matchers"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.mockito.MockitoMatcher from class org.mockito.internal.matchers.LocalizedMatcher"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.NotNull"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Contains"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.EndsWith"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.InstanceOf"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.StartsWith"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Matches"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Find"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.CompareTo"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Any"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Equals"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.apachecommons.ReflectionEquals"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.EqualsWithDelta"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.Null"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.VarargCapturingMatcher"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.CapturingMatcher"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public describeTo(description Description) : void renamed to public describe() : String in class org.mockito.internal.matchers.ArrayEquals"
	}],
	"time": "6/25/15 11:28 AM",
	"id": 1124301
}, {
	"sha1": "2bd1557bc293cb8c2348374771aad832befbe26f",
	"repository": "https://github.com/libgdx/libgdx.git",
	"author": "NathanSweet",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public setCheckBoxRight(right boolean) : void inlined to public CheckBox(text String, style CheckBoxStyle) in class com.badlogic.gdx.scenes.scene2d.ui.CheckBox"
	}],
	"time": "6/25/15 11:30 AM",
	"id": 1124509
}, {
	"sha1": "0d9fcaa4415ee996e423a97cfe0d965586ca59a5",
	"repository": "https://github.com/SonarSource/sonarqube.git",
	"author": "Julien HENRY",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private doStop(swallowException boolean) : void extracted from public stop() : void in class org.sonar.batch.bootstrapper.Batch"
	}],
	"time": "6/25/15 11:49 AM",
	"id": 1124816
}, {
	"sha1": "c1b847acdc8cb90a1498b236b3bb5c81ca75c044",
	"repository": "https://github.com/apache/drill.git",
	"author": "vkorukanti",
	"refactorings": [{
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected org2Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoaderLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoaderLoader"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createTestData() : void extracted from public addMiniDfsBasedStorageAndGenerateTestData() : void in class org.apache.drill.exec.impersonation.TestImpersonationQueries"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected org1Groups : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableNameLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableNameLoader"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected org1Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.TableLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.TableLoader"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.drill.exec.store.hive.schema.HiveSchemaFactory.DatabaseLoader moved to org.apache.drill.exec.store.hive.DrillHiveMetaStoreClient.NonCloseableHiveClientWithCaching.DatabaseLoader"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected org2Users : String[] from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected MINIDFS_STORAGE_PLUGIN_NAME : String from class org.apache.drill.exec.impersonation.TestImpersonationQueries to class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	},{
		"type": "Inline Method",
		"description": "Inline Method public createFileSystem(proxyUserName String, fsConf Configuration, stats OperatorStats) : DrillFileSystem inlined to public createFileSystem(proxyUserName String, fsConf Configuration) : DrillFileSystem in class org.apache.drill.exec.util.ImpersonationUtil"
	},{
		"type": "Pull Up Method",
		"description": "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationMetadata to protected addMiniDfsBasedStorage(workspaces Map) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	},{
		"type": "Pull Up Method",
		"description": "Pull Up Method public addMiniDfsBasedStorage() : void from class org.apache.drill.exec.impersonation.TestImpersonationDisabledWithMiniDFS to protected addMiniDfsBasedStorage(workspaces Map) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	},{
		"type": "Pull Up Method",
		"description": "Pull Up Method public addMiniDfsBasedStorageAndGenerateTestData() : void from class org.apache.drill.exec.impersonation.TestImpersonationQueries to protected addMiniDfsBasedStorage(workspaces Map) : void from class org.apache.drill.exec.impersonation.BaseTestImpersonation"
	}
],
	"time": "6/25/15 11:53 AM",
	"id": 1125095
}, {
	"sha1": "be292763b8c4cb09988023d6081b0a2d57b4c778",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Simon Stewart",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private PATH_TO_URL : Function from class com.facebook.buck.util.ClassLoaderCache to class com.facebook.buck.java.JarBackedJavac"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private PATH_TO_URL : Function from class com.facebook.buck.util.ClassLoaderCacheTest to class com.facebook.buck.java.JarBackedJavac"
	}],
	"time": "6/25/15 3:55 PM",
	"id": 1124975
}, {
	"sha1": "e813a0be86c87366157a0201e6c61662cadee586",
	"repository": "https://github.com/facebook/facebook-android-sdk.git",
	"author": "Sean Wiese",
	"refactorings": [{
			"type": "Rename Package",
			"description": "Rename Package com.facebook.samples to com.example"
		}, {
			"type": "Rename Package",
			"description": "Rename Package com.facebook to com.example"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private getAndroidIdViaReflection(context Context) : AttributionIdentifiers extracted from private getAndroidId(context Context) : AttributionIdentifiers in class com.facebook.internal.AttributionIdentifiers"
		}
	],
	"time": "6/25/15 3:56 PM",
	"id": 1125333
}, {
	"sha1": "e068eb7f484f24dee285d29b8a910d9019592020",
	"repository": "https://github.com/fabric8io/fabric8.git",
	"author": "Jimmi Dyson",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getHTTPGetAction(prefix String, properties Properties) : HTTPGetAction extracted from protected getProbe(prefix String) : Probe in class io.fabric8.maven.JsonMojo"
	}],
	"time": "6/25/15 4:54 PM",
	"id": 1125062
}, {
	"sha1": "4b5b74b6467a28fb9b7712f8091e4aa61c2d64b6",
	"repository": "https://github.com/killbill/killbill.git",
	"author": "Pierre-Alexandre Meyer",
	"refactorings": [{
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private pluginControlledPaymentAutomatonRunner : PluginRoutingPaymentAutomatonRunner from class org.killbill.billing.payment.core.janitor.CompletionTaskBase to class org.killbill.billing.payment.core.janitor.IncompletePaymentAttemptTask"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public updatePaymentAndTransactionIfNeeded(payment PaymentModelDao, paymentTransaction PaymentTransactionModelDao, paymentTransactionInfoPlugin PaymentTransactionInfoPlugin, internalTenantContext InternalTenantContext) : boolean extracted from public doIteration(paymentTransaction PaymentTransactionModelDao) : void in class org.killbill.billing.payment.core.janitor.IncompletePaymentTransactionTask"
	}],
	"time": "6/26/15 8:14 AM",
	"id": 1125334
}, {
	"sha1": "faaf826e901f43d1b46105b18e655eb120f3ffef",
	"repository": "https://github.com/redsolution/xabber-android.git",
	"author": "Grigory Fedorov",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface com.xabber.android.ui.ContactAdder from class com.xabber.android.ui.ContactAddFragment"
	}],
	"time": "6/26/15 10:16 AM",
	"id": 1125117
}, {
	"sha1": "d4992887291cc0a7eeda87ad547fa9e1e7fda41c",
	"repository": "https://github.com/deeplearning4j/deeplearning4j.git",
	"author": "Adam Gibson",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public output(x INDArray, test boolean) : INDArray extracted from public output(x INDArray) : INDArray in class org.deeplearning4j.nn.layers.OutputLayer"
	}],
	"time": "6/27/15 2:38 AM",
	"id": 1126550
}, {
	"sha1": "b5cf7a0252c8b0465c4dbd906717f7a12e26e6f8",
	"repository": "https://github.com/cbeust/testng.git",
	"author": "Julien Herr",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class test.testng234.ParentTest moved to test.inheritance.testng234.ParentTest"
	}, {
		"type": "Move Class",
		"description": "Move Class test.testng234.PolymorphicFailureTest moved to test.inheritance.testng234.PolymorphicFailureTest"
	}, {
		"type": "Move Class",
		"description": "Move Class test.testng234.ChildTest moved to test.inheritance.testng234.ChildTest"
	}],
	"time": "6/27/15 6:02 AM",
	"id": 1126248
}, {
	"sha1": "8d7a26edd1fedb9505b4f2b4fe57b2d2958b4dd9",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Kirill Likhodedov",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private writeContentToFile(revision byte[]) : void inlined to private write(revision byte[]) : void in class com.intellij.openapi.vcs.history.FileHistoryPanelImpl.MyGetVersionAction"
	}],
	"time": "6/27/15 6:56 AM",
	"id": 1125721
}, {
	"sha1": "c64217e2b485f3c6b997a55b1ef910c8b72779d3",
	"repository": "https://github.com/AntennaPod/AntennaPod.git",
	"author": "Martin Fietz",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public addQueueItem(context Context, performAutoDownload boolean, itemIds long[]) : Future<?> extracted from public addQueueItem(context Context, itemIds long[]) : Future<?> in class de.danoeh.antennapod.core.storage.DBWriter"
	}],
	"time": "6/27/15 1:01 PM",
	"id": 1126591
}, {
	"sha1": "9de5f0d408f861455716b8410fd53f62b360787d",
	"repository": "https://github.com/datastax/java-driver.git",
	"author": "Andrew Tolbert",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package sendRequest(reportNoMoreHosts boolean) : boolean extracted from package sendRequest() : void in class com.datastax.driver.core.RequestHandler.SpeculativeExecution"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected query(session Session) : ResultSet extracted from protected query() : ResultSet in class com.datastax.driver.core.policies.AbstractRetryPolicyIntegrationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private retry(retryCurrent boolean, newConsistencyLevel ConsistencyLevel, connection Connection, response Response) : void extracted from private retry(retryCurrent boolean, newConsistencyLevel ConsistencyLevel) : void in class com.datastax.driver.core.RequestHandler.SpeculativeExecution"
	}],
	"time": "6/27/15 8:18 PM",
	"id": 1125661
}, {
	"sha1": "7eb3567e7880511b76b8b65e8eb7d373927f2fb6",
	"repository": "https://github.com/apache/hive.git",
	"author": "Swarnim Kulkarni",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private unionTester(ws Schema, rs Schema, record Record) : ResultPair extracted from private unionTester(s Schema, record Record) : ResultPair in class org.apache.hadoop.hive.serde2.avro.TestAvroDeserializer"
	}],
	"time": "6/27/15 8:33 PM",
	"id": 1127274
}, {
	"sha1": "2581441eda268c45306423dd4c515514d98a14a0",
	"repository": "https://github.com/ratpack/ratpack.git",
	"author": "John Engelman",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class ratpack.jackson.JacksonModule moved to ratpack.jackson.guice.JacksonModule"
	}],
	"time": "6/28/15 12:21 PM",
	"id": 1126459
}, {
	"sha1": "3fd77b419673ce6ec41e06cdc27558b1d8f4ca06",
	"repository": "https://github.com/apache/zookeeper.git",
	"author": "Ra\u00fal Guti\u00e9rrez Segal\u00e9s",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NIOServerCnxn to class  org.apache.zookeeper.server.ServerCnxn"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method private cleanupWriterSocket(pwriter PrintWriter) : void from class org.apache.zookeeper.server.NettyServerCnxn to class  org.apache.zookeeper.server.ServerCnxn"
	}],
	"time": "6/28/15 4:09 PM",
	"id": 1126576
}, {
	"sha1": "51b8b0e1ad4be1b137d67774eab28dc0ef52cb0a",
	"repository": "https://github.com/QuantumBadger/RedReader.git",
	"author": "QuantumBadger",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method public onSharedPreferenceChanged(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.MainActivity to protected onSharedPreferenceChangedInner(prefs SharedPreferences, key String) : void from class org.quantumbadger.redreader.activities.RefreshableActivity"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.CommentListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.MoreCommentsListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.MainActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method protected onDestroy() : void from class org.quantumbadger.redreader.activities.PostListingActivity to protected onDestroy() : void from class org.quantumbadger.redreader.activities.BaseActivity"
	}],
	"time": "6/28/15 5:50 PM",
	"id": 1126206
}, {
	"sha1": "e58c9c3eef4c6e44b21a97cfbd2862bb2eb4627a",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Bill White",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public hasSize(size int) : SymbolTableAssert extracted from public isEmpty() : SymbolTableAssert in class org.voltdb.sqlparser.symtab.SymbolTableAssert"
	}],
	"time": "6/28/15 6:25 PM",
	"id": 1125606
}, {
	"sha1": "1bc7905b07821f840068089343e6b77a8686d1ab",
	"repository": "https://github.com/koush/AndroidAsync.git",
	"author": "Koushik Dutta",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private terminate() : void extracted from protected report(e Exception) : void in class com.koushikdutta.async.http.AsyncHttpResponseImpl"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package spewInternal() : void renamed to package sendCachedDataOnNetworkThread() : void in class com.koushikdutta.async.http.cache.ResponseCacheMiddleware.CachedBodyEmitter"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package spew() : void renamed to package sendCachedData() : void in class com.koushikdutta.async.http.cache.ResponseCacheMiddleware.CachedBodyEmitter"
	}],
	"time": "6/28/15 6:25 PM",
	"id": 1127199
}, {
	"sha1": "0e7345a9c10863dca9217ad902b825db50fed01f",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Lari Hotari",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getConfiguration() : Configuration extracted from package getFileCollection() : FileCollection in class org.gradle.play.plugins.PlayPluginConfigurations.PlayConfiguration"
	}],
	"time": "6/28/15 8:10 PM",
	"id": 1126720
}, {
	"sha1": "102b23b16bf26cbf439009b4b95542490a082710",
	"repository": "https://github.com/apache/hive.git",
	"author": "Ferdinand Xu",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private executeInternal(sql String, call boolean) : boolean extracted from private execute(line String, call boolean, entireLineAsCommand boolean) : boolean in class org.apache.hive.beeline.Commands"
	}, {
		"type": "Move Method",
		"description": "Move Method private getFirstCmd(cmd String, length int) : String from class org.apache.hive.beeline.BeeLine to private getFirstCmd(cmd String, length int) : String from class org.apache.hive.beeline.Commands"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public handleMultiLineCmd(line String) : String extracted from private execute(line String, call boolean, entireLineAsCommand boolean) : boolean in class org.apache.hive.beeline.Commands"
	}, {
		"type": "Move Method",
		"description":"Move Method private sourceFile(cmd String) : boolean from class org.apache.hive.beeline.BeeLine to private sourceFile(cmd String) : boolean from class org.apache.hive.beeline.Commands"
	}, {
		"type": "Move Method",
		"description":"Move Method private cliToBeelineCmd(cmd String) : String from class org.apache.hive.beeline.BeeLine to private cliToBeelineCmd(cmd String) : String from class org.apache.hive.beeline.Commands"
	}, {
		"type": "Move Method",
		"description": "Move Method private isSourceCMD(cmd String) : boolean from class org.apache.hive.beeline.BeeLine to private isSourceCMD(cmd String) : boolean from class org.apache.hive.beeline.Commands"
	}, {
		"type": "Move Class",
		"description": "Move Class org.apache.hadoop.hive.ql.parse.VariableSubstitution moved to org.apache.hadoop.hive.conf.VariableSubstitution"
	}],
	"time": "6/28/15 9:42 PM",
	"id": 1127268
}, {
	"sha1": "79c66ceab11dae0b9fd1dade7bb4120028738705",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Lorant Pinter",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getInputs() : SetLanguageSourceSet extracted from public getAllSources() : SetLanguageSourceSet in class org.gradle.platform.base.binary.BaseBinarySpec"
	}],
	"time": "6/29/15 5:34 AM",
	"id": 1126709
}, {
	"sha1": "c13f3469e1d64ec97b11f0509e45f9c3fa8ff88a",
	"repository": "https://github.com/spring-projects/spring-data-jpa.git",
	"author": "Oliver Gierke",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected getCountQuery(spec SpecificationT, mode QueryMode) : TypedQuery<Long> extracted from protected getCountQuery(spec Specification<T>) : TypedQuery<Long> in class org.springframework.data.jpa.repository.support.SimpleJpaRepository"
	}],
	"time": "6/29/15 7:28 AM",
	"id": 1126375
}, {
	"sha1": "364f50274d4b4b83d40930c0d2c4d0e57fb34589",
	"repository": "https://github.com/facebook/presto.git",
	"author": "Haozhun Jin",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass com.facebook.presto.PartitionedPagePartitionFunction from class com.facebook.presto.HashPagePartitionFunction"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package getPartitionHashBucket(partitionCount int, position int, page Page) : int renamed to package getPartitionBucket(partitionCount int, position int, page Page) : int in class com.facebook.presto.operator.HashGenerator"
	}],
	"time": "6/30/15 12:08 AM",
	"id": 1127907
}, {
	"sha1": "d69e5cb21c04d9eede314aaa9ad059fc603fb025",
	"repository": "https://github.com/apache/hive.git",
	"author": "Rui Li",
	"refactorings": [{
			"type": "Move Attribute",
			"description": "Move Attribute private tag : byte from class org.apache.hadoop.hive.ql.exec.SparkHashTableSinkOperator to class org.apache.hadoop.hive.ql.plan.SparkHashTableSinkDesc"
		}, {
			"type": "Move Method",
			"description": "Move Method public setTag(tag byte) : void from class org.apache.hadoop.hive.ql.exec.SparkHashTableSinkOperator to public setTag(tag byte) : void from class org.apache.hadoop.hive.ql.plan.SparkHashTableSinkDesc"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected getCountQuery(spec Specification<T>, mode QueryMode) : TypedQuery<Long> extracted from protected getCountQuery(spec Specification<T>) : TypedQuery<Long> in class org.springframework.data.jpa.repository.support.SimpleJpaRepository"
		}

	],
	"time": "6/30/15 5:31 AM",
	"id": 1130197
}, {
	"sha1": "1e464da2480568014a87dd0bac6febe63a76c889",
	"repository": "https://github.com/spring-projects/spring-boot.git",
	"author": "Dave Syer",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private CLASSPATH_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties"
	}, {
		"type": "Move Method",
		"description": "Move Method public setResourceLoader(resourceLoader ResourceLoader) : void from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to public setResourceLoader(resourceLoader ResourceLoader) : void from class org.springframework.boot.autoconfigure.web.ResourceProperties"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private addStaticIndexHtmlViewControllers(registry ViewControllerRegistry) : void inlined to public addViewControllers(registry ViewControllerRegistry) : void in class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private STATIC_INDEX_HTML_RESOURCES : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private resourceLoader : ResourceLoader from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration.WebMvcAutoConfigurationAdapter.FaviconConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private SERVLET_RESOURCE_LOCATIONS : String[] from class org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration to class org.springframework.boot.autoconfigure.web.ResourceProperties"
	}],
	"time": "6/30/15 5:42 AM",
	"id": 1127383
}, {
	"sha1": "a739d16d301f0e89ab0b9dfa56b4585bbad6b793",
	"repository": "https://github.com/droolsjbpm/jbpm.git",
	"author": "Jan Hrcek",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createUser(id String) : User extracted from public testActivateFromIncorrectStatus() : void in class org.jbpm.services.task.LifeCycleBaseTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createUser(id String) : User extracted from 10 others in class org.jbpm.services.task.LifeCycleBaseTest"
	}],
	"time": "6/30/15 6:06 AM",
	"id": 1129518
}, {
	"sha1": "83cfa21578e63956bca0715eefee2860c3b6d39a",
	"repository": "https://github.com/droolsjbpm/jbpm.git",
	"author": "Tibor Zimanyi",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private prepareWorkItemWithTaskVariables(taskDescriptionParam String) : WorkItemImpl extracted from public testTaskWithVariables() : void in class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private testTaskWithExpectedDescription(task Task, expectedDescription String) : void extracted from public testTaskWithVariables() : void in class org.jbpm.services.task.wih.HTWorkItemHandlerBaseTest"
	}],
	"time": "6/30/15 7:05 AM",
	"id": 1129517
}, {
	"sha1": "f05e86c4d31987ff2f30330745c3eb605de4c4dc",
	"repository": "https://github.com/Graylog2/graylog2-server.git",
	"author": "Jochen Schalanda",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute package COMPARATOR : Comparator from class org.graylog2.indexer.ranges.MongoIndexRangeService to class org.graylog2.indexer.ranges.IndexRange"
	}],
	"time": "6/30/15 8:11 AM",
	"id": 1130163
}, {
	"sha1": "767171c90110c4c5781e8f6d19ece1fba0d492e9",
	"repository": "https://github.com/Graylog2/graylog2-server.git",
	"author": "Jochen Schalanda",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public testTimestampStatsOfIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest"
	}, {
		"type": "Move Method",
		"description": "Move Method public testTimestampStatsOfIndexWithNonExistingIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndexWithNonExistingIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest"
	}, {
		"type": "Move Method",
		"description": "Move Method public timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.searches.Searches to protected timestampStatsOfIndex(index String) : TimestampStats from class org.graylog2.indexer.ranges.EsIndexRangeService"
	}, {
		"type": "Move Method",
		"description": "Move Method public testTimestampStatsOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.searches.SearchesTest to public testTimestampStatsOfIndexWithEmptyIndex() : void from class org.graylog2.indexer.ranges.EsIndexRangeServiceTest"
	}],
	"time": "6/30/15 8:46 AM",
	"id": 1130153
}, {
	"sha1": "35668435090eb47cf8c5e704243510b6cee35a7b",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Aleksey Yeschenko",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private onCreateFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onCreateFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropAggregate(ksName String, aggregateName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private onDropFunctionInternal(ksName String, functionName String, argTypes List<AbstractType<?>>) : void extracted from public onDropFunction(ksName String, functionName String, argTypes List<AbstractType<?>>) : void in class org.apache.cassandra.cql3.QueryProcessor.MigrationSubscriber"
	}],
	"time": "6/30/15 9:04 AM",
	"id": 1129630
}, {
	"sha1": "527ac38334000e105daacb2aca25cb345d77c01e",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Gary Hale",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private stopped : AtomicBoolean from class org.gradle.play.internal.run.PlayApplicationDeploymentHandle to class org.gradle.play.internal.run.PlayApplicationRunnerToken"
	}, {
		"type": "Extract And Move Method",
		"description": "Extract And Move Method public isRunning() : boolean extracted from public isRunning() : boolean in class org.gradle.play.internal.run.PlayApplicationDeploymentHandle & moved to class org.gradle.play.internal.run.PlayApplicationRunnerToken"
	}],
	"time": "6/30/15 9:10 AM",
	"id": 1129713
}, {
	"sha1": "53036cece662f9c796d2a187b0077059c3d9088a",
	"repository": "https://github.com/Activiti/Activiti.git",
	"author": "Tijs Rademakers",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method public isAsynchronous() : boolean from class org.activiti.bpmn.model.Activity to public isAsynchronous() : boolean from class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public isAsynchronous() : boolean from class org.activiti.bpmn.model.Gateway to public isAsynchronous() : boolean from class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public isNotExclusive() : boolean from class org.activiti.bpmn.model.Activity to public isNotExclusive() : boolean from class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public isNotExclusive() : boolean from class org.activiti.bpmn.model.Gateway to public isNotExclusive() : boolean from class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.Activity to public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.Gateway to public setAsynchronous(asynchronous boolean) : void from class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected asynchronous : boolean from class org.activiti.bpmn.model.Activity to class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected asynchronous : boolean from class org.activiti.bpmn.model.Gateway to class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected notExclusive : boolean from class org.activiti.bpmn.model.Activity to class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected notExclusive : boolean from class org.activiti.bpmn.model.Gateway to class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.Activity to public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.FlowNode"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.Gateway to public setNotExclusive(notExclusive boolean) : void from class org.activiti.bpmn.model.FlowNode"
	}],
	"time": "6/30/15 9:29 AM",
	"id": 1129294
}, {
	"sha1": "cfe88fe3fbcc6b02ca55cee7b1f4ab13e249edea",
	"repository": "https://github.com/FasterXML/jackson-databind.git",
	"author": "lufe66",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected classForName(name String) : Class<?> extracted from public findClass(className String) : Class<?> in class com.fasterxml.jackson.databind.type.TypeFactory"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected classForName(name String, initialize boolean, loader ClassLoader) : Class<?> extracted from public findClass(className String) : Class<?> in class com.fasterxml.jackson.databind.type.TypeFactory"
	}],
	"time": "6/30/15 10:35 AM",
	"id": 1129493
}, {
	"sha1": "9dc3cbd59a20f03406f295a4a8f3b8676dbc939e",
	"repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
	"author": "Dan Roundhill",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.wordpress.android.ui.prefs.NotificationsPreference moved to org.wordpress.android.ui.prefs.notifications.NotificationsPreference"
	}, {
		"type": "Move Class",
		"description": "Move Class org.wordpress.android.ui.prefs.NotificationsSettingsActivity moved to org.wordpress.android.ui.prefs.notifications.NotificationsSettingsActivity"
	}, {
		"type": "Move Class",
		"description": "Move Class org.wordpress.android.ui.prefs.NotificationsSettingsFragment moved to org.wordpress.android.ui.prefs.notifications.NotificationsSettingsFragment"
	}],
	"time": "6/30/15 2:48 PM",
	"id": 1130125
}, {
	"sha1": "229d1b60c03a3f8375451c68a6911660a3993777",
	"repository": "https://github.com/rstudio/rstudio.git",
	"author": "Jonathan McPherson",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput) : void from class org.rstudio.studio.client.rsconnect.RSConnect to private checkForExistingApp(account RSConnectAccount, appName String, onValidated OperationWithInput) : void from class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private fireValidatedRSconnectPublish(result RSConnectPublishResult, launchBrowser boolean) : void inlined to public fireRSConnectPublishEvent(result RSConnectPublishResult, launchBrowser boolean) : void in class org.rstudio.studio.client.rsconnect.RSConnect"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private isUpdate() : boolean extracted from public getResult() : RSConnectPublishResult in class org.rstudio.studio.client.rsconnect.ui.RSConnectDeploy"
	}],
	"time": "6/30/15 3:32 PM",
	"id": 1127493
}, {
	"sha1": "8d9bedbf96b14beb027ebc1338bc6d5750e1feb5",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Tobias Lindaaker",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.kernel.api.constraints.PropertyConstraint from class org.neo4j.kernel.api.constraints.UniquenessConstraint"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public shouldBeAbleToResolveConflictsAndRecreateConstraintAfterFailingToCreateConstraintDueToConflict() : void renamed to public shouldBeAbleToResolveConflictsAndRecreateConstraintAfterFailingToCreateUniquePropertyConstraintDueToConflict() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public shouldNotLeaveAnyStateBehindAfterFailingToCreateConstraint() : void renamed to public shouldNotLeaveAnyStateBehindAfterFailingToCreateUniquePropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public shouldNotPersistUniquenessConstraintsCreatedInAbortedTransaction() : void renamed to public shouldNotPersistUniquePropertyConstraintsCreatedInAbortedTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public shouldBeAbleToStoreAndRetrieveUniquenessConstraintRule() : void renamed to public shouldBeAbleToStoreAndRetrieveUniquePropertyConstraintRule() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public shouldNotStoreUniquenessConstraintThatIsRemovedInTheSameTransaction() : void renamed to public shouldNotStoreUniquePropertyConstraintThatIsRemovedInTheSameTransaction() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public shouldNotRemoveConstraintThatGetsReAdded() : void renamed to public shouldNotRemoveUniquePropertyConstraintThatGetsReAdded() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public shouldNotCreateUniquenessConstraintThatAlreadyExists() : void renamed to public shouldNotCreateUniquePropertyConstraintThatAlreadyExists() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public shouldCreateAnIndexToGoAlongWithAUniquenessConstraint() : void renamed to public shouldCreateAnIndexToGoAlongWithAUniquePropertyConstraint() : void in class org.neo4j.kernel.impl.api.integrationtest.ConstraintsCreationIT"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public visitAddedConstraint(element UniquenessConstraint) : void renamed to public visitAddedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.impl.api.KernelTransactionImplementation.TransactionToRecordStateVisitor"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public visitRemovedConstraint(element UniquenessConstraint) : void renamed to public visitRemovedUniquePropertyConstraint(element UniquenessConstraint) : void in class org.neo4j.kernel.impl.api.KernelTransactionImplementation.TransactionToRecordStateVisitor"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public canListConstraints() : void renamed to public canListUniquePropertyConstraints() : void in class org.neo4j.shell.TestApps"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public canListConstraintsByLabel() : void renamed to public canListUniquePropertyConstraintsByLabel() : void in class org.neo4j.shell.TestApps"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public canListConstraintsByLabelAndProperty() : void renamed to public canListUniquePropertyConstraintsByLabelAndProperty() : void in class org.neo4j.shell.TestApps"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public uniquenessConstraintCreate(labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.OperationsFacade"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKeyId int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.LockingStatementOperations"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public uniquenessConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint renamed to public uniquePropertyConstraintCreate(state KernelStatement, labelId int, propertyKey int) : UniquenessConstraint in class org.neo4j.kernel.impl.api.DataIntegrityValidatingStatementOperations"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.neo4j.kernel.impl.store.UniquenessConstraintRule renamed to org.neo4j.kernel.impl.store.UniquePropertyConstraintRule"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.neo4j.kernel.impl.coreapi.schema.PropertyUniqueConstraintDefinition renamed to org.neo4j.kernel.impl.coreapi.schema.PropertyConstraintDefinition"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public uniquenessConstraint(labelId int, propertyKeyId int) : UniquenessConstraintRule renamed to private propertyConstraint(type Class<Rule>, labelId int, propertyKeyId int) : Rule in class org.neo4j.kernel.impl.store.SchemaStorage"
	}],
	"time": "7/2/15 2:23 AM",
	"id": 1130638
}, {
	"sha1": "d1a6ae2a16ba1d53b1de02eea8745d67c6a1a005",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "pgpv",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private fileSelection() : File extracted from public actionPerformed(e ActionEvent) : void in class org.neo4j.desktop.ui.BrowseForDatabaseActionListener"
	}],
	"time": "7/2/15 5:18 AM",
	"id": 1130631
}, {
	"sha1": "51f498a96b2fa1822e392027982c20e950535fd1",
	"repository": "https://github.com/katzer/cordova-plugin-local-notifications.git",
	"author": "PKnittel",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method public handleEndTag(xml XmlPullParser) : void extracted from public parse(xml XmlResourceParser) : void in class org.apache.cordova.ConfigXmlParser"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public handleStartTag(xml XmlPullParser) : void extracted from public parse(xml XmlResourceParser) : void in class org.apache.cordova.ConfigXmlParser"
		}, {
			"type": "Inline Method",
			"description": "Inline Method public postMessage(id String, data Object) : void inlined to public onCreateOptionsMenu(menu Menu) : boolean in class org.apache.cordova.CordovaActivity"
		}, {
			"type": "Inline Method",
			"description": "Inline Method public postMessage(id String, data Object) : void inlined to public onOptionsItemSelected(item MenuItem) : boolean in class org.apache.cordova.CordovaActivity"
		}, {
			"type": "Inline Method",
			"description": "Inline Method public postMessage(id String, data Object) : void inlined to public onPrepareOptionsMenu(menu Menu) : boolean in class org.apache.cordova.CordovaActivity"
		}, {
			"type": "Move Attribute",
			"description": "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.CordovaWebView to class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode"
		}, {
			"type": "Move Attribute",
			"description": "Move Attribute private cordova : CordovaInterface from class org.apache.cordova.NativeToJsMessageQueue to class org.apache.cordova.NativeToJsMessageQueue.LoadUrlBridgeMode"
		}

	],
	"time": "7/2/15 11:49 AM",
	"id": 1130859
}, {
	"sha1": "fe6653db5fb9f1a25d5ee30e4d5d54ccdaba65fa",
	"repository": "https://github.com/JetBrains/MPS.git",
	"author": "Simon Alperovich",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private createManyCells() : EditorCell_Collection inlined to public createCell() : EditorCell in class jetbrains.mps.lang.editor.cellProviders.SingleRoleCellProvider"
	}],
	"time": "7/2/15 5:52 PM",
	"id": 1132279
}, {
	"sha1": "983e0e0e22ab5bd2c6ea44235518057ea45dcca9",
	"repository": "https://github.com/jboss-developer/jboss-eap-quickstarts.git",
	"author": "Bruno Oliveira",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.jboss.as.quickstarts.poh5helloworld to org.jboss.as.quickstarts.html5rest"
	}],
	"time": "7/2/15 10:09 PM",
	"id": 1132496
}, {
	"sha1": "85a690e3cdbbb8447342eefdf690e22ad1b33e02",
	"repository": "https://github.com/square/wire.git",
	"author": "jwilson",
	"refactorings": [{
		"type": "Rename Class",
		"description": "Rename Class com.squareup.wire.model.LinkerTest renamed to com.squareup.wire.model.OptionsTest"
	}],
	"time": "7/3/15 1:18 AM",
	"id": 1131927
}, {
	"sha1": "3f2a0e7629d032712ab38ab1431cd0a9d91d4db6",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "d34d",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private IDMAP_HASH_VERSION : byte from class com.android.server.pm.PackageManagerService to class android.content.pm.ThemeUtils"
	}],
	"time": "7/3/15 3:18 AM",
	"id": 1131681
}, {
	"sha1": "9b5b10a0c254017a48651771029f4dfc0a61bcfa",
	"repository": "https://github.com/realm/realm-java.git",
	"author": "Chen Mulong",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute package CASTING_TYPES : Map from class io.realm.processor.RealmProxyClassGenerator to class io.realm.processor.Constants"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package NULLABLE_JAVA_TYPES : Map from class io.realm.processor.RealmProxyClassGenerator to class io.realm.processor.Constants"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package JAVA_TO_COLUMN_TYPES : Map from class io.realm.processor.RealmProxyClassGenerator to class io.realm.processor.Constants"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package JAVA_TO_REALM_TYPES : Map from class io.realm.processor.RealmProxyClassGenerator to class io.realm.processor.Constants"
	}],
	"time": "7/3/15 5:44 AM",
	"id": 1131658
}, {
	"sha1": "0a1ff849ec7709be8553383fe9c2c7301980dde0",
	"repository": "https://github.com/orientechnologies/orientdb.git",
	"author": "Luigi Dell'Aquila",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method public getDatabase() : ODatabaseDocumentInternal from class com.orientechnologies.orient.core.sql.parser.OStatement to public getDatabase() : ODatabaseDocumentInternal from class com.orientechnologies.orient.core.sql.parser.SimpleNode"
	}],
	"time": "7/3/15 5:48 AM",
	"id": 1131689
}, {
	"sha1": "b8fffb706258db4c4d2f608d8e8dad9312e2230d",
	"repository": "https://github.com/slapperwan/gh4a.git",
	"author": "Danny Baumann",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public highlightImage(imageUrl String) : String from class com.gh4a.utils.StringUtils to private highlightImage(imageUrl String) : String from class com.gh4a.activities.FileViewerActivity"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private isExtensionIn(filename String, extensions List<String>) : boolean extracted from public isImage(filename String) : boolean in class com.gh4a.utils.FileUtils"
	}, {
		"type": "Move Method",
		"description": "Move Method private writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.utils.StringUtils to protected writeCssInclude(builder StringBuilder, cssType String) : void from class com.gh4a.activities.WebViewerActivity"
	}, {
		"type": "Move Method",
		"description": "Move Method private writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.utils.StringUtils to protected writeScriptInclude(builder StringBuilder, scriptName String) : void from class com.gh4a.activities.WebViewerActivity"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private SKIP_PRETTIFY_EXT : List from class com.gh4a.Constants to class com.gh4a.activities.WebViewerActivity"
	}],
	"time": "7/6/15 4:56 AM",
	"id": 1133259
}, {
	"sha1": "c00275e7f85c8a9af5785f66cc0f75dc027b6cb6",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "mustafaiman",
	"refactorings": [{
		"type": "Push Down Method",
		"description": "Push Down Method protected getConnection() : HazelcastConnection from class com.hazelcast.jca.AbstractDeploymentTest to protected getConnection() : HazelcastConnection from class com.hazelcast.jca.XATransactionTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public Init() : void renamed to public init() : void in class com.hazelcast.jca.XATransactionTest"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private connectionFactory : HazelcastConnectionFactory from class com.hazelcast.jca.AbstractDeploymentTest to class com.hazelcast.jca.XATransactionTest"
	}]

	,
	"time": "7/6/15 5:59 AM",
	"id": 1132974
}, {
	"sha1": "3325f5ccd23f8016fa28a24f878b54f1918546ed",
	"repository": "https://github.com/deeplearning4j/deeplearning4j.git",
	"author": "Carsten Schnober",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public loadGoogleModel(modelFile File, binary boolean, lineBreaks boolean) : Word2Vec extracted from public loadGoogleModel(modelFile File, binary boolean) : Word2Vec in class org.deeplearning4j.models.embeddings.loader.WordVectorSerializer"
	}],
	"time": "7/6/15 7:41 AM",
	"id": 1133936
}, {
	"sha1": "ba1da95200d080aef6251f13ced0ca67dff282be",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Rene Groeschke",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.gradle.tooling.tests.TestExecutionException moved to org.gradle.tooling.test.TestExecutionException"
	}],
	"time": "7/6/15 7:43 AM",
	"id": 1134191
}, {
	"sha1": "b1fb1192daa1647b0bd525600dd41063765eca70",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Benjamin Muschko",
	"refactorings": [{
		"type": "Push Down Method",
		"description": "Push Down Method public setGradleUserHomeDir(gradleUserHomeDir File) : void from class org.gradle.testkit.functional.GradleRunner to public setGradleUserHomeDir(gradleUserHomeDir File) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private gradleUserHomeDir : File from class org.gradle.testkit.functional.GradleRunner to class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public getTasks() : List<String> from class org.gradle.testkit.functional.GradleRunner to public getTasks() : List<String> from class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private arguments : List<String> from class org.gradle.testkit.functional.GradleRunner to class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private taskNames : List<String> from class org.gradle.testkit.functional.GradleRunner to class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public setArguments(arguments List<String>) : void from class org.gradle.testkit.functional.GradleRunner to public setArguments(arguments List<String>) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private workingDirectory : File from class org.gradle.testkit.functional.GradleRunner to class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public getGradleUserHomeDir() : File from class org.gradle.testkit.functional.GradleRunner to public getGradleUserHomeDir() : File from class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public setWorkingDir(workingDirectory File) : void from class org.gradle.testkit.functional.GradleRunner to public setWorkingDir(workingDirectory File) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public getArguments() : List<String> from class org.gradle.testkit.functional.GradleRunner to public getArguments() : List<String> from class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public setTasks(taskNames List<String>) : void from class org.gradle.testkit.functional.GradleRunner to public setTasks(taskNames List<String>) : void from class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public getWorkingDir() : File from class org.gradle.testkit.functional.GradleRunner to public getWorkingDir() : File from class org.gradle.testkit.functional.internal.DefaultGradleRunner"
	}],
	"time": "7/6/15 10:08 AM",
	"id": 1134188
}, {
	"sha1": "f50f234b24e6ada29c82ce57830118508bf55d51",
	"repository": "https://github.com/orientechnologies/orientdb.git",
	"author": "laa",
	"refactorings": [{
		"type": "Rename Method",
		"description": "Rename Method public getAllocatedPages() : long renamed to public getExclusiveWriteCachePagesSize() : long in class com.orientechnologies.orient.core.storage.impl.memory.ODirectMemoryOnlyDiskCache"
	}, {
		"type": "Rename Package",
		"description": "Rename Package com.orientechnologies.orient.core.index.hashindex.local.cache to com.orientechnologies.orient.core.storage.cache.local"
	}, {
		"type": "Rename Package",
		"description": "Rename Package com.orientechnologies.orient.core.index.hashindex.local to com.orientechnologies.orient.core.storage"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface com.orientechnologies.orient.core.storage.cache.local.OWOWCacheMXBean from class com.orientechnologies.orient.core.storage.cache.local.OWOWCache"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface com.orientechnologies.orient.core.storage.cache.local.O2QCacheMXBean from class com.orientechnologies.orient.core.storage.cache.local.O2QCache"
	}],
	"time": "7/6/15 10:20 AM",
	"id": 1132674
}, {
	"sha1": "d5f10a4958f5e870680be906689d92d1efb42480",
	"repository": "https://github.com/crate/crate.git",
	"author": "Christian Haudum",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public add(info ReferenceInfo, partitionBy boolean) : Builder extracted from public add(column String, type DataType, path List<String>, columnPolicy ColumnPolicy, indexType IndexType, partitionBy boolean) : Builder in class io.crate.metadata.table.TestingTableInfo.Builder"
	}],
	"time": "7/6/15 11:45 AM",
	"id": 1134252
}, {
	"sha1": "4b762c2c70f06b0c5d2cd85866424c46478c827b",
	"repository": "https://github.com/real-logic/Aeron.git",
	"author": "Martin Thompson",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private flowControl : FlowControl from class uk.co.real_logic.aeron.driver.cmd.NewPublicationCmd to class uk.co.real_logic.aeron.driver.NetworkPublication"
	}],
	"time": "7/6/15 12:18 PM",
	"id": 1133661
}, {
	"sha1": "35b6c869546a7968b6fd2f640add6eea87e03c22",
	"repository": "https://github.com/infinispan/infinispan.git",
	"author": "Adrian Nistor",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery.ReverseFilterResultComparator moved to org.infinispan.query.dsl.embedded.impl.BaseEmbeddedQuery.ReverseFilterResultComparator"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testEmbeddedQuery() : void renamed to public testEmbeddedLuceneQuery() : void in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private createAccount(id int) : AccountPB renamed to private createAccountPB(id int) : AccountPB in class org.infinispan.client.hotrod.marshall.EmbeddedCompatTest"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to class org.infinispan.query.remote.QueryFacadeImpl"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to class org.infinispan.query.dsl.embedded.impl.QueryEngine"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private booleanFilterNormalizer : BooleanFilterNormalizer from class org.infinispan.objectfilter.impl.BaseMatcher to class org.infinispan.objectfilter.impl.FilterRegistry"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected projection : String[] from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to class org.infinispan.query.dsl.impl.BaseQuery"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public getProjection() : String[] from class org.infinispan.query.dsl.embedded.impl.EmbeddedQuery to public getProjection() : String[] from class org.infinispan.query.dsl.impl.BaseQuery"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private parseQuery(cacheConfiguration Configuration, serCtx SerializationContext, queryString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult renamed to private transformJpaToLucene(isCompatMode boolean, serCtx SerializationContext, jpqlString String, searchFactory SearchIntegrator) : LuceneQueryParsingResult in class org.infinispan.query.remote.QueryFacadeImpl"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private executeIndexedQuery(cache AdvancedCache<byte[],byte[]>, cacheConfiguration Configuration, serCtx SerializationContext, request QueryRequest) : QueryResponse renamed to private buildLuceneQuery(cache AdvancedCache<?,?>, isCompatMode boolean, serCtx SerializationContext, jpqlString String, startOffset long, maxResults int) : Query in class org.infinispan.query.remote.QueryFacadeImpl"
	}],
	"time": "7/6/15 1:12 PM",
	"id": 1134634
}, {
	"sha1": "5bab9e837cf273250aa26702204f139fdcfd9e7a",
	"repository": "https://github.com/google/guava.git",
	"author": "Chris Povirk",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private checkForConcurrentModification() : void inlined to public hasNext() : boolean in class com.google.common.collect.HashBiMap.Itr"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private checkForConcurrentModification() : void inlined to public remove() : void in class com.google.common.collect.HashBiMap.Itr"
	}],
	"time": "7/6/15 1:19 PM",
	"id": 1133583
}, {
	"sha1": "2f1b67b03f6c48aa189d7478e16ed0dcf8d50af8",
	"repository": "https://github.com/hibernate/hibernate-orm.git",
	"author": "Radim Vansa",
	"refactorings": [{
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.collection.CollectionRegionImplTestCase to class org.hibernate.test.cache.infinispan.AbstractEntityCollectionRegionTestCase"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected MUTABLE_NON_VERSIONED : CacheDataDescription from class org.hibernate.test.cache.infinispan.entity.EntityRegionImplTestCase to class org.hibernate.test.cache.infinispan.AbstractEntityCollectionRegionTestCase"
	}],
	"time": "7/6/15 1:40 PM",
	"id": 1134102
}, {
	"sha1": "1768840bf1e69892fd2a23776817f620edfed536",
	"repository": "https://github.com/google/truth.git",
	"author": "kak",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.google.common.truth.ListTest.Bar moved to com.google.common.truth.IterableTest.Bar"
	}, {
		"type": "Move Class",
		"description": "Move Class com.google.common.truth.ListTest.Foo moved to com.google.common.truth.IterableTest.Foo"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public listContainsExactlyArray() : void renamed to public iterableContainsExactlyArray() : void in class com.google.common.truth.IterableTest"
	}],
	"time": "7/6/15 1:54 PM",
	"id": 1133238
}, {
	"sha1": "200f1577d238a6d3fbcf99cb2a2585b2071214a6",
	"repository": "https://github.com/google/truth.git",
	"author": "kak",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public isOrdered(comparator Comparator<? super T>) : void extracted from public isPartiallyOrdered(comparator Comparator<? super T>) : void in class com.google.common.truth.IterableSubject"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public isOrdered() : void extracted from public isPartiallyOrdered() : void in class com.google.common.truth.IterableSubject"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public listIsPartiallyOrderedWithComparatorFailure() : void renamed to public listIsOrderedWithComparatorFailure() : void in class com.google.common.truth.ListTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isPartiallyOrderedFailure() : void renamed to public isOrderedFailure() : void in class com.google.common.truth.ListTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public isPartiallyOrderedWithNonComparableElementsFailure() : void renamed to public isOrderedWithNonComparableElementsFailure() : void in class com.google.common.truth.ListTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public listIsPartiallyOrdered() : void renamed to public listIsOrdered() : void in class com.google.common.truth.ListTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public listIsPartiallyOrderedWithComparator() : void renamed to public listIsOrderedWithComparator() : void in class com.google.common.truth.ListTest"
	}],
	"time": "7/6/15 1:54 PM",
	"id": 1133240
}, {
	"sha1": "c0f8a7f2b4341601df63c5470f41f157dbd83781",
	"repository": "https://github.com/wildfly/wildfly.git",
	"author": "Josh Kinlaw",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private standaloneCollect(cli CLI, protocol String, host String, port int) : void extracted from public main(args String[]) : void in class org.jboss.as.jdr.CommandLineMain"
	}],
	"time": "7/6/15 3:03 PM",
	"id": 1132984
}, {
	"sha1": "44a02e5efc39c6953ca6dd631669d91293ab67f6",
	"repository": "https://github.com/hibernate/hibernate-orm.git",
	"author": "barreiro",
	"refactorings": [{
		"type": "Rename Class",
		"description": "Rename Class org.hibernate.test.bytecode.enhancement.MostBasicEnhancementTest renamed to org.hibernate.test.bytecode.enhancement.basic.BasicInSessionTest"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.hibernate.test.bytecode.enhancement.entity.customer to org.hibernate.test.bytecode.enhancement.association"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.hibernate.test.bytecode.enhancement.entity to org.hibernate.test.bytecode.enhancement.dirty"
	}, {
		"type": "Move Class",
		"description": "Move Class org.hibernate.test.bytecode.enhancement.entity.MyEntity moved to org.hibernate.test.bytecode.enhancement.basic.MyEntity"
	}],
	"time": "7/6/15 3:34 PM",
	"id": 1134096
}, {
	"sha1": "4587c32ab8a1c8e2169e4f93491a8c927216a6ab",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "Charles Tsai",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private startAsync() : void extracted from public start() : void in class com.android.systemui.usb.StorageNotification"
	}],
	"time": "7/6/15 3:49 PM",
	"id": 1132646
}, {
	"sha1": "05bd8ecda456e0901ef7375b9ff7b120ae668eca",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "peter shaw",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class SocketExporter moved from exportbenchmark to exportbenchmark2.exporter.exportbenchmark"
	}, {
		"type": "Move Class",
		"description": "Move Class Connect2Server moved from exportbenchmark to exportbenchmark2.client.exportbenchmark"
	}, {
		"type": "Move Class",
		"description": "Move Class TruncateTables moved from exportbenchmark.procedures to exportbenchmark2.db.exportbenchmark.procedures"
	}, {
		"type": "Move Class",
		"description": "Move Class InsertExport5 moved from exportbenchmark.procedures to exportbenchmark2.db.exportbenchmark.procedures"
	}, {
		"type": "Move Class",
		"description": "Move Class InsertExport10 moved from exportbenchmark.procedures to exportbenchmark2.db.exportbenchmark.procedures"
	}, {
		"type": "Move Class",
		"description": "Move Class InsertExport moved from exportbenchmark.procedures to exportbenchmark2.db.exportbenchmark.procedures"
	}, {
		"type": "Move Class",
		"description": "Move Class SampleRecord moved from exportbenchmark.procedures to exportbenchmark2.db.exportbenchmark.procedures"
	}, {
		"type": "Move Class",
		"description": "Move Class InsertExport0 moved from exportbenchmark.procedures to exportbenchmark2.db.exportbenchmark.procedures"
	}, {
		"type": "Move Class",
		"description": "Move Class InsertExport1 moved from exportbenchmark.procedures to exportbenchmark2.db.exportbenchmark.procedures"
	}, {
		"type": "Move Class",
		"description": "Move Class NoOpExporter moved from exportbenchmark to exportbenchmark2.exporter.exportbenchmark"
	}],
	"time": "7/6/15 4:02 PM",
	"id": 1132736
}, {
	"sha1": "885771d57c97bd2dd48951e8aeaaa87ceb87532b",
	"repository": "https://github.com/abarisain/dmix.git",
	"author": "Avuton Olrich",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method package processIntent(action String, mpd MPD) : void inlined to protected onHandleIntent(intent Intent) : void in class com.namelessdev.mpdroid.widgets.WidgetHelperService"
	}],
	"time": "7/6/15 5:49 PM",
	"id": 1133355
}, {
	"sha1": "0e815f3e1339f91960c7c64ab395de6dd8ff9eec",
	"repository": "https://github.com/cucumber/cucumber-jvm.git",
	"author": "Aslak Helles\u00f8y",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class cucumber.runtime.java.ObjectFactory moved to cucumber.api.java.ObjectFactory"
	}],
	"time": "7/6/15 7:36 PM",
	"id": 1133977
}, {
	"sha1": "b2bbd9941be6b132a83d27c0ae02c935e1dec5dd",
	"repository": "https://github.com/apache/drill.git",
	"author": "Hanifi Gunes",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private allocateBytes(size long) : void extracted from public allocateNew(valueCount int) : void in class org.apache.drill.exec.vector.BitVector"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private allocateBytes(size long) : void extracted from public allocateNewSafe() : boolean in class org.apache.drill.exec.vector.BitVector"
	}],
	"time": "7/6/15 8:28 PM",
	"id": 1133865
}, {
	"sha1": "36ccb0f5c6771ff4be87a282560c090447520b66",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Daz DeBoer",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ResolvedLocalComponentsResultGraphVisitor moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.projectresult.ResolvedLocalComponentsResultGraphVisitor"
	}, {
		"type": "Move Class",
		"description": "Move Class org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph.ResolutionResultDependencyGraphVisitor moved to org.gradle.api.internal.artifacts.ivyservice.resolveengine.result.ResolutionResultDependencyGraphVisitor"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.gradle.api.internal.artifacts.ivyservice.resolveengine.graph to org.gradle.api.internal.artifacts.ivyservice.resolveengine.oldresult"
	}],
	"time": "7/6/15 8:45 PM",
	"id": 1134151
}, {
	"sha1": "fa62b9bde224341e0c2d43c0694fc10c4df7336f",
	"repository": "https://github.com/WhisperSystems/TextSecure.git",
	"author": "Jake McGinty",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private init() : void inlined to public EmojiDrawer(context Context, attrs AttributeSet, defStyle int) in class org.thoughtcrime.securesms.components.emoji.EmojiDrawer"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private initializeResources() : void inlined to private initialize() : void in class org.thoughtcrime.securesms.components.emoji.EmojiToggle"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected onKeyboardShown(keyboardHeight int) : void renamed to protected onKeyboardOpen(keyboardHeight int) : void in class org.thoughtcrime.securesms.components.KeyboardAwareLinearLayout"
	}],
	"time": "7/6/15 8:50 PM",
	"id": 1133054
}, {
	"sha1": "3224fa8ce7e0079d6ad507e17534cdf01f758876",
	"repository": "https://github.com/spring-projects/spring-data-mongodb.git",
	"author": "Christoph Strobl",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private processTypeHintForNestedDocuments(source Object, info TypeInformation<?>) : TypeInformation<?> inlined to private getTypeHintForEntity(source Object, entity MongoPersistentEntity<?>) : TypeInformation<?> in class org.springframework.data.mongodb.core.convert.UpdateMapper"
	}],
	"time": "7/7/15 4:57 AM",
	"id": 1133515
}, {
	"sha1": "f394599bf1423be0be2d5822ed7f1271d2841225",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "L\u00f3r\u00e1nt Pint\u00e9r",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class JarBinaryRules moved from org.gradle.jvm.plugins to org.gradle.jvm.internal"
	}],
	"time": "7/7/15 8:09 AM",
	"id": 1134145
}, {
	"sha1": "36d1b0717bc5836bba39985caadc2df5f2533ac4",
	"repository": "https://github.com/spring-projects/spring-data-jpa.git",
	"author": "Dev Naruka",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class PropertyChangeEnsuringBeanWrapper moved from org.springframework.data.jpa.repository.augment.JpaSoftDeleteQueryAugmentor to org.springframework.data.jpa.repository.augment"
	}],
	"time": "7/7/15 9:13 AM",
	"id": 1133761
}, {
	"sha1": "fa3e6fa02dadc675f0d487a15cd842b3ac4a0c11",
	"repository": "https://github.com/google/j2objc.git",
	"author": "kstanger",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method private getOperatorFunctionModifier(expr Expression) : String extracted from private rewriteBoxedPrefixOrPostfix(node TreeNode, operand Expression, funcName String) : void in class com.google.devtools.j2objc.translate.Autoboxer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private getOperatorFunctionModifier(expr Expression) : String extracted from private rewriteBoxedAssignment(node Assignment) : void in class com.google.devtools.j2objc.translate.Autoboxer"
		}

	],
	"time": "7/7/15 1:03 PM",
	"id": 1135417
}, {
	"sha1": "b9a17665b158955ad28ef7f50cc0a8585460f053",
	"repository": "https://github.com/google/closure-compiler.git",
	"author": "tbreisacher",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private createUntaggedTemplateLiteral(n Node) : void inlined to package visitTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private createTaggedTemplateLiteral(t NodeTraversal, n Node) : void renamed to package visitTaggedTemplateLiteral(t NodeTraversal, n Node) : void in class com.google.javascript.jscomp.Es6TemplateLiterals"
	}],
	"time": "7/7/15 1:21 PM",
	"id": 1135734
}, {
	"sha1": "91cdfa1ffd937a4cb01cdc0052874ef7831955e2",
	"repository": "https://github.com/deeplearning4j/deeplearning4j.git",
	"author": "nyghtowl",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public testBackTrackLine() : void from class org.deeplearning4j.plot.ListenerTest to public testBackTrackLine() : void from class org.deeplearning4j.optimize.solver.BackTrackLineSearchTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getNewScore(oldParameters INDArray) : double extracted from public optimize(initialStep double, parameters INDArray, gradients INDArray) : double in class org.deeplearning4j.optimize.solvers.BackTrackLineSearch"
	}],
	"time": "7/7/15 8:06 PM",
	"id": 1135604
}, {
	"sha1": "ef0eb01f93d6c485cf37692fd193833a6821272a",
	"repository": "https://github.com/spring-projects/spring-framework.git",
	"author": "Brian Clozel",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected checkRequest(request HttpServletRequest) : void extracted from protected checkAndPrepare(request HttpServletRequest, response HttpServletResponse, cacheControl CacheControl) : void in class org.springframework.web.servlet.support.WebContentGenerator"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected lookupCacheSeconds(urlPath String) : CacheControl renamed to protected lookupCacheControl(urlPath String) : CacheControl in class org.springframework.web.servlet.mvc.WebContentInterceptor"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testSetPathMatcherToNull() : void renamed to public throwsExceptionWithNullPathMatcher() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public preHandleSetsCacheSecondsOnMatchingRequest() : void renamed to public cacheResourcesConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithCustomCacheMapping() : void renamed to public mappedCacheConfigurationOverridesGlobal() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithCachingDisabled() : void renamed to public emptyCacheConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public preHandleSetsCacheSecondsOnMatchingRequestWithNoCaching() : void renamed to public preventCacheConfiguration() : void in class org.springframework.web.servlet.mvc.WebContentInterceptorTests"
	}],
	"time": "7/7/15 8:08 PM",
	"id": 1135909
}, {
	"sha1": "b8d2140fe4faccadcf1a6343ec8cd0cc58c315f9",
	"repository": "https://github.com/apache/hive.git",
	"author": "Sergey Shelukhin",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private doFirstFetchIfNeeded() : void extracted from private joinFinalLeftData() : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private doFirstFetchIfNeeded() : void extracted from public process(row Object, tag int) : void in class org.apache.hadoop.hive.ql.exec.CommonMergeJoinOperator"
	}],
	"time": "7/7/15 10:30 PM",
	"id": 1136002
}, {
	"sha1": "56c273ee11296288cb15320c3de781b94a1e8eb4",
	"repository": "https://github.com/tomahawk-player/tomahawk-android.git",
	"author": "Enno Gottschalk",
	"refactorings": [{
		"type": "Push Down Method",
		"description": "Push Down Method public getAlbumTimeStamps() : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getAlbumTimeStamps() : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.UserCollection"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected mAlbumTracks : ConcurrentHashMap<Album,Set<Query>> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public wipe() : void from class org.tomahawk.libtomahawk.collection.NativeCollection to public wipe() : void from class org.tomahawk.libtomahawk.collection.Collection"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected mQueries : Set<Query> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected mArtists : Set<Artist> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public getArtistTimeStamps() : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getArtistTimeStamps() : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.UserCollection"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private mArtistTimeStamps : ConcurrentHashMap<Artist,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.UserCollection"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public addQuery(query Query, addedTimeStamp long) : void from class org.tomahawk.libtomahawk.collection.NativeCollection to public addQuery(query Query, addedTimeStamp long) : void from class org.tomahawk.libtomahawk.collection.UserCollection"
	}, {
		"type": "Push Down Method",
		"description": "Push Down Method public getQueryTimeStamps() : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to public getQueryTimeStamps() : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.UserCollection"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected mAlbumArtists : Set<Artist> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private mQueryTimeStamps : ConcurrentHashMap<Query,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.UserCollection"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected mAlbums : Set<Album> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection"
	}, {
		"type": "Push Down Attribute",
		"description": "Push Down Attribute private mAlbumTimeStamps : ConcurrentHashMap<Album,Long> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.UserCollection"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute protected mArtistAlbums : ConcurrentHashMap<Artist,Set<Album>> from class org.tomahawk.libtomahawk.collection.NativeCollection to class org.tomahawk.libtomahawk.collection.Collection"
	}],
	"time": "7/7/15 10:44 PM",
	"id": 1135559
}, {
	"sha1": "de7efe40dad0f4bb900c4fffa80ed377745532b3",
	"repository": "https://github.com/nutzam/nutz.git",
	"author": "kouxian",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public migration(dao Dao, klass Class<?>, add boolean, del boolean, tableName Object) : void extracted from public migration(dao Dao, klass Class<?>, add boolean, del boolean) : void in class org.nutz.dao.util.Daos"
	}],
	"time": "7/8/15 5:25 AM",
	"id": 1136424
}, {
	"sha1": "b0938501f1014cf663e33b44ed5bb9b24d19a358",
	"repository": "https://github.com/amplab/tachyon.git",
	"author": "Gene Pang",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream extracted from public disableLocalWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getBlockOutStream(filename String, isLocalWrite boolean) : BlockOutStream extracted from public enableLocalWriteTest() : void in class tachyon.client.BlockOutStreamIntegrationTest"
	}],
	"time": "7/8/15 1:29 PM",
	"id": 1136909
}, {
	"sha1": "f283ed29814403bde6350a2598cdd6e2c8b983d5",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Yuki Morishita",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public submitBackground(cfs ColumnFamilyStore, autoFill boolean) : List<Future<?>> inlined to public submitBackground(cfs ColumnFamilyStore) : List<Future<?>> in class org.apache.cassandra.db.compaction.CompactionManager"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.apache.cassandra.db.compaction.CompactionManager.BackgroundCompactionTask renamed to org.apache.cassandra.db.compaction.CompactionManager.BackgroundCompactionCandidate"
	}],
	"time": "7/8/15 1:58 PM",
	"id": 1136760
}, {
	"sha1": "46b0d84de9c309bca48a99e572e6611693ed5236",
	"repository": "https://github.com/orfjackal/retrolambda.git",
	"author": "Esko Luontola",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public saveResource(relativePath Path, content byte[]) : void extracted from public save(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public save(bytecode byte[]) : void renamed to public saveClass(bytecode byte[]) : void in class net.orfjackal.retrolambda.files.ClassSaver"
	}],
	"time": "7/8/15 2:08 PM",
	"id": 1136668
}, {
	"sha1": "7b5622d41537315710b6fd57b2739a3a64698375",
	"repository": "https://github.com/JetBrains/MPS.git",
	"author": "Fedor Isakov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getTreePath(components List<String>, escapePathSep boolean) : TreePath extracted from private stringToPath(pathString String) : TreePath in class jetbrains.mps.ide.ui.tree.MPSTree"
	}],
	"time": "7/8/15 2:53 PM",
	"id": 1136831
}, {
	"sha1": "7fb0d1ce3b6583013e81ac05eb9afb15d20eab7f",
	"repository": "https://github.com/Jasig/cas.git",
	"author": "Misagh Moayyed",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private NTLMSSP_SIGNATURE : Byte[] from class org.jasig.cas.support.spnego.util.SpnegoConstants to class org.jasig.cas.support.spnego.authentication.principal.SpnegoCredential"
	}],
	"time": "7/8/15 2:56 PM",
	"id": 1137049
}, {
	"sha1": "19d1936c3b07d97d88646aeae30de747715e3248",
	"repository": "https://github.com/facebook/facebook-android-sdk.git",
	"author": "Ming Li",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getErrorMessage(extras Bundle) : String extracted from private handleResultOk(request Request, data Intent) : Result in class com.facebook.login.KatanaProxyLoginMethodHandler"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int, callback InitializeCallback) : void extracted from public sdkInitialize(applicationContext Context, callbackRequestCodeOffset int) : void in class com.facebook.FacebookSdk"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public sdkInitialize(applicationContext Context, callback InitializeCallback) : void extracted from public sdkInitialize(applicationContext Context) : void in class com.facebook.FacebookSdk"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private CAPTION_PARAM : String from class com.facebook.share.internal.ShareInternalUtility to class com.facebook.GraphRequest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getError(extras Bundle) : String extracted from private handleResultOk(request Request, data Intent) : Result in class com.facebook.login.KatanaProxyLoginMethodHandler"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private PICTURE_PARAM : String from class com.facebook.share.internal.ShareInternalUtility to class com.facebook.GraphRequest"
	},{
		"type": "Move Method",
		"description":"Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, photoUri Uri, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, photoUri Uri, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest"
	},
{
		"type": "Move Method",
		"description":"Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, image Bitmap, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, image Bitmap, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest"
	},
{
		"type": "Move Method",
		"description":"Move Method public newUploadPhotoRequest(graphPath String, accessToken AccessToken, file File, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.share.internal.ShareInternalUtility to public newUploadPhotoRequest(accessToken AccessToken, graphPath String, file File, caption String, params Bundle, callback Callback) : GraphRequest from class com.facebook.GraphRequest"
	}],
	"time": "7/8/15 3:33 PM",
	"id": 1137085
}, {
	"sha1": "e0dda9f61b7c409944c4734edf75b108e0288f59",
	"repository": "https://github.com/gwtproject/gwt.git",
	"author": "Daniel Kurka",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.google.gwt.core.client.impl.Md5Digest moved to java.security.MessageDigest.Md5Digest"
	}],
	"time": "7/8/15 4:20 PM",
	"id": 1136996
}, {
	"sha1": "f0b2cc559026871c1b4d8e008666afb590553004",
	"repository": "https://github.com/WhisperSystems/TextSecure.git",
	"author": "Christoph Haefner",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private craftIntent(context Context, intentAction String, extras Bundle) : PendingIntent extracted from public getMarkAsReadIntent(context Context, masterSecret MasterSecret) : PendingIntent in class org.thoughtcrime.securesms.notifications.NotificationState"
	}],
	"time": "7/8/15 4:55 PM",
	"id": 1136335
}, {
	"sha1": "ce5f9ff96e2718e4014655f819314ac2ac4bd8bf",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Vassiliy.Kudryashov",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private getLiveIndicator(base Icon) : Icon from class com.intellij.execution.ui.RunContentManagerImpl to public getLiveIndicator(base Icon) : Icon from class com.intellij.execution.runners.ExecutionUtil"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private getConfiguration(project Project) : RunnerAndConfigurationSettings renamed to private getSelectedConfiguration(project Project) : RunnerAndConfigurationSettings in class com.intellij.execution.ExecutorRegistryImpl.ExecutorAction"
	}],
	"time": "7/8/15 5:41 PM",
	"id": 1136184
}, {
	"sha1": "95bfa40630e34f6f369e0055d9f37f49bca60247",
	"repository": "https://github.com/bitcoinj/bitcoinj.git",
	"author": "Mike Hearn",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getUTXOs(outPoints List<TransactionOutPoint>, includeMempool boolean) : ListenableFuture<UTXOsMessage> extracted from public getUTXOs(outPoints List<TransactionOutPoint>) : ListenableFuture<UTXOsMessage> in class org.bitcoinj.core.Peer"
	}],
	"time": "7/8/15 7:36 PM",
	"id": 1136537
}, {
	"sha1": "c4a37e38aba926c2bef27e4fc00e3a4848ce46bd",
	"repository": "https://github.com/WhisperSystems/TextSecure.git",
	"author": "Calvin Hu",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public setMedia(slide Slide, masterSecret MasterSecret) : void extracted from public setMedia(slide Slide) : void in class org.thoughtcrime.securesms.mms.AttachmentManager"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private constructPartFromUri(uri Uri) : PduPart renamed to private constructPartFromByteArrayAndUri(uri Uri, data byte[], encrypted boolean) : PduPart in class org.thoughtcrime.securesms.mms.ImageSlide"
	}],
	"time": "7/8/15 8:01 PM",
	"id": 1136333
}, {
	"sha1": "f664789737d516ac664462732664121acc111a1e",
	"repository": "https://github.com/apache/hive.git",
	"author": "Eugene Koifman",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private dumpConfig(conf Configuration, sb StringBuilder) : void extracted from private dumpEnvironent() : String in class org.apache.hive.hcatalog.templeton.AppConfig"
	}],
	"time": "7/8/15 9:53 PM",
	"id": 1137157
}, {
	"sha1": "a07cae0aca9f9072256b3a5fd05779e8d69b9748",
	"repository": "https://github.com/checkstyle/checkstyle.git",
	"author": "Baratali Izmailov",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private leaveLiteralIf(literalIf DetailAST) : void inlined to public leaveToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private visitLiteralTry(literalTry DetailAST) : void inlined to public visitToken(literalTry DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private leaveLiteralTry() : void inlined to public leaveToken(literalTry DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedTryDepthCheck"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private visitLiteralIf(literalIf DetailAST) : void inlined to public visitToken(literalIf DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.coding.NestedIfDepthCheck"
	}],
	"time": "7/8/15 10:27 PM",
	"id": 1136737
}, {
	"sha1": "9aeefcd8120bb3b89cdb437d8c32d2ed84b8a825",
	"repository": "https://github.com/amplab/tachyon.git",
	"author": "Carson Wang",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getCandidateDirInTier(tier StorageTier, blockSize long) : StorageDir extracted from public allocateBlock(userId long, blockId long, blockSize long, location BlockStoreLocation) : TempBlockMeta in class tachyon.worker.block.allocator.MaxFreeAllocator"
	}],
	"time": "7/9/15 1:34 AM",
	"id": 1138074
}, {
	"sha1": "669b96c8aa4ed5134617932118de563bd4c34066",
	"repository": "https://github.com/reactor/reactor.git",
	"author": "Stephane Maldini",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class reactor.core.alloc.Recyclable moved to reactor.core.support.Recyclable"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.bus.alloc.EventAllocator moved to reactor.alloc.EventAllocator"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.core.alloc.ReferenceCountingAllocator moved to reactor.alloc.ReferenceCountingAllocator"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.bus.alloc.EventAllocatorTests moved to reactor.alloc.EventAllocatorTests"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.core.alloc.RecyclableString moved to reactor.alloc.RecyclableString"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.bus.alloc.EventFactorySupplier moved to reactor.alloc.EventFactorySupplier"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.core.alloc.AbstractReference moved to reactor.alloc.AbstractReference"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.core.alloc.Allocator moved to reactor.alloc.Allocator"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.core.alloc.Reference moved to reactor.alloc.Reference"
	}, {
		"type": "Move Class",
		"description": "Move Class reactor.core.alloc.RecyclableNumber moved to reactor.alloc.RecyclableNumber"
	}],
	"time": "7/9/15 6:45 AM",
	"id": 1136729
}, {
	"sha1": "563d281b61e9f8748858e911eaa810e981f1e953",
	"repository": "https://github.com/crate/crate.git",
	"author": "dobe",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getCustomRoutingCol() : ColumnIdent extracted from private getRoutingCol() : ColumnIdent in class io.crate.metadata.doc.DocIndexMetaData"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private validateNoUnsupportedFields(function Function, context Context) : String renamed to private rewriteAndValidateFields(function Function, context Context) : Function in class io.crate.lucene.LuceneQueryBuilder.Visitor"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testSelectById() : void renamed to public testSelectByIdWithCustomRouting() : void in class io.crate.analyze.where.WhereClauseAnalyzerTest"
	}],
	"time": "7/9/15 6:48 AM",
	"id": 1136870
}, {
	"sha1": "bdc9f9a44f337ab595a3570833dc6a0558df904c",
	"repository": "https://github.com/siacs/Conversations.git",
	"author": "Andreas Straub",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getIdentityKeyCursor(account Account, name String, own boolean, fingerprint String) : Cursor extracted from private getIdentityKeyCursor(account Account, name String, own boolean) : Cursor in class eu.siacs.conversations.persistance.DatabaseBackend"
	}],
	"time": "7/9/15 9:23 AM",
	"id": 1136480
}, {
	"sha1": "cf1efb6d27a4037cdbe5a780afa6053859a60d4a",
	"repository": "https://github.com/openhab/openhab.git",
	"author": "HelmutL",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private initializeGeneralGlobals() : void extracted from private initializeSciptGlobals() : void in class org.openhab.core.jsr223.internal.engine.scriptmanager.Script"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private initializeNashornGlobals() : void extracted from private initializeSciptGlobals() : void in class org.openhab.core.jsr223.internal.engine.scriptmanager.Script"
	}],
	"time": "7/9/15 9:46 AM",
	"id": 1137389
}, {
	"sha1": "5cdabae35f0642e9fe243afe12e4c16b3378a150",
	"repository": "https://github.com/novoda/android-demos.git",
	"author": "Friedger M\u00fcffke",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.novoda.Base64DecoderException moved to com.novoda.demo.encryption.Base64DecoderException"
	}, {
		"type": "Move Class",
		"description": "Move Class com.novoda.Base64 moved to com.novoda.demo.encryption.Base64"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.novoda.Encrypt renamed to com.novoda.demo.encryption.EncryptionActivity"
	}],
	"time": "7/9/15 10:00 AM",
	"id": 1136374
}, {
	"sha1": "8a16081a9322b4a4062baaf32edc6b6b8b4afa88",
	"repository": "https://github.com/netty/netty.git",
	"author": "nmittler",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private cancelPendingStreams() : void inlined to public close() : void in class io.netty.handler.codec.http2.StreamBufferingEncoder"
	}, {
		"type": "Rename Class",
		"description": "Rename Class io.netty.handler.codec.http2.StreamBufferingEncoder.GoAwayException renamed to io.netty.handler.codec.http2.StreamBufferingEncoder.Http2GoAwayException"
	}],
	"time": "7/9/15 11:35 AM",
	"id": 1138004
}, {
	"sha1": "9f319029ecc031cf8bf1756ab8a0e9e4e52c2902",
	"repository": "https://github.com/apache/camel.git",
	"author": "Claus Ibsen",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface org.apache.camel.model.OtherAttributesAware from class org.apache.camel.model.ProcessorDefinition"
	}],
	"time": "7/9/15 1:06 PM",
	"id": 1138152
}, {
	"sha1": "da39bfeb9c370abe2d86e6e327fade252434090d",
	"repository": "https://github.com/spotify/helios.git",
	"author": "David Xia",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package run0(client HeliosClient, out PrintStream, json boolean, name String, full boolean) : int extracted from package run(options Namespace, client HeliosClient, out PrintStream, json boolean, stdin BufferedReader) : int in class com.spotify.helios.cli.command.DeploymentGroupStatusCommand"
	}],
	"time": "7/9/15 3:44 PM",
	"id": 1137619
}, {
	"sha1": "910397f2390d6821a006991ed6035c76cbc74897",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "Jorge Ruesga",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method private queryProperty(id int, fromDock boolean) : long extracted from private queryProperty(id int) : long in class android.os.BatteryManager"
		}, {
			"type": "Extract Interface",
			"description": "Extract Interface com.android.systemui.statusbar.policy.BatteryStateRegistar from class com.android.systemui.statusbar.policy.BatteryController"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected getBoltPointsArrayResource() : int extracted from private loadBoltPoints(res Resources) : float[] in class com.android.systemui.BatteryMeterView.NormalBatteryMeterDrawable"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public internalStoreStatsHistoryInFile(stats BatteryStats, fname String) : void extracted from public storeStatsHistoryInFile(fname String) : void in class com.android.internal.os.BatteryStatsHelper"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from public readSummaryFromParcel(in Parcel) : void in class com.android.internal.os.BatteryStatsImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from public setNumSpeedSteps(steps int) : void in class com.android.internal.os.BatteryStatsImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected setCpuSpeedSteps(numSpeedSteps int) : void extracted from package readFromParcelLocked(in Parcel) : void in class com.android.internal.os.BatteryStatsImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected getKernelWakelockUpdateVersion() : int extracted from public updateKernelWakelocksLocked() : void in class com.android.internal.os.BatteryStatsImpl"
		}, {
			"type": "Rename Method",
			"description": "Rename Method private load() : void renamed to private loadStats() : void in class com.android.internal.os.BatteryStatsHelper"
		}, {
			"type": "Move Class",
			"description": "Move Class com.android.systemui.statusbar.policy.BatteryController.BatteryStateChangeCallback moved to com.android.systemui.statusbar.policy.BatteryStateRegistar.BatteryStateChangeCallback"
		}
	],
	"time": "7/9/15 4:42 PM",
	"id": 1137231
}, {
	"sha1": "aed371dac5e1248880e869930c636994c3d0f8dc",
	"repository": "https://github.com/thymeleaf/thymeleaf.git",
	"author": "Daniel Fern\u00e1ndez",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private fillUpOverflow() : void extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private processReadBuffer(buffer char[], off int, len int) : int extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.markup.ThymeleafMarkupTemplateReader"
	}],
	"time": "7/9/15 6:57 PM",
	"id": 1137794
}, {
	"sha1": "944aea445051891280a8ab7fbbd514c19646f1ab",
	"repository": "https://github.com/HubSpot/Singularity.git",
	"author": "Whitney Sorenson",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, updateTime long, instanceNo int, initialTaskState TaskState) : SingularityTask extracted from protected launchTask(request SingularityRequest, deploy SingularityDeploy, launchTime long, instanceNo int, initialTaskState TaskState) : SingularityTask in class com.hubspot.singularity.SingularitySchedulerTestBase"
	}],
	"time": "7/9/15 7:21 PM",
	"id": 1137182
}, {
	"sha1": "8fc60d81fe0e46e7e5c96e71d4a93fcadc6bde4f",
	"repository": "https://github.com/google/auto.git",
	"author": "dpb",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private deferredElements() : ImmutableMap<String,Optional<? extends Element>> extracted from public process(annotations Set? extends TypeElement, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private validElements(deferredElements ImmutableMap<String,Optional<? extends Element>>, roundEnv RoundEnvironment) : ImmutableSetMultimap<Class<?>> extends Annotation,Element extracted from public process(annotations Set? extends TypeElement, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private process(validElements ImmutableSetMultimap<Class<?>> extends Annotation,Element) : void extracted from public process(annotations Set? extends TypeElement, roundEnv RoundEnvironment) : boolean in class com.google.auto.common.BasicAnnotationProcessor"
	}],
	"time": "7/9/15 9:16 PM",
	"id": 1137576
}, {
	"sha1": "8967e7c33c59e1336e1e3b4671293ced5697fca6",
	"repository": "https://github.com/google/auto.git",
	"author": "emcmanus",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private doTestMissingClass(tempDir File) : void extracted from public testMissingClass() : void in class com.google.auto.value.processor.AutoAnnotationCompilationTest"
	}],
	"time": "7/9/15 9:16 PM",
	"id": 1137575
}, {
	"sha1": "378ba37750a9cb1b19a6db434dfa59308f721ea6",
	"repository": "https://github.com/thymeleaf/thymeleaf.git",
	"author": "Daniel Fern\u00e1ndez",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private matchOverflow(structure char[]) : boolean extracted from public read(cbuf char[], off int, len int) : int in class org.thymeleaf.templateparser.reader.BlockAwareReader"
	}],
	"time": "7/9/15 9:20 PM",
	"id": 1137793
}, {
	"sha1": "69dd55c93fc99c5f7a1e2c21f10e671e311be49e",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "Marko Topolnik",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute public UTF_8 : Charset from class com.hazelcast.client.impl.protocol.util.SafeBuffer to class com.hazelcast.nio.Bits"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute public UTF_8 : Charset from class com.hazelcast.client.impl.protocol.util.UnsafeBuffer to class com.hazelcast.nio.Bits"
	}, {
		"type": "Move Class",
		"description": "Move Class com.hazelcast.client.impl.protocol.util.Int2ObjectHashMap moved to com.hazelcast.util.collection.Int2ObjectHashMap"
	}, {
		"type": "Move Class",
		"description": "Move Class com.hazelcast.client.protocol.Int2ObjectHashMapTest moved to com.hazelcast.util.collection.Int2ObjectHashMapTest"
	}],
	"time": "7/10/15 5:19 AM",
	"id": 1137397
}, {
	"sha1": "925801c14e7500313069b2bc04abd066798a881c",
	"repository": "https://github.com/siacs/Conversations.git",
	"author": "Daniel Gultsch",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private setupTrustManager(connection HttpsURLConnection, interactive boolean) : void from class eu.siacs.conversations.http.HttpConnection to public setupTrustManager(connection HttpsURLConnection, interactive boolean) : void from class eu.siacs.conversations.http.HttpConnectionManager"
	}],
	"time": "7/10/15 9:14 AM",
	"id": 1137627
}, {
	"sha1": "e1625136ba12907696ef4c6e922ce073293f3a2c",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Vladislav.Soroka",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private addAnnotationProcessorOption(compilerArg String, optionsMap Map<String,String>) : void extracted from private getAnnotationProcessorOptionsFromCompilerConfig(compilerConfig Element) : Map<String,String> in class org.jetbrains.idea.maven.project.MavenProject"
	}],
	"time": "7/10/15 10:34 AM",
	"id": 1137311
}, {
	"sha1": "cb0935e3af05b333b5c85a4fb3b1846836218f11",
	"repository": "https://github.com/apache/camel.git",
	"author": "Jonathan Anstey",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private storeCamelContextInQuartzContext() : SchedulerContext extracted from private createAndInitScheduler() : void in class org.apache.camel.component.quartz2.QuartzComponent"
	}],
	"time": "7/10/15 11:17 AM",
	"id": 1138135
}, {
	"sha1": "5a37c2aa596377cb4c9b6f916614407fd0a7d3db",
	"repository": "https://github.com/square/javapoet.git",
	"author": "Thomas Broyer",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.squareup.javapoet.TypesTest.Parameterized moved to com.squareup.javapoet.AbstractTypesTest.Parameterized"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass com.squareup.javapoet.AbstractTypesTest from class com.squareup.javapoet.TypesTest"
	}],
	"time": "7/10/15 11:56 AM",
	"id": 1139380
}, {
	"sha1": "dd8753cfb0f67db4dde6c5254e2df3104b635dae",
	"repository": "https://github.com/spotify/helios.git",
	"author": "Rohan Singh",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getDeploymentGroup(client ZooKeeperClient, name String) : DeploymentGroup extracted from public getDeploymentGroup(name String) : DeploymentGroup in class com.spotify.helios.master.ZooKeeperMasterModel"
	}],
	"time": "7/10/15 6:18 PM",
	"id": 1139036
}, {
	"sha1": "76331570e68446c17e4ff5287f5b7b2b6b472895",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "Andy Mast",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public clearFailedUnlockAttempts(clearFingers boolean) : void extracted from public clearFailedUnlockAttempts() : void in class com.android.keyguard.KeyguardUpdateMonitor"
	}],
	"time": "7/11/15 2:50 AM",
	"id": 1138354
}, {
	"sha1": "a7401e5091c06c68fae499ea1972b40143c66fa9",
	"repository": "https://github.com/github/android.git",
	"author": "Henrik",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private onUserLoggedIn(uri Uri) : void extracted from protected onNewIntent(intent Intent) : void in class com.github.mobile.accounts.LoginActivity"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private endAccess(accessToken String, scope String) : void renamed to private endAuth(accessToken String, scope String) : void in class com.github.mobile.accounts.LoginActivity"
	}],
	"time": "7/11/15 9:20 AM",
	"id": 1139092
}, {
	"sha1": "5b184ac783784c1ca4baf1437888c79bd9460763",
	"repository": "https://github.com/amplab/tachyon.git",
	"author": "cc",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private freeSpace(bytesToBeAvailable long, location BlockStoreLocation) : EvictionPlan inlined to public freeSpaceWithView(bytesToBeAvailable long, location BlockStoreLocation, view BlockMetadataManagerView) : EvictionPlan in class tachyon.worker.block.evictor.LRUEvictor"
	}],
	"time": "7/11/15 9:32 AM",
	"id": 1139562
}, {
	"sha1": "2b2bb6c734d106cdd1c0f4691607be2fe11d7ebb",
	"repository": "https://github.com/QuantumBadger/RedReader.git",
	"author": "QuantumBadger",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute public UI_THREAD_HANDLER : Handler from class org.quantumbadger.redreader.common.General to class org.quantumbadger.redreader.common.AndroidApi"
	}],
	"time": "7/11/15 11:33 AM",
	"id": 1138932
}, {
	"sha1": "78b54757c0d234db671526aed9b3288a85048e22",
	"repository": "https://github.com/liferay/liferay-plugins.git",
	"author": "Minhchau Dang",
	"refactorings": [],
	"time": "7/11/15 5:06 PM",
	"id": 1139721
}, {
	"sha1": "3d080545362794ac5ab63a6cf1bdfb523a0d92a5",
	"repository": "https://github.com/deeplearning4j/deeplearning4j.git",
	"author": "jyt109",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public readCaffeModel(is InputStream, sizeLimitMb int) : NetParameter extracted from public readCaffeModel(caffeModelPath String, sizeLimitMb int) : NetParameter in class org.deeplearning4j.translate.CaffeModelToJavaClass"
	}],
	"time": "7/11/15 11:47 PM",
	"id": 1139304
}, {
	"sha1": "febbc986cb25ed460ea601c0a68c7d2597f89ee4",
	"repository": "https://github.com/checkstyle/checkstyle.git",
	"author": "Michal Kordas",
	"refactorings": [{
		"type": "Rename Class",
		"description": "Rename Class com.google.checkstyle.test.chapter4formatting.rule4822variabledistance.InputVariableDeclarationUsageDistanceCheck.writer renamed to com.google.checkstyle.test.chapter4formatting.rule4822variabledistance.InputVariableDeclarationUsageDistanceCheck.otherWriter"
	}, {
		"type": "Move Class",
		"description": "Move Class com.google.checkstyle.test.chapter5naming.rule521packageNames.PackageNameInputBad moved to com.google.checkstyle.test.chapter5naming.rule521packageNamesCamelCase.PackageNameInputBad"
	}],
	"time": "7/12/15 2:07 AM",
	"id": 1139443
}, {
	"sha1": "679d38d4316c16ccba4982d7f3ba13c147a451cb",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "Serkan OZAL",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected getFromNearCache(keyData Data, async boolean) : Object extracted from protected getInternal(key K, expiryPolicy ExpiryPolicy, async boolean) : Object in class com.hazelcast.client.cache.impl.AbstractClientCacheProxy"
	}],
	"time": "7/12/15 6:06 AM",
	"id": 1138530
}, {
	"sha1": "7e7e4f54801af4e49ebddb934d0c6ff33a2c2160",
	"repository": "https://github.com/cgeo/cgeo.git",
	"author": "Bananeweizen",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class cgeo.geocaching.connector.TerraCachingConnector moved to cgeo.geocaching.connector.tc.TerraCachingConnector"
	}],
	"time": "7/12/15 7:01 AM",
	"id": 1139097
}, {
	"sha1": "c1a9dd63aca8bf488f9a671aa6281538540397f8",
	"repository": "https://github.com/SimonVT/schematic.git",
	"author": "Simon Vig Therkildsen",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private printNotifyInsert(writer JavaWriter, uri UriContract) : void extracted from public write(filer Filer) : void in class net.simonvt.schematic.compiler.ContentProviderWriter"
	}],
	"time": "7/12/15 10:27 AM",
	"id": 1139075
}, {
	"sha1": "5fa74fbb4a307571e3807c1201b8b05d3d60a99b",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Mikhaylo Demianenko",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from public shouldCreateEmptyCountsTrackerStoreWhenCreatingDatabase() : void in class org.neo4j.kernel.impl.store.counts.CountsRotationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createCountsTracker(pageCache PageCache) : CountsTracker extracted from 2 others in class org.neo4j.kernel.impl.store.counts.CountsRotationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createCountsTracker() : CountsTracker extracted from public shouldCreateACountStoreWhenDBContainsDenseNodes() : void in class org.neo4j.kernel.impl.store.counts.CountsComputerTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createCountsTracker() : CountsTracker extracted from 5 others in class org.neo4j.kernel.impl.store.counts.CountsComputerTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setup() : void renamed to public setUp() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public teardown() : void renamed to public tearDown() : void in class org.neo4j.kernel.impl.store.StoreFactoryTest"
	}],
	"time": "7/13/15 8:59 AM",
	"id": 1140032
}, {
	"sha1": "80d3ffb5aafa90992385c17e8338c2cc5def3cec",
	"repository": "https://github.com/jline/jline2.git",
	"author": "Luke Call",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public readCharacter(checkForAltKeyCombo boolean) : int extracted from public readCharacter() : int in class jline.console.ConsoleReader"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public readCharacter(checkForAltKeyCombo boolean, allowed char[]) : int extracted from public readCharacter(allowed char[]) : int in class jline.console.ConsoleReader"
	}],
	"time": "7/13/15 10:30 AM",
	"id": 1140061
}, {
	"sha1": "9687048f76519fc89b4151cbe2841bbba61a401d",
	"repository": "https://github.com/BroadleafCommerce/BroadleafCommerce.git",
	"author": "Jerry Ocanas",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected getEntityForm(info DynamicEntityFormInfo, dynamicFormOverride EntityForm) : EntityForm extracted from protected getBlankDynamicFieldTemplateForm(info DynamicEntityFormInfo, dynamicFormOverride EntityForm) : EntityForm in class org.broadleafcommerce.openadmin.web.controller.AdminAbstractController"
	}],
	"time": "7/13/15 11:12 AM",
	"id": 1140320
}, {
	"sha1": "b2b4085348de32f10903970dded99fdf0376a43c",
	"repository": "https://github.com/Netflix/feign.git",
	"author": "Adrian Cole",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.BaseContract"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private headersFromAnnotation(targetType Class<?>, data MethodMetadata) : void extracted from public parseAndValidatateMetadata(method Method) : MethodMetadata in class feign.Contract.Default"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public configKey(targetType Class, method Method) : String extracted from public configKey(method Method) : String in class feign.Feign"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public toKeyMethodFormatsAsExpected() : void renamed to public configKeyFormatsAsExpected() : void in class feign.FeignTest"
	},{
		"type": "Rename Method",
		"description": "Rename Method public parseAndValidatateMetadata(method Method) : MethodMetadata renamed to protected parseAndValidateMetadata(targetType Class<?>, method Method) : MethodMetadata in class feign.jaxrs.JAXRSContract"
	}],
	"time": "7/13/15 1:49 PM",
	"id": 1140131
}, {
	"sha1": "14593c6379445f260baeb5287f618758da6d9952",
	"repository": "https://github.com/aws/aws-sdk-java.git",
	"author": "David Murray",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package com.amazonaws.service to com.amazonaws.services"
	}],
	"time": "7/13/15 3:02 PM",
	"id": 1140316
}, {
	"sha1": "15afd616cba5fb3d432d11a6de0d4f7805b202db",
	"repository": "https://github.com/structr/structr.git",
	"author": "Christian Morgner",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package handleObject(nodeFactory NodeFactory, relFactory RelationshipFactory, key String, value Object, includeHiddenAndDeleted boolean, publicOnly boolean, level int) : Object extracted from public execute(query String, parameters Map<String,Object>, includeHiddenAndDeleted boolean, publicOnly boolean) : List<GraphObject> in class org.structr.core.graph.CypherQueryCommand"
	}],
	"time": "7/13/15 4:05 PM",
	"id": 1139781
}, {
	"sha1": "76d7f5e3fe4eb41b383c1d884bc1217b9fa7192e",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "sancar",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method protected createAddress(host String, port int) : Address extracted from private createAddresses(count int) : Address[] in class com.hazelcast.test.TestHazelcastInstanceFactory"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected createAddress(host String, port int) : Address extracted from private createAddresses(addressArray String[]) : Address[] in class com.hazelcast.test.TestHazelcastInstanceFactory"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected startSelectors() : void extracted from public start() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected initializeSelectors(client HazelcastClientInstanceImpl) : void extracted from public ClientConnectionManagerImpl(client HazelcastClientInstanceImpl, addressTranslator AddressTranslator) in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected shutdownSelectors() : void extracted from public shutdown() : void in class com.hazelcast.client.connection.nio.ClientConnectionManagerImpl"
		}, {
			"type": "Rename Method",
			"description": "Rename Method private tripshutdown(instances HazelcastInstance[]) : void renamed to private tripTerminate(instances HazelcastInstance[]) : void in class com.hazelcast.mapreduce.MapReduceTest"
		}
	],
	"time": "7/13/15 8:28 PM",
	"id": 1139976
}, {
	"sha1": "42e0649f82779ecd48bff6448924fc7dc2534554",
	"repository": "https://github.com/geometer/FBReaderJ.git",
	"author": "Nikolay Pultsin",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private allTopLevelNodes() : List<MenuNode> extracted from public topLevelNodes() : List<MenuNode> in class org.geometerplus.android.fbreader.MenuData"
	}],
	"time": "7/13/15 11:13 PM",
	"id": 1140269
}, {
	"sha1": "64938ebcfc2fc8cd9ccd6cf31dbcd8cdd0660aca",
	"repository": "https://github.com/spring-projects/spring-security.git",
	"author": "Rob Winch",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>, handler SecurityExpressionHandler<Message<Object>>) : MessageSecurityMetadataSource extracted from public createExpressionMessageMetadataSource(matcherToExpression LinkedHashMap<MessageMatcher<?>,String>) : MessageSecurityMetadataSource in class org.springframework.security.messaging.access.expression.ExpressionBasedMessageSecurityMetadataSourceFactory"
	}],
	"time": "7/14/15 12:45 AM",
	"id": 1139995
}, {
	"sha1": "e29924b33ec0c0298ba4fc3f7a8c218c8e6cfa0c",
	"repository": "https://github.com/plutext/docx4j.git",
	"author": "Jason Harrop",
	"refactorings": [ {
		"type": "Extract Method",
		"description": "Extract Method public save(outFile File, flags int, password String) : void extracted from public save(outFile File, flags int) : void in class org.docx4j.openpackaging.packages.OpcPackage"
	},{
		"type": "Extract Method",
		"description": "Extract Method public save(outStream OutputStream, flags int, password String) : void extracted from public save(outStream OutputStream, flags int) : void in class org.docx4j.openpackaging.packages.OpcPackage"
	},{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.LittleEndianConsts moved to org.docx4j.org.apache.poi.util.LittleEndianConsts"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.Ole10Native moved to org.docx4j.org.apache.poi.poifs.filesystem.Ole10Native"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.RawDataBlockList moved to org.docx4j.org.apache.poi.poifs.storage.RawDataBlockList"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.Decryptor moved to org.docx4j.org.apache.poi.poifs.crypt.Decryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.RecordFormatException moved to org.docx4j.org.apache.poi.util.RecordFormatException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.ReadingNotSupportedException moved to org.docx4j.org.apache.poi.hpsf.ReadingNotSupportedException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Decryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.StringUtil moved to org.docx4j.org.apache.poi.util.StringUtil"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Property moved to org.docx4j.org.apache.poi.hpsf.Property"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.standard.EncryptionRecord moved to org.docx4j.org.apache.poi.poifs.crypt.standard.EncryptionRecord"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.ShortField moved to org.docx4j.org.apache.poi.util.ShortField"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.PropertyTableBase moved to org.docx4j.org.apache.poi.poifs.property.PropertyTableBase"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.LittleEndianInputStream moved to org.docx4j.org.apache.poi.util.LittleEndianInputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.POIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSFileSystem"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.ByteField moved to org.docx4j.org.apache.poi.util.ByteField"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.NoFormatIDException moved to org.docx4j.org.apache.poi.hpsf.NoFormatIDException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.SmallBlockTableWriter moved to org.docx4j.org.apache.poi.poifs.storage.SmallBlockTableWriter"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionHeader"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderEvent moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderEvent"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.OPOIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.OPOIFSFileSystem"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionVerifier"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.HeaderBlockWriter moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlockWriter"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.FilteringDirectoryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.FilteringDirectoryNode"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.dev.POIFSViewable moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewable"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.BlockWritable moved to org.docx4j.org.apache.poi.poifs.storage.BlockWritable"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hssf.OldExcelFormatException moved to org.docx4j.org.apache.poi.hssf.OldExcelFormatException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionVerifier"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.ClassID moved to org.docx4j.org.apache.poi.hpsf.ClassID"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.Parent moved to org.docx4j.org.apache.poi.poifs.property.Parent"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.CloseIgnoringInputStream moved to org.docx4j.org.apache.poi.util.CloseIgnoringInputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.Encryptor moved to org.docx4j.org.apache.poi.poifs.crypt.Encryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.BlockList moved to org.docx4j.org.apache.poi.poifs.storage.BlockList"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.ListManagedBlock moved to org.docx4j.org.apache.poi.poifs.storage.ListManagedBlock"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.BlockListImpl moved to org.docx4j.org.apache.poi.poifs.storage.BlockListImpl"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.TypeWriter moved to org.docx4j.org.apache.poi.hpsf.TypeWriter"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.DelayableLittleEndianOutput moved to org.docx4j.org.apache.poi.util.DelayableLittleEndianOutput"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.EncryptionInfo moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionInfo"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.nio.ByteArrayBackedDataSource moved to org.docx4j.org.apache.poi.poifs.nio.ByteArrayBackedDataSource"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.NoPropertySetStreamException moved to org.docx4j.org.apache.poi.hpsf.NoPropertySetStreamException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.DocumentNode moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentNode"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.LittleEndianOutput moved to org.docx4j.org.apache.poi.util.LittleEndianOutput"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.EntryUtils moved to org.docx4j.org.apache.poi.poifs.filesystem.EntryUtils"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.IOUtils moved to org.docx4j.org.apache.poi.util.IOUtils"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.NPOIFSFileSystem moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSFileSystem"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.UnexpectedPropertySetTypeException moved to org.docx4j.org.apache.poi.hpsf.UnexpectedPropertySetTypeException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIDecryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Filetime moved to org.docx4j.org.apache.poi.hpsf.Filetime"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.TypedPropertyValue moved to org.docx4j.org.apache.poi.hpsf.TypedPropertyValue"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.BATManaged moved to org.docx4j.org.apache.poi.poifs.filesystem.BATManaged"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.DocumentOutputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentOutputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.agile.EncryptionDocument moved to org.docx4j.org.apache.poi.poifs.crypt.agile.EncryptionDocument"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.PropertyFactory moved to org.docx4j.org.apache.poi.poifs.property.PropertyFactory"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.Entry moved to org.docx4j.org.apache.poi.poifs.filesystem.Entry"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.NPOIFSStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.standard.StandardDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardDecryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.MutableSection moved to org.docx4j.org.apache.poi.hpsf.MutableSection"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.SummaryInformation moved to org.docx4j.org.apache.poi.hpsf.SummaryInformation"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.LittleEndianByteArrayOutputStream moved to org.docx4j.org.apache.poi.util.LittleEndianByteArrayOutputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.DocumentSummaryInformation moved to org.docx4j.org.apache.poi.hpsf.DocumentSummaryInformation"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.PngUtils moved to org.docx4j.org.apache.poi.util.PngUtils"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.CodePageUtil moved to org.docx4j.org.apache.poi.util.CodePageUtil"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.BigBlock moved to org.docx4j.org.apache.poi.poifs.storage.BigBlock"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.NPropertyTable moved to org.docx4j.org.apache.poi.poifs.property.NPropertyTable"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Vector moved to org.docx4j.org.apache.poi.hpsf.Vector"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.DocumentHelper moved to org.docx4j.org.apache.poi.util.DocumentHelper"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.SpecialPropertySet moved to org.docx4j.org.apache.poi.hpsf.SpecialPropertySet"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.IndirectPropertyName moved to org.docx4j.org.apache.poi.hpsf.IndirectPropertyName"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.VersionedStream moved to org.docx4j.org.apache.poi.hpsf.VersionedStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.Property moved to org.docx4j.org.apache.poi.poifs.property.Property"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.MutablePropertySet moved to org.docx4j.org.apache.poi.hpsf.MutablePropertySet"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.WritingNotSupportedException moved to org.docx4j.org.apache.poi.hpsf.WritingNotSupportedException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Util moved to org.docx4j.org.apache.poi.hpsf.Util"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.HeaderBlock moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlock"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Array moved to org.docx4j.org.apache.poi.hpsf.Array"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.PropertyTable moved to org.docx4j.org.apache.poi.poifs.property.PropertyTable"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.EncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionInfoBuilder"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.DocumentBlock moved to org.docx4j.org.apache.poi.poifs.storage.DocumentBlock"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.MissingSectionException moved to org.docx4j.org.apache.poi.hpsf.MissingSectionException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.HexRead moved to org.docx4j.org.apache.poi.util.HexRead"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionHeader"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.BoundedInputStream moved to org.docx4j.org.apache.poi.util.BoundedInputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.EncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionVerifier"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.RootProperty moved to org.docx4j.org.apache.poi.poifs.property.RootProperty"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.OfficeXmlFileException moved to org.docx4j.org.apache.poi.poifs.filesystem.OfficeXmlFileException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.IntegerField moved to org.docx4j.org.apache.poi.util.IntegerField"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.FixedField moved to org.docx4j.org.apache.poi.util.FixedField"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.BitField moved to org.docx4j.org.apache.poi.util.BitField"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.ChunkedCipherOutputStream moved to org.docx4j.org.apache.poi.poifs.crypt.ChunkedCipherOutputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.POIFSWriterEvent moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSWriterEvent"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.PropertyBlock moved to org.docx4j.org.apache.poi.poifs.storage.PropertyBlock"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.HexDump moved to org.docx4j.org.apache.poi.util.HexDump"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.Ole10NativeException moved to org.docx4j.org.apache.poi.poifs.filesystem.Ole10NativeException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.OldFileFormatException moved to org.docx4j.org.apache.poi.OldFileFormatException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.DocumentDescriptor moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentDescriptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.DocumentProperty moved to org.docx4j.org.apache.poi.poifs.property.DocumentProperty"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Variant moved to org.docx4j.org.apache.poi.hpsf.Variant"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.eventfilesystem.POIFSReader moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReader"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.BlockAllocationTableWriter moved to org.docx4j.org.apache.poi.poifs.storage.BlockAllocationTableWriter"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.TempFileCreationStrategy moved to org.docx4j.org.apache.poi.util.TempFileCreationStrategy"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.GUID moved to org.docx4j.org.apache.poi.hpsf.GUID"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptionHeader"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptionVerifier"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.dev.POIFSViewer moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewer"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.DataSpaceMapUtils moved to org.docx4j.org.apache.poi.poifs.crypt.DataSpaceMapUtils"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionVerifier"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.standard.StandardEncryptionInfoBuilder"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.EncryptedDocumentException moved to org.docx4j.org.apache.poi.EncryptedDocumentException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4Encryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.NotOLE2FileException moved to org.docx4j.org.apache.poi.poifs.filesystem.NotOLE2FileException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.LongField moved to org.docx4j.org.apache.poi.util.LongField"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.DocumentEntry moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentEntry"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.HPSFException moved to org.docx4j.org.apache.poi.hpsf.HPSFException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.nio.DataSource moved to org.docx4j.org.apache.poi.poifs.nio.DataSource"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.PropertyConstants moved to org.docx4j.org.apache.poi.poifs.property.PropertyConstants"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.ChunkedCipherInputStream moved to org.docx4j.org.apache.poi.poifs.crypt.ChunkedCipherInputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.VariantBool moved to org.docx4j.org.apache.poi.hpsf.VariantBool"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.SmallDocumentBlockList moved to org.docx4j.org.apache.poi.poifs.storage.SmallDocumentBlockList"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.Child moved to org.docx4j.org.apache.poi.poifs.property.Child"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.RawDataBlock moved to org.docx4j.org.apache.poi.poifs.storage.RawDataBlock"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.UnsupportedFileFormatException moved to org.docx4j.org.apache.poi.UnsupportedFileFormatException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.nio.FileBackedDataSource moved to org.docx4j.org.apache.poi.poifs.nio.FileBackedDataSource"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.UnsupportedVariantTypeException moved to org.docx4j.org.apache.poi.hpsf.UnsupportedVariantTypeException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.SAXHelper moved to org.docx4j.org.apache.poi.util.SAXHelper"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.IntList moved to org.docx4j.org.apache.poi.util.IntList"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.CryptoFunctions moved to org.docx4j.org.apache.poi.poifs.crypt.CryptoFunctions"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.CustomProperty moved to org.docx4j.org.apache.poi.hpsf.CustomProperty"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.dev.POIFSViewEngine moved to org.docx4j.org.apache.poi.poifs.dev.POIFSViewEngine"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.HeaderBlockConstants moved to org.docx4j.org.apache.poi.poifs.storage.HeaderBlockConstants"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptionInfoBuilder"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.BitFieldFactory moved to org.docx4j.org.apache.poi.util.BitFieldFactory"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.MarkUnsupportedException moved to org.docx4j.org.apache.poi.hpsf.MarkUnsupportedException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.agile.AgileEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileEncryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.agile.AgileDecryptor moved to org.docx4j.org.apache.poi.poifs.crypt.agile.AgileDecryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionInfoBuilder moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionInfoBuilder"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.TempFile moved to org.docx4j.org.apache.poi.util.TempFile"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.NoSingleSectionException moved to org.docx4j.org.apache.poi.hpsf.NoSingleSectionException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.wellknown.PropertyIDMap moved to org.docx4j.org.apache.poi.hpsf.wellknown.PropertyIDMap"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.wellknown.SectionIDMap moved to org.docx4j.org.apache.poi.hpsf.wellknown.SectionIDMap"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.VariantTypeException moved to org.docx4j.org.apache.poi.hpsf.VariantTypeException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.DirectoryEntry moved to org.docx4j.org.apache.poi.poifs.filesystem.DirectoryEntry"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.EmptyFileException moved to org.docx4j.org.apache.poi.EmptyFileException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.ClipboardData moved to org.docx4j.org.apache.poi.hpsf.ClipboardData"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderRegistry moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderRegistry"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.IllegalPropertySetDataException moved to org.docx4j.org.apache.poi.hpsf.IllegalPropertySetDataException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.LittleEndianInput moved to org.docx4j.org.apache.poi.util.LittleEndianInput"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.PropertySetFactory moved to org.docx4j.org.apache.poi.hpsf.PropertySetFactory"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.EntryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.EntryNode"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.property.DirectoryProperty moved to org.docx4j.org.apache.poi.poifs.property.DirectoryProperty"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.LittleEndian moved to org.docx4j.org.apache.poi.util.LittleEndian"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Currency moved to org.docx4j.org.apache.poi.hpsf.Currency"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.NDocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NDocumentInputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Date moved to org.docx4j.org.apache.poi.hpsf.Date"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.BlockStore moved to org.docx4j.org.apache.poi.poifs.filesystem.BlockStore"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.POIFSDocumentPath moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSDocumentPath"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.BlockAllocationTableReader moved to org.docx4j.org.apache.poi.poifs.storage.BlockAllocationTableReader"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.util.LittleEndianOutputStream moved to org.docx4j.org.apache.poi.util.LittleEndianOutputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.eventfilesystem.POIFSReaderListener moved to org.docx4j.org.apache.poi.poifs.eventfilesystem.POIFSReaderListener"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Decimal moved to org.docx4j.org.apache.poi.hpsf.Decimal"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Blob moved to org.docx4j.org.apache.poi.hpsf.Blob"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.NPOIFSDocument moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSDocument"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.UnicodeString moved to org.docx4j.org.apache.poi.hpsf.UnicodeString"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.binaryrc4.BinaryRC4EncryptionHeader"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.ODocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.ODocumentInputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.NPOIFSMiniStore moved to org.docx4j.org.apache.poi.poifs.filesystem.NPOIFSMiniStore"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.OPOIFSDocument moved to org.docx4j.org.apache.poi.poifs.filesystem.OPOIFSDocument"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.DataInputBlock moved to org.docx4j.org.apache.poi.poifs.storage.DataInputBlock"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.VariantSupport moved to org.docx4j.org.apache.poi.hpsf.VariantSupport"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.common.POIFSConstants moved to org.docx4j.org.apache.poi.poifs.common.POIFSConstants"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.NDocumentOutputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.NDocumentOutputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.POIFSWriterListener moved to org.docx4j.org.apache.poi.poifs.filesystem.POIFSWriterListener"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.DirectoryNode moved to org.docx4j.org.apache.poi.poifs.filesystem.DirectoryNode"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.EncryptionHeader moved to org.docx4j.org.apache.poi.poifs.crypt.EncryptionHeader"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptor moved to org.docx4j.org.apache.poi.poifs.crypt.cryptoapi.CryptoAPIEncryptor"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.dev.POIFSLister moved to org.docx4j.org.apache.poi.poifs.dev.POIFSLister"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.HPSFRuntimeException moved to org.docx4j.org.apache.poi.hpsf.HPSFRuntimeException"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.PropertySet moved to org.docx4j.org.apache.poi.hpsf.PropertySet"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.common.POIFSBigBlockSize moved to org.docx4j.org.apache.poi.poifs.common.POIFSBigBlockSize"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.CodePageString moved to org.docx4j.org.apache.poi.hpsf.CodePageString"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.Section moved to org.docx4j.org.apache.poi.hpsf.Section"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.MutableProperty moved to org.docx4j.org.apache.poi.hpsf.MutableProperty"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.filesystem.DocumentInputStream moved to org.docx4j.org.apache.poi.poifs.filesystem.DocumentInputStream"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.poifs.storage.BATBlock.BATBlockAndIndex moved to org.docx4j.org.apache.poi.poifs.storage.BATBlock.BATBlockAndIndex"
	},
{
		"type": "Move Class",
		"description":"Move Class org.apache.poi.hpsf.CustomProperties moved to org.docx4j.org.apache.poi.hpsf.CustomProperties"
	}],
	"time": "7/14/15 12:58 AM",
	"id": 1140071
}, {
	"sha1": "2307ff3a4ca367aaf64088b7b1e1bbf212c9bf3a",
	"repository": "https://github.com/springfox/springfox.git",
	"author": "Dilip Krishnan",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class springfox.documentation.spring.web.AbstractPathProvider moved to springfox.documentation.spring.web.paths.AbstractPathProvider"
	}, {
		"type": "Move Class",
		"description": "Move Class springfox.documentation.spring.web.RelativePathProvider moved to springfox.documentation.spring.web.paths.RelativePathProvider"
	}, {
		"type": "Move Class",
		"description": "Move Class springfox.documentation.spring.web.Paths moved to springfox.documentation.spring.web.paths.Paths"
	}],
	"time": "7/14/15 1:47 AM",
	"id": 1140621
}, {
	"sha1": "1b21ba4bcea986988d4bbd578e3bb9a20ec69606",
	"repository": "https://github.com/wordpress-mobile/WordPress-Android.git",
	"author": "Tony Rankin",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private privacyStringForValue(value int) : String extracted from public onPreferenceChange(preference Preference, newValue Object) : boolean in class org.wordpress.android.ui.prefs.SiteSettingsFragment"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private changeEditTextPreferenceValue(pref EditTextPreference, newValue String) : void extracted from public onPreferenceChange(preference Preference, newValue Object) : boolean in class org.wordpress.android.ui.prefs.SiteSettingsFragment"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private applySettings() : void renamed to private applyChanges() : void in class org.wordpress.android.ui.prefs.SiteSettingsFragment"
	}, {
		"type": "Move Method",
		"description": "Move Method private getLanguageString(languagueCode String) : String from class org.wordpress.android.ui.prefs.SiteSettingsFragment to public getLanguageString(languagueCode String, displayLocale Locale) : String from class org.wordpress.android.util.StringUtils"
	}],
	"time": "7/14/15 2:27 AM",
	"id": 1140686
}, {
	"sha1": "a26b61201cd86c9a8773b418d9c84b446e95a601",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Mattias Persson",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public arrayAsCollection(arrayValue Object) : Collection from class org.neo4j.kernel.impl.util.IoPrimitiveUtils to public arrayAsCollection(arrayValue Object) : Collection from class org.neo4j.graphdb.Neo4jMatchers"
	}],
	"time": "7/14/15 5:14 AM",
	"id": 1140028
}, {
	"sha1": "7837d0baf1aef45340eec699516a8c3a22aeb553",
	"repository": "https://github.com/robovm/robovm.git",
	"author": "Alex Itelman",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private signFrameworks(appDir File, getTaskAllow boolean) : void extracted from protected prepareLaunch(appDir File) : void in class org.robovm.compiler.target.ios.IOSTarget"
	}],
	"time": "7/14/15 5:28 AM",
	"id": 1140505
}, {
	"sha1": "af618666043f21b3db7e6a1be2aa225ae0f432b4",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "peter",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private isNavigationBlocked(renderer GutterIconRenderer, project Project) : boolean extracted from public mouseReleased(e MouseEvent) : void in class com.intellij.openapi.editor.impl.EditorGutterComponentImpl"
	}],
	"time": "7/14/15 6:34 AM",
	"id": 1139897
}, {
	"sha1": "7ffc62aa554f5884064b81ee80078e35e3833006",
	"repository": "https://github.com/droolsjbpm/drools.git",
	"author": "Maciej Swiderski",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected addInterceptor(interceptor Interceptor, store boolean) : void extracted from public addInterceptor(interceptor Interceptor) : void in class org.drools.persistence.SingleSessionCommandService"
	}],
	"time": "7/14/15 6:51 AM",
	"id": 1140435
}, {
	"sha1": "a70ca1d9ad2ea07b19c5e1f9540c809d7a12d3fb",
	"repository": "https://github.com/Activiti/Activiti.git",
	"author": "Joram Barrez",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected flushPersistentObjects(persistentObjectClass Class<? extends PersistentObject>, persistentObjectsToInsert List<PersistentObject>) : void extracted from protected flushInserts() : void in class org.activiti.engine.impl.db.DbSqlSession"
	}],
	"time": "7/14/15 8:27 AM",
	"id": 1140275
}, {
	"sha1": "84937551787072a4befac29fb48436b3187ac4c6",
	"repository": "https://github.com/spring-projects/spring-boot.git",
	"author": "Andy Wilkinson",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.springframework.boot.cli.compiler.grape.SettingsXmlRepositorySystemSessionAutoConfiguration.SpringBootSecDispatcher moved to org.springframework.boot.cli.compiler.MavenSettingsReader.SpringBootSecDispatcher"
	}],
	"time": "7/14/15 8:30 AM",
	"id": 1139791
}, {
	"sha1": "ca7d0c3b33a0863bed04c77932b9ef6b1317f34e",
	"repository": "https://github.com/Activiti/Activiti.git",
	"author": "Joram Barrez",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.activiti.engine.impl.persistence.entity.UserEntityTest moved to org.activiti.engine.test.api.identity.UserEntityTest"
	}],
	"time": "7/14/15 8:59 AM",
	"id": 1140273
}, {
	"sha1": "106d1d51754f454fa673976665e41f463316e084",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Roman Shevchenko",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private dummy(builder PsiBuilder) : void extracted from public parseTypeParameter(builder PsiBuilder) : Marker in class com.intellij.lang.java.parser.ReferenceParser"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testAnyType() : void renamed to public testAnyTypeParams() : void in class com.intellij.lang.java.parser.partial.ReferenceParserTest"
	}],
	"time": "7/14/15 10:55 AM",
	"id": 1141018
}, {
	"sha1": "8184a32a019b2ed956e8f24c18cb49a266af47bf",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Shenwei Liu",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private generateSingleCopyFilesBuildPhase(target PBXNativeTarget, destinationSpec CopyFilePhaseDestinationSpec, targetNodes Iterable<TargetNode<?>>) : void extracted from private generateCopyFilesBuildPhases(target PBXNativeTarget, copiedNodes Iterable<TargetNode<?>>) : void in class com.facebook.buck.apple.ProjectGenerator"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private getDestination(targetNode TargetNode<?>) : Optional<PBXCopyFilesBuildPhase.Destination> renamed to private getDestinationSpec(targetNode TargetNode<?>) : Optional<CopyFilePhaseDestinationSpec> in class com.facebook.buck.apple.ProjectGenerator"
	}],
	"time": "7/14/15 12:10 PM",
	"id": 1141343
}, {
	"sha1": "ec5ea36faa3dd74585bb339beabdba6149ed63be",
	"repository": "https://github.com/linkedin/rest.li.git",
	"author": "Erluo Li",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private buildErrorResponse(result RestLiServiceException, errorResponseFormat ErrorResponseFormat) : ErrorResponse extracted from public buildErrorResponse(result RestLiServiceException) : ErrorResponse in class com.linkedin.restli.internal.server.methods.response.ErrorResponseBuilder"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getAugmentedRestLiResponseData() : AugmentedRestLiResponseData renamed to public getRestLiResponseEnvelope() : RestLiResponseEnvelope in class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setAugmentedRestLiResponseData(data AugmentedRestLiResponseData) : void renamed to public setRestLiResponseEnvelope(data RestLiResponseEnvelope) : void in class com.linkedin.restli.internal.server.RestLiCallback.FilterResponseContextAdapter"
	}],
	"time": "7/14/15 1:26 PM",
	"id": 1141428
}, {
	"sha1": "999e0e3616525d77cf46c5865f9981b5a6b5609a",
	"repository": "https://github.com/apache/hive.git",
	"author": "Jesus Camacho Rodriguez",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private hepPlan(basePlan RelNode, followPlanChanges boolean, mdProvider RelMetadataProvider, order HepMatchOrder, rules RelOptRule[]) : RelNode extracted from private hepPlan(basePlan RelNode, followPlanChanges boolean, mdProvider RelMetadataProvider, rules RelOptRule[]) : RelNode in class org.apache.hadoop.hive.ql.parse.CalcitePlanner.CalcitePlannerAction"
	}],
	"time": "7/14/15 3:18 PM",
	"id": 1142126
}, {
	"sha1": "8f446b6ddf540e1b1fefca34dd10f45ba7256095",
	"repository": "https://github.com/infinispan/infinispan.git",
	"author": "Tristan Tarrant",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.jboss.as.clustering to org.infinispan.server.commons"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.jboss.as.clustering to org.infinispan.server"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.jboss.as.clustering.jgroups to org.infinispan.server.jgroups.spi"
	}, {
		"type": "Rename Package",
		"description": "Rename Package org.jboss.as.clustering.jgroups to org.infinispan.server.jgroups.security"
	}, {
		"type": "Move Class",
		"description": "Move Class org.jboss.as.clustering.jgroups.subsystem.ClusteringSubsystemTest moved to org.infinispan.server.commons.subsystem.ClusteringSubsystemTest"
	}, {
		"type": "Move Class",
		"description": "Move Class org.jboss.as.clustering.jgroups.ServiceContainerHelper moved to org.infinispan.server.commons.msc.ServiceContainerHelper"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.jboss.as.clustering.jgroups.subsystem.ProtocolStackRemove renamed to org.infinispan.server.jgroups.subsystem.StackRemoveHandler"
	}],
	"time": "7/14/15 4:06 PM",
	"id": 1142116
}, {
	"sha1": "9f7de200c9aef900596b09327a52d33241a68d9c",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Roman Shevchenko",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private dummy(builder PsiBuilder) : void extracted from public parseTypeParameter(builder PsiBuilder) : Marker in class com.intellij.lang.java.parser.ReferenceParser"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public testAnyType() : void renamed to public testAnyTypeParams() : void in class com.intellij.lang.java.parser.partial.ReferenceParserTest"
	}],
	"time": "7/14/15 4:07 PM",
	"id": 1140982
}, {
	"sha1": "a9379ee529ed87e28c0736c3c6657dcd6a0680e4",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Anton Makeev",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean, resolveSymlinksIfNecessary boolean) : String extracted from private toCanonicalPath(path String, separatorChar char, removeLastSlash boolean) : String in class com.intellij.openapi.util.io.FileUtil"
	}],
	"time": "7/14/15 4:10 PM",
	"id": 1140981
}, {
	"sha1": "08b1b56e2cd5ad72126f4bbeb15a47d9b104dfff",
	"repository": "https://github.com/spring-projects/spring-security.git",
	"author": "Rob Winch",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter"
	}],
	"time": "7/14/15 4:48 PM",
	"id": 1141078
}, {
	"sha1": "fcc9a34356817d93c24b5ccf3107ec234a28b136",
	"repository": "https://github.com/spring-projects/spring-security.git",
	"author": "Rob Winch",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextServletOutputStream moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextServletOutputStream"
	}, {
		"type": "Move Class",
		"description": "Move Class org.springframework.security.web.context.SaveContextOnUpdateOrErrorResponseWrapper.SaveContextPrintWriter moved to org.springframework.security.web.context.OnCommittedResponseWrapper.SaveContextPrintWriter"
	}],
	"time": "7/14/15 4:49 PM",
	"id": 1141077
}, {
	"sha1": "02d3fa171d02c9d82c7bdcaeb739f47d0c0006a0",
	"repository": "https://github.com/zeromq/jeromq.git",
	"author": "Min(Dongmin Yu)",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private makeFdPair() : void inlined to public Signaler() in class zmq.Signaler"
	}],
	"time": "7/14/15 4:59 PM",
	"id": 1141203
}, {
	"sha1": "b395127e733b33c27f344695ebf155ecf5edeeab",
	"repository": "https://github.com/antlr/antlr4.git",
	"author": "Terence Parr",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.antlr.v4.runtime.misc to org.antlr.v4.gui"
	}, {
		"type": "Move Class",
		"description": "Move Class org.antlr.v4.runtime.tree.gui.TreePostScriptGenerator moved to org.antlr.v4.gui.TreePostScriptGenerator"
	}, {
		"type": "Move Class",
		"description": "Move Class org.antlr.v4.runtime.tree.gui.TreeTextProvider moved to org.antlr.v4.gui.TreeTextProvider"
	}, {
		"type": "Move Class",
		"description": "Move Class org.antlr.v4.runtime.tree.gui.TreeLayoutAdaptor moved to org.antlr.v4.gui.TreeLayoutAdaptor"
	}, {
		"type": "Move Class",
		"description": "Move Class org.antlr.v4.runtime.tree.gui.BasicFontMetrics moved to org.antlr.v4.gui.BasicFontMetrics"
	}, {
		"type": "Move Class",
		"description": "Move Class org.antlr.v4.runtime.tree.gui.TreeViewer moved to org.antlr.v4.gui.TreeViewer"
	}, {
		"type": "Move Class",
		"description": "Move Class org.antlr.v4.runtime.tree.gui.SystemFontMetrics moved to org.antlr.v4.gui.SystemFontMetrics"
	}, {
		"type": "Move Class",
		"description": "Move Class org.antlr.v4.runtime.tree.gui.PostScriptDocument moved to org.antlr.v4.gui.PostScriptDocument"
	}, {
		"type": "Inline Method",
		"description": "Inline Method public toStringTree(t Tree, nodeTextProvider TreeTextProvider) : String inlined to public toStringTree(t Tree, ruleNames List) : String in class org.antlr.v4.runtime.tree.Trees"
	}
],
	"time": "7/14/15 6:29 PM",
	"id": 1141310
}, {
	"sha1": "3b1f4e56fea289860b31ef83ccfe96a3a003cc8b",
	"repository": "https://github.com/AdoptOpenJDK/jitwatch.git",
	"author": "Chris Newland",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private visitTagParse(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private visitTagEliminateAllocation(tag Tag, parseDictionary IParseDictionary) : void extracted from public visitTag(tag Tag, parseDictionary IParseDictionary) : void in class org.adoptopenjdk.jitwatch.model.bytecode.BytecodeAnnotationBuilder"
	}],
	"time": "7/14/15 7:33 PM",
	"id": 1141296
}, {
	"sha1": "cb2deceea993128c22710b0f64f1b755c9d176f7",
	"repository": "https://github.com/facebook/presto.git",
	"author": "yuananf",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private flipComparison(type Type) : Type from class com.facebook.presto.sql.planner.RelationPlanner to public flipComparison(type Type) : Type from class com.facebook.presto.sql.ExpressionUtils"
	}],
	"time": "7/14/15 8:33 PM",
	"id": 1141149
}, {
	"sha1": "52cfd39ecba349c4d8e2c46eac76ed4d75b7ebae",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Shenwei Liu",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createSymLinkSdks(sdks Iterable<String>, root Path, version String) : void extracted from private createSymLinkIosSdks(root Path, version String) : void in class com.facebook.buck.apple.AppleSdkDiscoveryTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public simulatorPlatformSetsLinkerFlags() : void renamed to public iphoneOSSimulatorPlatformSetsLinkerFlags() : void in class com.facebook.buck.apple.AppleCxxPlatformsTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public appleSdkPathsBuiltFromDirectory() : void renamed to public iphoneOSSdkPathsBuiltFromDirectory() : void in class com.facebook.buck.apple.AppleCxxPlatformsTest"
	}],
	"time": "7/14/15 9:46 PM",
	"id": 1141324
}, {
	"sha1": "0f9d0b0bf1cd5fb58f47f22bd6d52a9fac31c530",
	"repository": "https://github.com/vaadin/vaadin.git",
	"author": "Johannes Dahlstr\u00f6m",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getVisibleFrozenColumnCount() : int extracted from private updateFrozenColumns() : void in class com.vaadin.client.widgets.Grid"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected createGrid(container PersonContainer) : Grid extracted from protected setup(request VaadinRequest) : void in class com.vaadin.tests.components.grid.GridEditorUI"
	}],
	"time": "7/15/15 5:41 AM",
	"id": 1141707
}, {
	"sha1": "7c59f2a4f9b03a9e48ca15554291a03477aa19c1",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "nik",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public addJarsToRoots(jarPaths List<String>, libraryName String, module Module, location PsiElement) : void extracted from public addJarToRoots(libPath String, module Module, location PsiElement) : void in class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix"
	}],
	"time": "7/15/15 8:49 AM",
	"id": 1140956
}, {
	"sha1": "1ba361438ab4d7f6a0305428ba40ba62e2e6ff3c",
	"repository": "https://github.com/plutext/docx4j.git",
	"author": "Jason Harrop",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.docx4j.schemas.microsoft.com.office.word_2006 to org.docx4j.com.microsoft.schemas.office.word.x2006"
	}],
	"time": "7/15/15 8:55 AM",
	"id": 1141185
}, {
	"sha1": "10f769a60c7c7b73982e978959d381df487bbe2d",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "nik",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private getJUnit4JarPaths() : List from class com.intellij.codeInsight.daemon.impl.quickfix.OrderEntryFix to public getJUnit4JarPaths() : List from class com.intellij.openapi.projectRoots.ex.JavaSdkUtil"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public getLibraryPaths() : List<String> extracted from public getLibraryPath() : String in class com.intellij.execution.junit.JUnit4Framework"
	}],
	"time": "7/15/15 11:13 AM",
	"id": 1140931
}, {
	"sha1": "619a6012da868d0d42d9628460f2264effe9bdba",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "peter",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private fillWithScopeExpansion(elements Set<Object>, pattern String) : boolean extracted from public computeInReadAction(indicator ProgressIndicator) : void in class com.intellij.ide.util.gotoByName.ChooseByNameBase.CalcElementsThread"
	}],
	"time": "7/15/15 2:24 PM",
	"id": 1140896
}, {
	"sha1": "d403a0b2322a74dde824094d67b7997c1c371883",
	"repository": "https://github.com/processing/processing.git",
	"author": "Akarshit Wal",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class processing.app.contrib.UpdateContribListingPanel moved to processing.app.contrib.UpdateContributionTab.UpdateContribListingPanel"
	}, {
		"type": "Move Class",
		"description": "Move Class processing.app.contrib.UpdateStatusPanel moved to processing.app.contrib.UpdateContributionTab.UpdateStatusPanel"
	}],
	"time": "7/15/15 2:57 PM",
	"id": 1142385
}, {
	"sha1": "e1f0dbc2f09541fc64ce88ee22d8f8f4648004fe",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Nikolay Mikhaylov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public resolveAndDownloadImpl(project Project, coord String, attachJavaDoc boolean, attachSources boolean, copyTo String, repositories List<MavenRepositoryInfo>) : List<OrderRoot> extracted from public resolveAndDownload(project Project, coord String, attachJavaDoc boolean, attachSources boolean, copyTo String, repositories List<MavenRepositoryInfo>) : NewLibraryConfiguration in class org.jetbrains.idea.maven.utils.library.RepositoryAttachHandler"
	}],
	"time": "7/15/15 4:10 PM",
	"id": 1142230
}, {
	"sha1": "240097b78b70172e1cf9bc37876a566ddfb9e115",
	"repository": "https://github.com/apache/hive.git",
	"author": "Owen O'Malley",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public getAcidEventFields() : List from class org.apache.hadoop.hive.ql.io.orc.OrcRecordUpdater to package getAcidEventFields() : List from class org.apache.hadoop.hive.ql.io.orc.RecordReaderFactory"
	}],
	"time": "7/15/15 6:41 PM",
	"id": 1142783
}, {
	"sha1": "5989711f7315abe4c3da0f1516a3eb3a81da6716",
	"repository": "https://github.com/jMonkeyEngine/jmonkeyengine.git",
	"author": "Nehon",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected movePanel(xoffset int, yoffset int) : void extracted from public mouseDragged(e MouseEvent) : void in class com.jme3.gde.materialdefinition.editor.DraggablePanel"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected saveLocation() : void extracted from public mousePressed(e MouseEvent) : void in class com.jme3.gde.materialdefinition.editor.DraggablePanel"
	}],
	"time": "7/15/15 6:55 PM",
	"id": 1142382
}, {
	"sha1": "8b1f5ce432bd6f579c646705d79ff0c4690495ae",
	"repository": "https://github.com/facebook/presto.git",
	"author": "Xin Yao",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public checkArrayIndex(index long) : void extracted from public readBlockAndCheckIndex(array Slice, index long) : Block in class com.facebook.presto.operator.scalar.ArraySubscriptOperator"
	}],
	"time": "7/15/15 10:34 PM",
	"id": 1142267
}, {
	"sha1": "30c4ae09745d6062077925a54f27205b7401d8df",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "Peter Veentjer",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private renderConnection() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderThread() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderOperationService() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderEvents() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderNativeMemory() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderHeap() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderClient() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderPhysicalMemory() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderProcessors() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method package getConnectionAddress() : Object extracted from public close(t Throwable) : void in class com.hazelcast.nio.tcp.TcpIpConnection"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderSwap() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderCluster() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderExecutors() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderProxy() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private renderGc() : void extracted from public toString() : String in class com.hazelcast.internal.monitors.HealthMonitor.HealthMetrics"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.hazelcast.internal.metrics.LongProbe renamed to com.hazelcast.internal.metrics.LongProbeFunction"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.hazelcast.internal.metrics.DoubleProbe renamed to com.hazelcast.internal.metrics.DoubleProbeFunction"
	}, {
		"type": "Move Class",
		"description": "Move Class com.hazelcast.internal.metrics.impl.GaugeImplTest.SomeObject moved to com.hazelcast.internal.metrics.impl.DoubleGaugeImplTest.SomeObject"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.DoubleProbeFunction"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.LongProbeFunction"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.impl.MethodProbe"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface com.hazelcast.internal.metrics.ProbeFunction from class com.hazelcast.internal.metrics.impl.FieldProbe"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getMetric_whenNullName() : void renamed to public newGauge_whenNullName() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getMetric_whenNotExistingMetric() : void renamed to public newGauge_whenNotExistingMetric() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getMetric_whenExistingMetric() : void renamed to public newGauge_whenExistingMetric() : void in class com.hazelcast.internal.metrics.impl.MetricsRegistryImplTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package getObjectMetadata(clazz Class<?>) : SourceMetadata renamed to package loadSourceMetadata(clazz Class<?>) : SourceMetadata in class com.hazelcast.internal.metrics.impl.MetricsRegistryImpl"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package getLastHandle() : long renamed to package getLastWriteTime() : long in class com.hazelcast.nio.tcp.WriteHandler"
	}, {
		"type": "Rename Method",
		"description": "Rename Method package getLastHandle() : long renamed to package getLastReadTime() : long in class com.hazelcast.nio.tcp.ReadHandler"
	}],
	"time": "7/16/15 1:56 AM",
	"id": 1143042
}, {
	"sha1": "d57b1401f874f96a53f1ec1c0f8a6089ae66a4ce",
	"repository": "https://github.com/jersey/jersey.git",
	"author": "Jakub Podlesak",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public _testParamValidatedResourceNoParam(target WebTarget) : void extracted from public testParamValidatedResourceNoParam() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.glassfish.jersey.ext.cdi1x.internal.GenericHk2LocatorManager from class org.glassfish.jersey.ext.cdi1x.servlet.internal.ServletHk2LocatorManager"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public _testParamValidatedResourceParamProvided(target WebTarget) : void extracted from public testParamValidatedResourceParamProvided() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public _testPropertyValidatedResourceParamProvided(target WebTarget) : void extracted from public testPropertyValidatedResourceParamProvided() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public _testOldFashionedResourceNoParam(target WebTarget) : void extracted from public testOldFashionedResourceNoParam() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public _testPropertyValidatedResourceNoParam(target WebTarget) : void extracted from public testPropertyValidatedResourceNoParam() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public _testFieldValidatedResourceNoParam(target WebTarget) : void extracted from public testFieldValidatedResourceNoParam() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public _testOldFashionedResourceParamProvided(target WebTarget) : void extracted from public testOldFashionedResourceParamProvided() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public _testFieldValidatedResourceParamProvided(target WebTarget) : void extracted from public testFieldValidatedResourceParamProvided() : void in class org.glassfish.jersey.tests.cdi.bv.BaseValidationTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private listTypes(logMsgBuilder StringBuilder, types Collection<Type>) : StringBuilder renamed to private listElements(logMsgBuilder StringBuilder, elements Collection<? extends Object>) : StringBuilder in class org.glassfish.jersey.ext.cdi1x.internal.CdiComponentProvider"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.glassfish.jersey.tests.cdi.bv.CdiTest renamed to org.glassfish.jersey.tests.cdi.bv.RawCdiTest"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.glassfish.jersey.tests.cdi.bv.Hk2Test renamed to org.glassfish.jersey.tests.cdi.bv.RawHk2Test"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.glassfish.jersey.ext.cdi1x.internal.DefaultHk2LocatorManager renamed to org.glassfish.jersey.ext.cdi1x.internal.SingleHk2LocatorManager"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.glassfish.jersey.tests.cdi.resources.MyApplication renamed to org.glassfish.jersey.tests.cdi.resources.MainApplication"
	}],
	"time": "7/16/15 4:51 AM",
	"id": 1143365
}, {
	"sha1": "c50064efb325b0c94cc62788b4c8935b7c39ac40",
	"repository": "https://github.com/deeplearning4j/deeplearning4j.git",
	"author": "Alex Black",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getOptimizer(oa OptimizationAlgorithm, conf NeuralNetConfiguration, m Model) : ConvexOptimizer extracted from public testSphereFnOptHelper(oa OptimizationAlgorithm, numLineSearchIter int, nDimensions int) : void in class org.deeplearning4j.optimize.solver.TestOptimizers"
	}],
	"time": "7/16/15 7:46 AM",
	"id": 1142429
}, {
	"sha1": "6ad1dcbfef36821a71cbffa301c58d1c3ffe8d62",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Anton Makeev",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method protected createMainModule(moduleType ModuleType) : Module from class com.intellij.testFramework.LightPlatformTestCase to class com.intellij.testFramework.LightProjectDescriptor"
	}],
	"time": "7/16/15 8:31 AM",
	"id": 1142210
}, {
	"sha1": "4fcd7d4d366d001cf5f1f7d926c608c902e3f0af",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Sylvain Lebresne",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.locator.DynamicEndpointSnitchTest.ScoreUpdater moved to org.apache.cassandra.locator.DynamicEndpointSnitchLongTest.ScoreUpdater"
	}],
	"time": "7/16/15 10:21 AM",
	"id": 1143549
}, {
	"sha1": "334dbc7cf3432e7c17b0ed98801e61b0b591b408",
	"repository": "https://github.com/opentripplanner/OpenTripPlanner.git",
	"author": "Matthew Wigginton Conway",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.opentripplanner.analyst.cluster.AnalystWorker.WorkerIdDefiner moved to org.opentripplanner.analyst.cluster.WorkerIdDefiner"
	}],
	"time": "7/16/15 11:10 AM",
	"id": 1143739
}, {
	"sha1": "97811cf971f7ccf6a5fc5e90a491db2f58d49da1",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Eugene Zhuravlev",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.jetbrains.jps.cmdline.BuildMain.MyLoggerFactory moved to org.jetbrains.jps.cmdline.LogSetup.MyLoggerFactory"
	}],
	"time": "7/16/15 12:00 PM",
	"id": 1143000
}, {
	"sha1": "2d98ae165ea43e9a1ac6a905d6094f077abb2e55",
	"repository": "https://github.com/Graylog2/graylog2-server.git",
	"author": "Bernd Ahlers",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private postProcessMessage(raw RawMessage, codec Codec, inputIdOnCurrentNode String, baseMetricName String, message Message, decodeTime long) : Message extracted from private processMessage(raw RawMessage) : Message in class org.graylog2.shared.buffers.processors.DecodingProcessor"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private dispatchMessage(msg Message) : void extracted from public onEvent(event MessageEvent) : void in class org.graylog2.shared.buffers.processors.ProcessBufferProcessor"
	}],
	"time": "7/16/15 12:42 PM",
	"id": 1143828
}, {
	"sha1": "7527cfc746dc20ddb78002c7b3a65d55026a334e",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Stefano Santoro",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class CallbacksRef moved from org.voltdb.importer.ChannelChangeNotifier to org.voltdb.importer.ChannelDistributer"
	}],
	"time": "7/16/15 12:48 PM",
	"id": 1142910
}, {
	"sha1": "913704e835169255530c7408cad11ce9a714d4ec",
	"repository": "https://github.com/NLPchina/ansj_seg.git",
	"author": "zhl",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.ansj.app.crf.pojo.TempFeature moved to org.ansj.app.crf.CrfppModelParser.TempFeature"
	}],
	"time": "7/16/15 2:33 PM",
	"id": 1144936
}, {
	"sha1": "c142b8ca3e9f9467931987ee16805cf53e6bc5d2",
	"repository": "https://github.com/cgeo/cgeo.git",
	"author": "Mathieu Alorent",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getWaymarkingConnector() : IConnector extracted from public testCanHandle() : void in class cgeo.geocaching.connector.WaymarkingConnectorTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private getWaymarkingConnector() : IConnector extracted from public testGetGeocodeFromUrl() : void in class cgeo.geocaching.connector.WaymarkingConnectorTest"
	}],
	"time": "7/16/15 2:47 PM",
	"id": 1143330
}, {
	"sha1": "9f422ed0f44516bea8116ed7730203e4eb316252",
	"repository": "https://github.com/netty/netty.git",
	"author": "Scott Mitchell",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private resetCtx() : void extracted from public windowUpdateAndFlushShouldTriggerWrite() : void in class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private initConnectionAndController() : void extracted from public setup() : void in class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowControllerTest"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private ctx : ChannelHandlerContext from class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder.FlowControlledBase to class io.netty.microbench.http2.NoopHttp2RemoteFlowController"
	}],
	"time": "7/16/15 6:41 PM",
	"id": 1143604
}, {
	"sha1": "af7e9e4bcd90504d6a665dbb21635eb1733fe025",
	"repository": "https://github.com/loopj/android-async-http.git",
	"author": "Marek Sebera",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private TAG : WeakReference from class com.loopj.android.http.RequestHandle to class com.loopj.android.http.AsyncHttpResponseHandler"
	}],
	"time": "7/16/15 7:18 PM",
	"id": 1143208
}, {
	"sha1": "d99695841fa675ea9150602b1132f037093e867d",
	"repository": "https://github.com/liferay/liferay-plugins.git",
	"author": "joanhyokim",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected getGetOAuthRequest(portletRequest PortletRequest, portletResponse PortletResponse) : OAuthRequest extracted from protected remoteRender(renderRequest RenderRequest, renderResponse RenderResponse) : void in class com.liferay.marketplace.store.portlet.RemoteMVCPortlet"
	}],
	"time": "7/16/15 8:00 PM",
	"id": 1143786
}, {
	"sha1": "59b8e89e61432d1d8f25cb003b62b3ac004d1b6f",
	"repository": "https://github.com/plutext/docx4j.git",
	"author": "Jason Harrop",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private setProtectionPassword(password String, hashAlgo HashAlgorithm) : void extracted from public setEnforcementEditValue(editValue STDocProtect, password String, hashAlgo HashAlgorithm) : void in class org.docx4j.openpackaging.parts.WordprocessingML.DocumentSettingsPart"
	}],
	"time": "7/16/15 10:52 PM",
	"id": 1143196
}, {
	"sha1": "543a9808a85619dbe5acc2373cb4fe5344442de7",
	"repository": "https://github.com/MovingBlocks/Terasology.git",
	"author": "Immortius",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.terasology.engine.subsystem.ThreadManagerSubsystem moved to org.terasology.engine.subsystem.common.ThreadManagerSubsystem"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private initTimer(context Context) : void inlined to public preInitialise(context Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglTimer"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private time : EngineTime from class org.terasology.engine.TerasologyEngine to class org.terasology.engine.subsystem.lwjgl.LwjglTimer"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private time : EngineTime from class org.terasology.engine.TerasologyEngine to class org.terasology.engine.subsystem.headless.HeadlessTimer"
	}, {
		"type": "Move Class",
		"description": "Move Class org.terasology.engine.subsystem.ThreadManager moved to org.terasology.engine.subsystem.common.ThreadManager"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private initOpenAL(context Context) : void inlined to public initialise(rootContext Context) : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.terasology.engine.subsystem.lwjgl.LwjglCustomViewPort renamed to org.terasology.engine.subsystem.lwjgl.LwjglPortlet"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.headless.HeadlessAudio"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglAudio"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglInput"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public dispose() : void renamed to public shutdown() : void in class org.terasology.engine.subsystem.lwjgl.LwjglGraphics"
	}],
	"time": "7/17/15 3:07 AM",
	"id": 1145105
}, {
	"sha1": "14abb6919a99a0d6d500198dd2e30c83b1bb6709",
	"repository": "https://github.com/datastax/java-driver.git",
	"author": "olim7t",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private validateParameters() : void extracted from public prepare(manager MappingManager, ps PreparedStatement) : void in class com.datastax.driver.mapping.MethodMapper"
	}],
	"time": "7/17/15 6:52 AM",
	"id": 1142921
}, {
	"sha1": "a5cdd8c4b10a738cb44819d7cc2fee5f5965d4a0",
	"repository": "https://github.com/BuildCraft/BuildCraft.git",
	"author": "Hea3veN",
	"refactorings": [{
			"type": "Push Down Attribute",
			"description": "Push Down Attribute public index : BlockIndex from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdBlock"
		}, {
			"type": "Push Down Attribute",
			"description": "Push Down Attribute public side : ForgeDirection from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdBlock"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private getAvailableRequests(station DockingStation) : Collection<StackRequest> extracted from private getOrderFromRequestingStation(station DockingStation, take boolean) : StackRequest in class buildcraft.robotics.ai.AIRobotSearchStackRequest"
		}, {
			"type": "Push Down Attribute",
			"description": "Push Down Attribute private index : BlockIndex from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdRequest"
		}, {
			"type": "Push Down Method",
			"description": "Push Down Method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceId to public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdBlock"
		},
		{
			"type": "Push Down Method",
			"description": "Push Down Method public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceId to public equals(obj Object) : boolean from class buildcraft.api.robots.ResourceIdRequest"
		}, {
			"type": "Push Down Attribute",
			"description": "Push Down Attribute private side : ForgeDirection from class buildcraft.api.robots.ResourceId to class buildcraft.api.robots.ResourceIdRequest"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private releaseCurrentRequest() : void extracted from public delegateAIEnded(ai AIRobot) : void in class buildcraft.robotics.boards.BoardRobotDelivery"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(i int, stack ItemStack) : ItemStack in class buildcraft.robotics.TileRequester"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public provideItemsForRequest(i int, stack ItemStack) : ItemStack renamed to public offerItem(slot int, stack ItemStack) : ItemStack in class buildcraft.builders.TileBuilder"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.builders.TileBuilder"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public getNumberOfRequests() : int renamed to public getRequestsCount() : int in class buildcraft.robotics.TileRequester"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public getAvailableRequest(i int) : StackRequest renamed to public getRequest(slot int) : ItemStack in class buildcraft.builders.TileBuilder"
		}
	],
	"time": "7/17/15 8:32 AM",
	"id": 1143517
}, {
	"sha1": "ab1d1dd78fe53edb50c4ede447e4ac5a55ee2ac9",
	"repository": "https://github.com/apache/camel.git",
	"author": "jkorab",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public createExchange(message Message, endpoint Endpoint, keyFormatStrategy KeyFormatStrategy) : Exchange extracted from public createExchange(message Message, endpoint Endpoint) : Exchange in class org.apache.camel.component.sjms.jms.JmsMessageHelper"
	}],
	"time": "7/17/15 9:56 AM",
	"id": 1143666
}, {
	"sha1": "d4b4aecbc69bbd04ba87c4e32a52cff3d129906a",
	"repository": "https://github.com/xetorthio/jedis.git",
	"author": "Jay Anderson",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private poolInactive() : boolean extracted from public getNumActive() : int in class redis.clients.util.Pool"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private poolInactive() : boolean extracted from public getNumWaiters() : int in class redis.clients.util.Pool"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private poolInactive() : boolean extracted from public getNumIdle() : int in class redis.clients.util.Pool"
	}],
	"time": "7/17/15 9:00 PM",
	"id": 1144689
}, {
	"sha1": "dc199688d69416da58b370ca2aa728e935fc8e0d",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Stefan Plantikow",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getSortedIndexUpdates(descriptor IndexDescriptor) : TreeMap<DefinedProperty,DiffSets<Long>> extracted from private getIndexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method public shouldComputeIndexUpdatesOnAnEmptyTxState() : void renamed to public shouldComputeIndexUpdatesForScanOrSeekOnAnEmptyTxState() : void in class org.neo4j.kernel.impl.api.state.TxStateTest"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method private getIndexUpdates(label int, propertyKeyId int) : DiffSets renamed to private getIndexUpdatesForScanOrSeek(label int, propertyKeyId int) : DiffSets in class org.neo4j.kernel.impl.api.state.TxState"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method private getIndexUpdates(label int, create boolean, property DefinedProperty) : DiffSets renamed to private getIndexUpdatesForScanOrSeek(label int, create boolean, property DefinedProperty) : DiffSets in class org.neo4j.kernel.impl.api.state.TxState"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method private filterIndexStateChanges(state KernelStatement, index IndexDescriptor, value Object, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator renamed to private filterIndexStateChangesForScanOrSeek(state KernelStatement, index IndexDescriptor, value Object, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method private filterIndexStateChangesForPrefix(state KernelStatement, index IndexDescriptor, prefix String, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator renamed to private filterIndexStateChangesForRangeSeekByPrefix(state KernelStatement, index IndexDescriptor, prefix String, nodeIds PrimitiveLongIterator) : PrimitiveLongIterator in class org.neo4j.kernel.impl.api.StateHandlingStatementOperations"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method public indexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> renamed to public indexUpdatesForRangeSeekByPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method public indexUpdates(descriptor IndexDescriptor, value Object) : ReadableDiffSets<Long> renamed to public indexUpdatesForScanOrSeek(descriptor IndexDescriptor, value Object) : ReadableDiffSets<Long> in class org.neo4j.kernel.impl.api.state.TxState"
	},
	{
		"type": "Rename Method",
		"description": "Rename Method private getIndexUpdatesForPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets renamed to private getIndexUpdatesForRangeSeekByPrefix(descriptor IndexDescriptor, prefix String) : ReadableDiffSets in class org.neo4j.kernel.impl.api.state.TxState"
	}],
	"time": "7/20/15 6:24 AM",
	"id": 1144559
}, {
	"sha1": "3855f0ca82795f7481b34342c7d9e5644a1d42c3",
	"repository": "https://github.com/ignatov/intellij-erlang.git",
	"author": "Olya Telezhnaya",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private getModuleFileName() : String inlined to public resolve() : PsiElement in class org.intellij.erlang.psi.impl.ErlangFunctionReferenceImpl"
	}],
	"time": "7/20/15 6:26 AM",
	"id": 1145010
}, {
	"sha1": "14a7dd79148f9306dcd2f748b56fd6550e9406ab",
	"repository": "https://github.com/apache/camel.git",
	"author": "Grzegorz Grzybek",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String extracted from public prepareDataFormat(log Log, project MavenProject, projectHelper MavenProjectHelper, dataFormatOutDir File, schemaOutDir File, buildContext BuildContext) : void in class org.apache.camel.maven.packaging.PackageDataFormatMojo"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private readClassFromCamelResource(file File, buffer StringBuilder, buildContext BuildContext) : String extracted from public prepareLanguage(log Log, project MavenProject, projectHelper MavenProjectHelper, languageOutDir File, schemaOutDir File, buildContext BuildContext) : void in class org.apache.camel.maven.packaging.PackageLanguageMojo"
	}],
	"time": "7/20/15 9:51 AM",
	"id": 1145557
}, {
	"sha1": "e6cb12dfe414497b4317820497985c110cb81864",
	"repository": "https://github.com/siacs/Conversations.git",
	"author": "Raphael Pohl",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getItemViewType(message Message) : int extracted from public getItemViewType(position int) : int in class eu.siacs.conversations.ui.adapter.MessageAdapter"
	}],
	"time": "7/20/15 11:02 AM",
	"id": 1144806
}, {
	"sha1": "1b70adbfd49e00194c4c1170ef65e8114d7a2e46",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "peter",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getFieldInitializerNullness(expression PsiExpression) : Nullness extracted from private calcInherentNullability() : Nullness in class com.intellij.codeInspection.dataFlow.value.DfaVariableValue"
	}],
	"time": "7/20/15 12:20 PM",
	"id": 1144393
}, {
	"sha1": "484b7cb0d20ec8f7c3b0d9eaf9e3f93468cec88c",
	"repository": "https://github.com/facebook/presto.git",
	"author": "David Phillips",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class TestJmxSplitManager moved from com.facebook.presto.split to com.facebook.presto.connector.jmx"
	}],
	"time": "7/20/15 1:54 PM",
	"id": 1144535
}, {
	"sha1": "1eb3b624b288a4b1a054420d3efb05b8f1d28517",
	"repository": "https://github.com/jline/jline2.git",
	"author": "Guillaume Nodet",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public wcwidth(cs CharSequence) : int from class jline.console.WCWidth to class jline.console.ConsoleReader"
	}],
	"time": "7/20/15 2:41 PM",
	"id": 1144626
}, {
	"sha1": "d6d9dd4365387816fda6987a4ad9b679c27e72a3",
	"repository": "https://github.com/greenrobot/greenDAO.git",
	"author": "Markus",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class de.greenrobot.dao.PropertyConverter moved to de.greenrobot.dao.converter.PropertyConverter"
	}],
	"time": "7/20/15 5:25 PM",
	"id": 1144604
}, {
	"sha1": "3ffd70929c08be5cf14f156189e8050969caa87e",
	"repository": "https://github.com/spotify/helios.git",
	"author": "Ryan Culbertson",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private isRolloutTimedOut(deploymentGroup DeploymentGroup, client ZooKeeperClient) : boolean extracted from private rollingUpdateAwaitRunning(deploymentGroup DeploymentGroup, host String) : RollingUpdateTaskResult in class com.spotify.helios.master.ZooKeeperMasterModel"
	}],
	"time": "7/20/15 6:04 PM",
	"id": 1144794
}, {
	"sha1": "b70f7ea0ce27b5defa0a7773d448732364e7aee0",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Paulo Motta",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private listSnapshots() : List<File> extracted from public getSnapshotDetails() : Map<String,Pair<Long,Long>> in class org.apache.cassandra.db.Directories"
	}],
	"time": "7/22/15 12:11 AM",
	"id": 1148572
}, {
	"sha1": "ef2a0d63393484975854fc08ad0fd3abc7dd76b0",
	"repository": "https://github.com/spring-projects/spring-data-neo4j.git",
	"author": "Luanne Misquitta",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class Person moved from org.springframework.data.neo4j.examples.friends to org.springframework.data.neo4j.examples.friends.domain"
	}, {
		"type": "Move Class",
		"description": "Move Class Friendship moved from org.springframework.data.neo4j.examples.friends to org.springframework.data.neo4j.examples.friends.domain"
	}, {
		"type": "Move Class",
		"description": "Move Class FriendContext moved from org.springframework.data.neo4j.examples.friends to org.springframework.data.neo4j.examples.friends.context"
	}],
	"time": "7/22/15 6:08 AM",
	"id": 1149047
}, {
	"sha1": "4beba7bbdf927486a5cbf298a0fb2be50905a590",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "lutovich",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.neo4j.kernel.impl.store.PropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.PropertyConstraintRule"
	}, {
		"type": "Move Class",
		"description": "Move Class org.neo4j.kernel.impl.store.RelationshipPropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.RelationshipPropertyConstraintRule"
	}, {
		"type": "Move Class",
		"description": "Move Class org.neo4j.kernel.impl.store.NodePropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.NodePropertyConstraintRule"
	}, {
		"type": "Move Class",
		"description": "Move Class org.neo4j.kernel.impl.store.UniquePropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.UniquePropertyConstraintRule"
	}, {
		"type": "Move Class",
		"description": "Move Class org.neo4j.kernel.impl.store.MandatoryRelationshipPropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.MandatoryRelationshipPropertyConstraintRule"
	}, {
		"type": "Move Class",
		"description": "Move Class org.neo4j.kernel.impl.store.MandatoryNodePropertyConstraintRule moved to org.neo4j.kernel.impl.store.record.MandatoryNodePropertyConstraintRule"
	}],
	"time": "7/22/15 7:06 AM",
	"id": 1147092
}, {
	"sha1": "ee5aa50af6b4586fbe92cab718abfae8113a81aa",
	"repository": "https://github.com/jersey/jersey.git",
	"author": "Petr Bouda",
	"refactorings": [{
		"type": "Move Class",
		"description":"Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.NorwegianGoodbyeService moved to org.glassfish.jersey.examples.hello.spring.annotations.NorwegianGoodbyeService"
	},
{
		"type": "Move Class",
		"description":"Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.JerseyConfig moved to org.glassfish.jersey.examples.hello.spring.annotations.JerseyConfig"
	},
{
		"type": "Move Class",
		"description":"Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.EnglishGoodbyeService moved to org.glassfish.jersey.examples.hello.spring.annotations.EnglishGoodbyeService"
	},
{
		"type": "Move Class",
		"description":"Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.SpringRequestResourceTest moved to org.glassfish.jersey.examples.hello.spring.annotations.SpringRequestResourceTest"
	},
{
		"type": "Move Class",
		"description":"Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.GoodbyeService moved to org.glassfish.jersey.examples.hello.spring.annotations.GoodbyeService"
	},
{
		"type": "Move Class",
		"description":"Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.SpringAnnotationConfig moved to org.glassfish.jersey.examples.hello.spring.annotations.SpringAnnotationConfig"
	},
{
		"type": "Move Class",
		"description":"Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.SpringRequestResource moved to org.glassfish.jersey.examples.hello.spring.annotations.SpringRequestResource"
	},
{
		"type": "Move Class",
		"description":"Move Class org.glassfish.jersey.examples.hello.spring.annotations.annotations.GreetingService moved to org.glassfish.jersey.examples.hello.spring.annotations.GreetingService"
	}],
	"time": "7/22/15 12:37 PM",
	"id": 1147835
}, {
	"sha1": "687bda5a3ea1b5daae2764653843d318c77f4590",
	"repository": "https://github.com/spotify/helios.git",
	"author": "David Xia",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute public KAFKA_TOPIC : String from class com.spotify.helios.agent.TaskHistoryWriter to class com.spotify.helios.common.descriptors.TaskStatusEvent"
	}],
	"time": "7/22/15 2:35 PM",
	"id": 1147574
}, {
	"sha1": "c53c6f45988db869d56abe3b1d831ff775f4fa73",
	"repository": "https://github.com/apache/hive.git",
	"author": "Alan Gates",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private statsForOneColumnFromProtoBuf(partitionColumnStats ColumnStatistics, proto ColumnStats) : ColumnStatisticsObj extracted from package deserializeStatsForOneColumn(partitionColumnStats ColumnStatistics, bytes byte[]) : ColumnStatisticsObj in class org.apache.hadoop.hive.metastore.hbase.HBaseUtils"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private protoBufStatsForOneColumn(partitionColumnStats ColumnStatistics, colStats ColumnStatisticsObj) : ColumnStats extracted from package serializeStatsForOneColumn(partitionColumnStats ColumnStatistics, colStats ColumnStatisticsObj) : byte[] in class org.apache.hadoop.hive.metastore.hbase.HBaseUtils"
	}],
	"time": "7/22/15 3:17 PM",
	"id": 1149562
}, {
	"sha1": "69c229b7611ff8c6a20ff2d4da917a68c1cde64a",
	"repository": "https://github.com/Atmosphere/atmosphere.git",
	"author": "jfarcand",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private getInheritedPrivateFields(type Class) : Set from class org.atmosphere.inject.InjectableObjectFactory to public getInheritedPrivateFields(type Class) : Set from class org.atmosphere.util.Utils"
	}],
	"time": "7/22/15 3:38 PM",
	"id": 1149312
}, {
	"sha1": "e1aa31cff985e2a0c2babf4da96dc0a538d5e514",
	"repository": "https://github.com/querydsl/querydsl.git",
	"author": "Timo Westk\u00e4mper",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private escapeLiteral(str String) : String from class com.querydsl.jpa.JPQLSerializer to class com.querydsl.jpa.JPQLTemplates"
	}],
	"time": "7/22/15 5:03 PM",
	"id": 1146882
}, {
	"sha1": "6ff3fe00d7ffe04dbe0904b8bad98285b6988d6d",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Nikolay Mikhaylov",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven30ServerEmbedderImpl to public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List from class org.jetbrains.idea.maven.server.Maven3ServerEmbedder"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List<String> from class org.jetbrains.idea.maven.server.Maven32ServerEmbedderImpl to public retrieveAvailableVersions(groupId String, artifactId String, remoteRepositoryUrl String) : List from class org.jetbrains.idea.maven.server.Maven3ServerEmbedder"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public customizeComponents() : void extracted from public customize(workspaceMap MavenWorkspaceMap, failOnUnresolvedDependency boolean, console MavenServerConsole, indicator MavenServerProgressIndicator, alwaysUpdateSnapshots boolean) : void in class org.jetbrains.idea.maven.server.Maven32ServerEmbedderImpl"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public customizeComponents() : void extracted from public customize(workspaceMap MavenWorkspaceMap, failOnUnresolvedDependency boolean, console MavenServerConsole, indicator MavenServerProgressIndicator, alwaysUpdateSnapshots boolean) : void in class org.jetbrains.idea.maven.server.Maven30ServerEmbedderImpl"
	}],
	"time": "7/23/15 3:21 AM",
	"id": 1146490
}, {
	"sha1": "2b0a8f6bdac621badabcb9921c077260f2470c26",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Sylvain Lebresne",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public deleteRowAt(metadata CFMetaData, timestamp long, localDeletionTime int, key Object, clusteringValues Object[]) : Mutation extracted from public deleteRow(metadata CFMetaData, timestamp long, key Object, clusteringValues Object[]) : Mutation in class org.apache.cassandra.db.RowUpdateBuilder"
	}],
	"time": "7/23/15 4:00 AM",
	"id": 1148565
}, {
	"sha1": "33b0ac3a029845f9c20f7f5967c03b31b24f3b4b",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Dennis Ushakov",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method private iterateRecursively(root VirtualFile, processor ContentIterator, indicator ProgressIndicator, visitedRoots Set<VirtualFile>, projectFileIndex ProjectFileIndex) : void from class com.intellij.util.indexing.FileBasedIndexImpl to public iterateRecursively(root VirtualFile, processor ContentIterator, indicator ProgressIndicator, visitedRoots Set<VirtualFile>, projectFileIndex ProjectFileIndex) : void from class com.intellij.util.indexing.FileBasedIndex"
	}],
	"time": "7/23/15 6:15 AM",
	"id": 1146483
}, {
	"sha1": "4c6ab3d77cc67c7a91155d884077520dcf1509c6",
	"repository": "https://github.com/dropwizard/metrics.git",
	"author": "Cirrus Pairing Station 5",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private closeGraphiteConnection() : void extracted from public report(gauges SortedMap<String,Gauge>, counters SortedMap<String,Counter>, histograms SortedMap<String,Histogram>, meters SortedMap<String,Meter>, timers SortedMap<String,Timer>) : void in class com.codahale.metrics.graphite.GraphiteReporter"
	}],
	"time": "7/23/15 8:02 AM",
	"id": 1147348
}, {
	"sha1": "4712de476aabe69cd762233c9641dd3cf9f8361b",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Anton Persson",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityBase from class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected runInternalArnoldi(iterations int) : int renamed to protected runInternalIteration() : int in class org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityArnoldi"
	}],
	"time": "7/23/15 10:19 AM",
	"id": 1149802
}, {
	"sha1": "681dc6346ce3cf5be5c5985faad120a18949cee0",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Darrell DeBoer",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createPlatformToolProvider(targetPlatform NativePlatformInternal) : PlatformToolProvider extracted from public select(targetPlatform NativePlatformInternal) : PlatformToolProvider in class org.gradle.nativeplatform.toolchain.internal.gcc.AbstractGccCompatibleToolChain"
	}],
	"time": "7/23/15 5:53 PM",
	"id": 1148642
}, {
	"sha1": "f61db44ca4a862f1a84450643d92f85449016cfa",
	"repository": "https://github.com/linkedin/rest.li.git",
	"author": "Keren Jin",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public generate(schema DataSchema) : ClassTemplateSpec inlined to private generateRecord(schema RecordDataSchema) : RecordTemplateSpec in class com.linkedin.pegasus.generator.TemplateSpecGenerator"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getSchemaAndNames() : Collection<CodeUtil.Pair<DataSchema, String>> renamed to public getSchemaAndLocations() : Collection<CodeUtil.Pair<DataSchema, DataSchemaLocation>> in class com.linkedin.pegasus.generator.DataSchemaParser.ParseResult"
	}],
	"time": "7/23/15 6:42 PM",
	"id": 1147644
}, {
	"sha1": "d0e374ce8ecb687b4dc046d1edea9e52da17706f",
	"repository": "https://github.com/jenkinsci/workflow-plugin.git",
	"author": "Jesse Glick",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute package SCRIPT : String from class org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory to class org.jenkinsci.plugins.workflow.multibranch.WorkflowMultiBranchProject"
	}, {
		"type": "Inline Method",
		"description": "Inline Method private setBranch(property BranchJobProperty, branch Branch, project WorkflowJob) : void inlined to public setBranch(project WorkflowJob, branch Branch) : WorkflowJob in class org.jenkinsci.plugins.workflow.multibranch.WorkflowBranchProjectFactory"
	}],
	"time": "7/23/15 7:24 PM",
	"id": 1148739
}, {
	"sha1": "9fbf6b852bd9766060307aff960fb597d55e24d3",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Maxim.Mossienko",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public clear() : void extracted from public close() : void in class com.intellij.util.io.CachingEnumerator"
	}],
	"time": "7/23/15 8:06 PM",
	"id": 1146445
}, {
	"sha1": "1ef86e69d5a108c2b4d836b0634ebdea912cfe00",
	"repository": "https://github.com/robovm/robovm.git",
	"author": "Niklas Therning",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.robovm.compiler.plugin.lambda2 to org.robovm.compiler.plugin.lambda"
	}],
	"time": "7/24/15 5:48 AM",
	"id": 1148821
}, {
	"sha1": "5790b4a44ba85e7e8ece64613d9e6a1b737a6cde",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Robert Stupp",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected compose(argDataTypes DataType[], protocolVersion int, argIndex int, value ByteBuffer) : Object extracted from protected compose(protocolVersion int, argIndex int, value ByteBuffer) : Object in class org.apache.cassandra.cql3.functions.UDFunction"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected decompose(dataType DataType, protocolVersion int, value Object) : ByteBuffer extracted from protected decompose(protocolVersion int, value Object) : ByteBuffer in class org.apache.cassandra.cql3.functions.UDFunction"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.apache.cassandra.cql3.functions.JavaSourceUDFFactory renamed to org.apache.cassandra.cql3.functions.JavaBasedUDFunction"
	}],
	"time": "7/24/15 6:37 AM",
	"id": 1148549
}, {
	"sha1": "a1525ac9a0bb8f727167a8be94c81a3415128ef4",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Al Sutton",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getAllPathsWork(workingDir Path) : ImmutableBiMap<Path,Path> extracted from private getAllPaths(workingDir Optional<Path>) : ImmutableBiMap<Path,Path> in class com.facebook.buck.cxx.DebugPathSanitizer"
	}],
	"time": "7/24/15 7:16 AM",
	"id": 1147466
}, {
	"sha1": "3514aaedf9624222c985cb3abb12df2d9b514b12",
	"repository": "https://github.com/PhilJay/MPAndroidChart.git",
	"author": "Philipp Jahoda",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.github.mikephil.charting.utils.Highlight moved to com.github.mikephil.charting.highlight.Highlight"
	}, {
		"type": "Rename Class",
		"description": "Rename Class com.github.mikephil.charting.interfaces.BarLineScatterCandleDataProvider renamed to com.github.mikephil.charting.interfaces.BarLineScatterCandleBubbleDataProvider"
	}],
	"time": "7/24/15 8:11 AM",
	"id": 1147051
}, {
	"sha1": "b6565814805dfb2d989be25c11d4fb4cf8fb1d84",
	"repository": "https://github.com/RoboBinding/RoboBinding.git",
	"author": "weicheng113",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package org.robobinding.codegen.presentationmodel.nestedIPMexample to org.robobinding.codegen.presentationmodel.nestedIPM"
	}],
	"time": "7/24/15 8:26 AM",
	"id": 1147192
}, {
	"sha1": "db024f5ec3e9611ddf8103bdc4c3817c704f7b27",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Miguel Augusto Pereira de Oliveira",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getTargetsAndDependencies(params CommandRunnerParams, argumentsFormattedAsBuildTargets List<String>, showTransitive boolean, showTests boolean, enableProfiling boolean) : Multimap<BuildTarget,BuildTarget> extracted from public runWithoutHelp(params CommandRunnerParams) : int in class com.facebook.buck.cli.AuditDependenciesCommand"
	}],
	"time": "7/24/15 9:44 AM",
	"id": 1147442
}, {
	"sha1": "0df7cb00757fe0d4fac8d8b0d5fc46af95feb238",
	"repository": "https://github.com/JetBrains/intellij-plugins.git",
	"author": "Konstantin Shcheglov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public findPsiFile(project Project, path String) : PsiFile extracted from private getElementForNavigationTarget(project Project, target PluginNavigationTarget) : PsiElement in class com.jetbrains.lang.dart.resolve.DartResolver"
	}],
	"time": "7/24/15 1:06 PM",
	"id": 1146679
}, {
	"sha1": "7dd55014f9840ce03867bb175cf37a4c151dc806",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Sergey Malenkov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createConfigurable(ep ConfigurableEP<T>, log boolean) : T extracted from public wrapConfigurable(ep ConfigurableEP<T>) : T in class com.intellij.openapi.options.ex.ConfigurableWrapper"
	}],
	"time": "7/24/15 1:53 PM",
	"id": 1146371
}, {
	"sha1": "31fc19200207ccadc45328037d8a2a62b617c029",
	"repository": "https://github.com/google/guava.git",
	"author": "bul",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private digit(c char) : int from class com.google.common.primitives.Ints to private digit(c char) : int from class com.google.common.primitives.Longs"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public tryParse(string String, radix int) : Long extracted from public tryParse(string String) : Long in class com.google.common.primitives.Longs"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private asciiDigits : byte[] from class com.google.common.primitives.Ints to class com.google.common.primitives.Longs"
	}],
	"time": "7/24/15 2:38 PM",
	"id": 1147651
}, {
	"sha1": "92e98858e742bbb669ccbf790a71a618c581df21",
	"repository": "https://github.com/apache/hive.git",
	"author": "Alan Gates",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public use(ctx ParserRuleContext, sql String) : Integer extracted from public use(ctx Use_stmtContext) : Integer in class org.apache.hive.hplsql.Stmt"
	}],
	"time": "7/24/15 2:43 PM",
	"id": 1149551
}, {
	"sha1": "6905d569a1e39d0d7b1ec5ceee4f0bbe60b85947",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "liana.bakradze",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface com.jetbrains.edu.courseFormat.Named from class com.jetbrains.edu.courseFormat.Lesson"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface com.jetbrains.edu.courseFormat.Named from class com.jetbrains.edu.courseFormat.Task"
	}],
	"time": "7/24/15 4:28 PM",
	"id": 1149690
}, {
	"sha1": "573a1d115b86abbe3fb53ff930464d7d8fd95600",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Brandon Williams",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public incrementDroppedMessages(verb Verb, isCrossNodeTimeout boolean) : void extracted from public incrementDroppedMessages(verb Verb) : void in class org.apache.cassandra.net.MessagingService"
	}, {
		"type": "Extract Method",
		"description": "Extract Method package getDroppedMessagesLogs() : List<String> extracted from private logDroppedMessages() : void in class org.apache.cassandra.net.MessagingService"
	}],
	"time": "7/24/15 5:41 PM",
	"id": 1150188
}, {
	"sha1": "2f7481ee4e20ae785298c31ec2f979752dd7eb03",
	"repository": "https://github.com/checkstyle/checkstyle.git",
	"author": "liscju",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private checkInterfaceModifiers(ast DetailAST) : void extracted from public visitToken(ast DetailAST) : void in class com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck"
	}],
	"time": "7/25/15 1:14 AM",
	"id": 1150162
}, {
	"sha1": "021d17c8234904dcb1d54596662352395927fe7b",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Rickard O?berg",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private singlePropertyCursor : InstanceCache from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private allPropertyCursor : InstanceCache from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Move Method",
		"description": "Move Method private nodeDegreeByDirection(nodeId long, group RelationshipGroupRecord, direction Direction) : long from class org.neo4j.kernel.impl.api.store.DiskLayer to private nodeDegreeByDirection(group RelationshipGroupRecord, direction Direction) : long from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Move Class",
		"description": "Move Class org.neo4j.kernel.impl.api.store.DiskLayer.AllStoreIdIterator moved to org.neo4j.kernel.impl.api.store.StoreStatement.AllStoreIdIterator"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private singleLabelCursor : InstanceCache from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Move Method",
		"description": "Move Method public nodesGetAllCursor(statement StoreStatement) : Cursor from class org.neo4j.kernel.impl.api.store.DiskLayer to class org.neo4j.kernel.impl.api.store.StoreStatement"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode1(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private assertHasRelationships(node long) : void extracted from private deleteNode2(node long, prop1 DefinedProperty, prop2 DefinedProperty, prop3 DefinedProperty) : void in class org.neo4j.kernel.impl.store.TestNeoStore"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute package GET_LABEL : ToIntFunction from class org.neo4j.kernel.api.cursor.LabelItem to class org.neo4j.kernel.api.cursor.NodeItem"
	}, {
		"type": "Move Method",
		"description": "Move Method private directionOf(nodeId long, relationshipId long, startNode long, endNode long) : Direction from class org.neo4j.kernel.impl.api.store.DiskLayer to private directionOf(nodeId long, relationshipId long, startNode long, endNode long) : Direction from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private singlePropertyCursor : InstanceCache from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private allPropertyCursor : InstanceCache from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor"
	}, {
		"type": "Move Method",
		"description": "Move Method private countByFirstPrevPointer(nodeId long, relationshipId long) : long from class org.neo4j.kernel.impl.api.store.DiskLayer to private countByFirstPrevPointer(relationshipId long) : long from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private labelCursor : InstanceCache from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private nodeRelationshipCursor : InstanceCache from class org.neo4j.kernel.impl.api.store.StoreStatement to class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper from class org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.kernel.api.cursor.EntityItem.EntityItemHelper from class org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.kernel.api.cursor.EntityItem.EntityItemHelper from class org.neo4j.kernel.impl.api.cursor.TxAbstractRelationshipCursor"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.neo4j.kernel.api.cursor.NodeItem.NodeItemHelper from class org.neo4j.kernel.impl.api.cursor.TxAbstractNodeCursor"
	}],
	"time": "7/25/15 7:28 AM",
	"id": 1149799
}, {
	"sha1": "11048642b1e6b0e35efefab9e4e693b09c8753f5",
	"repository": "https://github.com/facebook/presto.git",
	"author": "Dain Sundstrom",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private formatDomain(table TableHandle, column ColumnHandle, domain Domain) : String from class com.facebook.presto.sql.planner.PlanPrinter to private formatDomain(table TableHandle, column ColumnHandle, domain Domain) : String from class com.facebook.presto.sql.planner.PlanPrinter.Visitor"
	}, {
		"type": "Move Method",
		"description": "Move Method private printConstraint(indent int, table TableHandle, column ColumnHandle, constraint TupleDomain) : void from class com.facebook.presto.sql.planner.PlanPrinter to private printConstraint(indent int, table TableHandle, column ColumnHandle, constraint TupleDomain) : void from class com.facebook.presto.sql.planner.PlanPrinter.Visitor"
	}],
	"time": "7/25/15 2:59 PM",
	"id": 1149788
}, {
	"sha1": "2d8d4164830631d3125575f055b417c5addaa22f",
	"repository": "https://github.com/skylot/jadx.git",
	"author": "Skylot",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public getJavaNodeAtPosition(line int, offset int) : JavaNode extracted from public getDefinitionPosition(line int, offset int) : CodePosition in class jadx.api.JavaClass"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public getDefinitionPosition(javaNode JavaNode) : CodePosition extracted from public getDefinitionPosition(line int, offset int) : CodePosition in class jadx.api.JavaClass"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public length() : int renamed to public bufLength() : int in class jadx.core.codegen.CodeWriter"
	}],
	"time": "7/26/15 11:19 AM",
	"id": 1150361
}, {
	"sha1": "d7675fb0b19d3d22978e79954f441eeefd74a3b2",
	"repository": "https://github.com/wildfly/wildfly.git",
	"author": "sdirbach",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private handleExcludeMethods(componentDescription EJBComponentDescription, excludeList ExcludeListMetaData) : void extracted from protected handleDeploymentDescriptor(deploymentUnit DeploymentUnit, deploymentReflectionIndex DeploymentReflectionIndex, componentClass Class<?>, componentDescription EJBComponentDescription) : void in class org.jboss.as.ejb3.deployment.processors.merging.MethodPermissionsMergingProcessor"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private handleMethodPermissions(componentDescription EJBComponentDescription, methodPermissions MethodPermissionsMetaData) : void extracted from protected handleDeploymentDescriptor(deploymentUnit DeploymentUnit, deploymentReflectionIndex DeploymentReflectionIndex, componentClass Class<?>, componentDescription EJBComponentDescription) : void in class org.jboss.as.ejb3.deployment.processors.merging.MethodPermissionsMergingProcessor"
	}],
	"time": "7/26/15 5:51 PM",
	"id": 1151684
}, {
	"sha1": "03ece4f24163204d8a3948eb53576f1feaa86a61",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Chris Vest",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private fileLock : FileLock from class org.neo4j.kernel.impl.store.CommonAbstractStore to class org.neo4j.io.pagecache.impl.SingleFilePageSwapper"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private fileLock : FileLock from class org.neo4j.kernel.impl.store.standard.StoreOpenCloseCycle to class org.neo4j.io.pagecache.impl.SingleFilePageSwapper"
	}, {
		"type": "Rename Method",
		"description": "Rename Method protected releaseFileLockAndCloseFileChannel() : void renamed to protected closeFileChannel() : void in class org.neo4j.kernel.impl.store.CommonAbstractStore"
	}],
	"time": "7/27/15 6:06 AM",
	"id": 1150670
}, {
	"sha1": "f25fa3ae35e4a60a2b7f79a88f14d46ce6cebf55",
	"repository": "https://github.com/openhab/openhab.git",
	"author": "Thomas Eichst\u00e4dt-Engelen",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private initTimeMap() : Map<String,Integer> extracted from public parameters() : Collection<Object[]> in class org.openhab.core.library.types.DateTimeTypeTest"
	}],
	"time": "7/27/15 7:48 AM",
	"id": 1150588
}, {
	"sha1": "e4a309c160285708f917ea23238573da3b677f7f",
	"repository": "https://github.com/selendroid/selendroid.git",
	"author": "Viacheslav Frolov",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected toByteArray(image BufferedImage) : byte[] extracted from public takeScreenshot() : byte[] in class io.selendroid.standalone.android.impl.AbstractDevice"
	}],
	"time": "7/27/15 8:36 AM",
	"id": 1151109
}, {
	"sha1": "227254cf769f3e821ed1b2ef2d88c4ec6b20adea",
	"repository": "https://github.com/jOOQ/jOOQ.git",
	"author": "lukaseder",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(stream OutputStream, header boolean) : void extracted from public formatCSV(stream OutputStream) : void in class org.jooq.impl.ResultImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(writer Writer, header boolean) : void extracted from public formatCSV(writer Writer) : void in class org.jooq.impl.ResultImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(header boolean) : String extracted from public formatCSV() : String in class org.jooq.impl.ResultImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(header boolean, delimiter char, nullString String) : String extracted from public formatCSV(delimiter char, nullString String) : String in class org.jooq.impl.ResultImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(header boolean, delimiter char) : String extracted from public formatCSV(delimiter char) : String in class org.jooq.impl.ResultImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(writer Writer, header boolean, delimiter char) : void extracted from public formatCSV(writer Writer, delimiter char) : void in class org.jooq.impl.ResultImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(stream OutputStream, header boolean, delimiter char, nullString String) : void extracted from public formatCSV(stream OutputStream, delimiter char, nullString String) : void in class org.jooq.impl.ResultImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(writer Writer, header boolean, delimiter char, nullString String) : void extracted from public formatCSV(writer Writer, delimiter char, nullString String) : void in class org.jooq.impl.ResultImpl"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public formatCSV(stream OutputStream, header boolean, delimiter char) : void extracted from public formatCSV(stream OutputStream, delimiter char) : void in class org.jooq.impl.ResultImpl"
		}

	],
	"time": "7/27/15 10:32 AM",
	"id": 1150845
}, {
	"sha1": "0ef66582ffaba9a8df1cad846880df2074d34505",
	"repository": "https://github.com/eclipse/vert.x.git",
	"author": "Julien Viet",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public ClientOptionsBase(json JsonObject) in class io.vertx.core.net.ClientOptionsBase"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public TCPSSLOptions(json JsonObject) in class io.vertx.core.net.TCPSSLOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public NetClientOptions(json JsonObject) in class io.vertx.core.net.NetClientOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public NetClientOptions() in class io.vertx.core.net.NetClientOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public NetServerOptions(json JsonObject) in class io.vertx.core.net.NetServerOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public NetServerOptions() in class io.vertx.core.net.NetServerOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public HttpClientOptions(json JsonObject) in class io.vertx.core.http.HttpClientOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public HttpClientOptions() in class io.vertx.core.http.HttpClientOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public HttpServerOptions(json JsonObject) in class io.vertx.core.http.HttpServerOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public HttpServerOptions() in class io.vertx.core.http.HttpServerOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public TCPSSLOptions() in class io.vertx.core.net.TCPSSLOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public NetClientOptions() in class io.vertx.core.net.NetClientOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public HttpClientOptions() in class io.vertx.core.http.HttpClientOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public NetServerOptions() in class io.vertx.core.net.NetServerOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public HttpServerOptions() in class io.vertx.core.http.HttpServerOptions"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private init() : void extracted from public ClientOptionsBase() in class io.vertx.core.net.ClientOptionsBase"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public setDSync(dsync boolean) : OpenOptions renamed to public setDsync(dsync boolean) : OpenOptions in class io.vertx.core.file.OpenOptions"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public setWebsocketSubProtocol(subProtocols String) : HttpServerOptions renamed to public setWebsocketSubProtocols(subProtocols String) : HttpServerOptions in class io.vertx.core.http.HttpServerOptions"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public isDSync() : boolean renamed to public isDsync() : boolean in class io.vertx.core.file.OpenOptions"
		}
	],
	"time": "7/27/15 10:38 AM",
	"id": 1152344
}, {
	"sha1": "f1e26fa73074a89680a2e1756d85eb80ad87c3bf",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "Jaromir Hamala",
	"refactorings": [ {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.RegexPredicate moved to com.hazelcast.query.impl.predicates.RegexPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.OrPredicate moved to com.hazelcast.query.impl.predicates.OrPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.EqualPredicate moved to com.hazelcast.query.impl.predicates.EqualPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.InstanceOfPredicate moved to com.hazelcast.query.impl.predicates.InstanceOfPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.NotPredicate moved to com.hazelcast.query.impl.predicates.NotPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.GreaterLessPredicate moved to com.hazelcast.query.impl.predicates.GreaterLessPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.AndPredicate moved to com.hazelcast.query.impl.predicates.AndPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.LikePredicate moved to com.hazelcast.query.impl.predicates.LikePredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.BetweenPredicate moved to com.hazelcast.query.impl.predicates.BetweenPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.InPredicate moved to com.hazelcast.query.impl.predicates.InPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.AbstractPredicate moved to com.hazelcast.query.impl.predicates.AbstractPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.NotEqualPredicate moved to com.hazelcast.query.impl.predicates.NotEqualPredicate"
	},
 {
		"type": "Move Class",
		"description":"Move Class com.hazelcast.query.Predicates.ILikePredicate moved to com.hazelcast.query.impl.predicates.ILikePredicate"
	}],
	"time": "7/27/15 10:56 AM",
	"id": 1150594
}, {
	"sha1": "4ccc0c37aabbd90ecaa36fcc491e2270e7e9bea6",
	"repository": "https://github.com/apache/hive.git",
	"author": "Sushanth Sowmyan",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private restoreLocalInfoFromTableInfo() : void extracted from package setTableInfo(thatTableInfo HCatTableInfo) : void in class org.apache.hive.hcatalog.mapreduce.PartInfo"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private restoreLocalInfoFromTableInfo() : void extracted from private writeObject(oos ObjectOutputStream) : void in class org.apache.hive.hcatalog.mapreduce.PartInfo"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private dedupWithTableInfo() : void extracted from private writeObject(oos ObjectOutputStream) : void in class org.apache.hive.hcatalog.mapreduce.PartInfo"
	}],
	"time": "7/27/15 1:29 PM",
	"id": 1151360
}, {
	"sha1": "03ade425dd5a65d3a713d5e7d85aa7605956fbd2",
	"repository": "https://github.com/apache/giraph.git",
	"author": "Hassan Eslami",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private edgeStore : EdgeStore from class org.apache.giraph.comm.ServerData to class org.apache.giraph.partition.SimplePartitionStore"
	}],
	"time": "7/27/15 4:20 PM",
	"id": 1151028
}, {
	"sha1": "c1359c843bd03a694f846c8140e24ed646bbb913",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Huzefa Hakimi",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createSchema(config Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void extracted from public testBasicCreateIndex() : void in class org.voltdb.TestAdhocCreateDropIndex"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createSchema(config Configuration, ddl String, sitesPerHost int, hostCount int, replication int) : void extracted from public testCreateDropIndexonView() : void in class org.voltdb.TestAdhocCreateDropIndex"
	}],
	"time": "7/27/15 7:07 PM",
	"id": 1150432
}, {
	"sha1": "545a7d027b4c55c116dc52d9cd8121fbb09777f0",
	"repository": "https://github.com/google/closure-compiler.git",
	"author": "lgong",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoResolvedType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.UnionType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.RecordType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.TemplatizedType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.PrototypeObjectType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.FunctionType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.ProxyObjectType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.EnumElementType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.NoObjectType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.UnknownType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method package isSubtype(typeA ObjectType, typeB RecordType, implicitImplCache ImplCache) : boolean extracted from package isSubtype(typeA ObjectType, typeB RecordType) : boolean in class com.google.javascript.rhino.jstype.RecordType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(that JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(that JSType) : boolean in class com.google.javascript.rhino.jstype.EnumType"
	}, {
		"type": "Extract Method",
		"description": "Extract Method protected isSubtype(other JSType, implicitImplCache ImplCache) : boolean extracted from public isSubtype(other JSType) : boolean in class com.google.javascript.rhino.jstype.ArrowType"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public usesImplicitMatch() : boolean renamed to public isStructuralInterface() : boolean in class com.google.javascript.rhino.jstype.FunctionType"
	}],
	"time": "7/27/15 8:33 PM",
	"id": 1151129
}, {
	"sha1": "204bf49cba03fe5d581a35ff82dd22587a681f46",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "Mehmet Dogan",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method private createConfig() : Config extracted from private testWaitNotifyService_whenNodeSplitFromCluster(action SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private createConfig() : Config extracted from private testWaitingInvocations_whenNodeSplitFromCluster(splitAction SplitAction) : void in class com.hazelcast.spi.impl.operationservice.impl.InvocationNetworkSplitTest"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterSlave(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl"
		}, {
			"type": "Inline Method",
			"description": "Inline Method private sendHearBeatIfRequired(now long, member MemberImpl) : void inlined to private heartBeaterMaster(now long, clockJump long) : void in class com.hazelcast.cluster.impl.ClusterServiceImpl"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public testTcpIp__ClusterMerge() : void renamed to public testTcpIp_ClusterMerge() : void in class com.hazelcast.cluster.SplitBrainHandlerTest"
		}
	],
	"time": "7/28/15 4:32 AM",
	"id": 1151667
}, {
	"sha1": "e84e96ff5c2bdc48cea7f75fd794506159c4e1f7",
	"repository": "https://github.com/hazelcast/hazelcast.git",
	"author": "As?m Arslan",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute public DATA_FULL_NAME : String from class com.hazelcast.client.protocol.generator.CodecModel to class com.hazelcast.client.protocol.generator.CodeGenerationUtils"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private createCodecModel(methodElement ExecutableElement, lang Lang) : CodecModel extracted from public generateCodec(methodElement ExecutableElement, lang Lang) : void in class com.hazelcast.client.protocol.generator.CodecCodeGenerator"
	}, {
		"type": "Move Method",
		"description": "Move Method public convertTypeToCSharp(type String) : String from class com.hazelcast.client.protocol.generator.CodecModel.ParameterModel to public convertTypeToCSharp(type String) : String from class com.hazelcast.client.protocol.generator.CodeGenerationUtils"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getKeyTypeInsideMap(type String) : String renamed to public getFirstGenericParameterType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getTypeInsideCollection(type String) : String renamed to public getGenericType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getTypeInsideData(type String) : String renamed to public getArrayType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getValueTypeInsideMap(type String) : String renamed to public getSecondGenericParameterType(type String) : String in class com.hazelcast.client.protocol.generator.CodeGenerationUtils"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public calculateStringDataSize(string String) : int renamed to public calculateDataSize(string String) : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public calculateByteArrayDataSize(bytes byte[]) : int renamed to public calculateDataSize(bytes byte[]) : int in class com.hazelcast.client.impl.protocol.util.ParameterUtil"
	}],
	"time": "7/28/15 5:19 AM",
	"id": 1151664
}, {
	"sha1": "0bb4cca1105fc6eb86e7c4b75bfff3dbbd55f0c8",
	"repository": "https://github.com/spring-projects/spring-roo.git",
	"author": "Juan Carlos Garc\u00eda",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method public getGenericDefinition() : String from class org.springframework.roo.classpath.details.MethodMetadataBuilder to public getGenericDefinition() : String from class org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder"
	}, {
		"type": "Pull Up Attribute",
		"description": "Pull Up Attribute private genericDefinition : String from class org.springframework.roo.classpath.details.MethodMetadataBuilder to class org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder"
	}, {
		"type": "Pull Up Method",
		"description": "Pull Up Method public setGenericDefinition(definition String) : void from class org.springframework.roo.classpath.details.MethodMetadataBuilder to public setGenericDefinition(genericDefinition String) : void from class org.springframework.roo.classpath.details.AbstractInvocableMemberMetadataBuilder"
	}],
	"time": "7/28/15 5:42 AM",
	"id": 1152218
}, {
	"sha1": "12602650ce99f34cb530fc24266c23e39733b0bb",
	"repository": "https://github.com/bitcoinj/bitcoinj.git",
	"author": "Ross Nicoll",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method public makeInventoryMessage(payloadBytes byte[], length int) : InventoryMessage extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public makeAddressMessage(payloadBytes byte[], length int) : AddressMessage extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected parseTransactions(transactionsOffset int) : void extracted from protected parseTransactions() : void in class org.bitcoinj.core.Block"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public makeTransaction(payloadBytes byte[], offset int, length int, hash byte[]) : Transaction extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public makeBlock(payloadBytes byte[], length int) : Block extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public makeBloomFilter(payloadBytes byte[]) : Message extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public makeAlertMessage(payloadBytes byte[]) : Message extracted from private makeMessage(command String, length int, payloadBytes byte[], hash byte[], checksum byte[]) : Message in class org.bitcoinj.core.BitcoinSerializer"
		}

	],
	"time": "7/28/15 7:20 AM",
	"id": 1152033
}, {
	"sha1": "87f3f8144b7a6cb57b6e21cd3753d09ecde0d88f",
	"repository": "https://github.com/alibaba/druid.git",
	"author": "shaojin.wensj",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method protected printJoinType(joinType JoinType) : void extracted from public visit(x SQLJoinTableSource) : boolean in class com.alibaba.druid.sql.visitor.SQLASTOutputVisitor"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected printJoinType(joinType JoinType) : void extracted from public visit(x SQLJoinTableSource) : boolean in class com.alibaba.druid.sql.dialect.odps.visitor.OdpsOutputVisitor"
		}

	],
	"time": "7/28/15 11:24 AM",
	"id": 1151859
}, {
	"sha1": "837d1a74bb7d694220644a2539c4440ce55462cf",
	"repository": "https://github.com/eclipse/jetty.project.git",
	"author": "Simone Bordet",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private testTransparentProxyWithQuery(proxyToContext String, prefix String, target String) : void extracted from public testTransparentProxyWithQuery() : void in class org.eclipse.jetty.proxy.ProxyServletTest"
	}],
	"time": "7/28/15 11:39 AM",
	"id": 1152672
}, {
	"sha1": "309c03055b06525c275b278542c881019424760e",
	"repository": "https://github.com/clojure/clojure.git",
	"author": "Rich Hickey",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package sigTag(argcount int, v Var) : Object extracted from public InvokeExpr(source String, line int, column int, tag Symbol, fexpr Expr, args IPersistentVector, tailPosition boolean) in class clojure.lang.Compiler.InvokeExpr"
	}],
	"time": "7/28/15 12:44 PM",
	"id": 1153146
}, {
	"sha1": "e95aa8ab32a0334b9c941799060fd601297d05e4",
	"repository": "https://github.com/osmandapp/Osmand.git",
	"author": "GaidamakUA",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public showItemPopupOptionsMenu(point FavouritePoint, activity Activity, view View) : void extracted from public onListItemClick(l ListView, v View, position int, id long) : void in class net.osmand.plus.activities.FavoritesListFragment"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public showItemPopupOptionsMenu(point FavouritePoint, view View) : void extracted from public onChildClick(parent ExpandableListView, v View, groupPosition int, childPosition int, id long) : boolean in class net.osmand.plus.activities.FavoritesTreeFragment"
	}],
	"time": "7/28/15 1:13 PM",
	"id": 1151782
}, {
	"sha1": "6ed4cf9e83fe24fc6ab6fc9ebede016c777c9725",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Uri Baghin",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public sanitize(workingDir Optional<Path>, contents String, expandPaths boolean) : String inlined to public sanitize(workingDir Optional<Path>, contents String) : String in class com.facebook.buck.cxx.DebugPathSanitizer"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public sanitizeWithoutAnyMatchesWithExpandPaths() : void renamed to public sanitizeWithoutAnyMatches() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public sanitizeProjectRootWithoutExpandPaths() : void renamed to public sanitizeProjectRoot() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public sanitizeDirectoriesThatArePrefixOfOtherDirectoriesWithoutExpandPaths() : void renamed to public sanitizeDirectoriesThatArePrefixOfOtherDirectories() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public sanitizeOtherDirectoriesWithoutExpandPaths() : void renamed to public sanitizeOtherDirectories() : void in class com.facebook.buck.cxx.DebugPathSanitizerTest"
	}],
	"time": "7/28/15 3:32 PM",
	"id": 1151927
}, {
	"sha1": "ecd0ad5ab99b8d14f28881cf4f49ec01f2221776",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Martino Luca",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private computeRuleFlags(source CxxSource) : ImmutableList<String> extracted from public createPreprocessBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private computePlatformCompilerFlags(pic PicType, source CxxSource) : ImmutableList<String> extracted from public createPreprocessAndCompileBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType, strategy CxxPreprocessMode) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private computePlatformFlags(pic PicType, source CxxSource) : ImmutableList<String> extracted from public createPreprocessBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private computeRuleCompilerFlags(source CxxSource) : ImmutableList<String> extracted from public createPreprocessAndCompileBuildRule(resolver BuildRuleResolver, name String, source CxxSource, pic PicType, strategy CxxPreprocessMode) : CxxPreprocessAndCompile in class com.facebook.buck.cxx.CxxSourceRuleFactory"
	}],
	"time": "7/28/15 3:36 PM",
	"id": 1151906
}, {
	"sha1": "7744a00629514b9539acac05596d64af878fe747",
	"repository": "https://github.com/bitcoinj/bitcoinj.git",
	"author": "Andreas Schildbach",
	"refactorings": [{
			"type": "Inline Method",
			"description": "Inline Method private testCachedParsing(lazy boolean) : void inlined to public testCachedParsing() : void in class org.bitcoinj.core.BitcoinSerializerTest"
		}, {
			"type": "Extract Method",
			"description": "Inline Method protected parseTransactions() : void inlined to protected parse() : void in class org.bitcoinj.core.Block"
		}, {
			"type": "Extract Method",
			"description": "Inline Method protected parseHeader() : void inlined to protected parse() : void in class org.bitcoinj.core.Block"
		}, {
			"type": "Extract Method",
			"description": "Inline Method public getMessageSize() : int inlined to protected parse() : void in class org.bitcoinj.core.AddressMessage"
		}, {
			"type": "Rename Class",
			"description": "Rename Class org.bitcoinj.core.LazyParseByteCacheTest renamed to org.bitcoinj.core.ParseByteCacheTest"
		}, {
			"type": "Rename Method",
			"description": "Rename Method protected parseLite() : void renamed to protected parse() : void in class org.bitcoinj.core.RejectMessage"
		}, {
			"type": "Rename Method",
			"description": "Rename Method protected parseLite() : void renamed to protected parse() : void in class org.bitcoinj.core.TransactionOutput"
		}
	],
	"time": "7/28/15 5:14 PM",
	"id": 1152026
}, {
	"sha1": "7fea4c9d5ee97d4a61ad985cadc9c5c0ab2db780",
	"repository": "https://github.com/addthis/hydra.git",
	"author": "ian",
	"refactorings": [{
		"type": "Move Class",
		"description":"Move Class com.addthis.hydra.job.spawn.SpawnBalancer.HostAndScore moved to com.addthis.hydra.job.spawn.balancer.HostAndScore"
	},
{
		"type": "Move Class",
		"description":"Move Class com.addthis.hydra.job.spawn.SpawnBalancerTest moved to com.addthis.hydra.job.spawn.balancer.SpawnBalancerTest"
	},
{
		"type": "Move Class",
		"description":"Move Class com.addthis.hydra.job.spawn.SpawnBalancer.HostScore moved to com.addthis.hydra.job.spawn.balancer.HostScore"
	},
{
		"type": "Move Class",
		"description":"Move Class com.addthis.hydra.job.spawn.SpawnBalancer moved to com.addthis.hydra.job.spawn.balancer.SpawnBalancer"
	},
{
		"type": "Move Class",
		"description":"Move Class com.addthis.hydra.job.spawn.SpawnBalancerConfig moved to com.addthis.hydra.job.spawn.balancer.SpawnBalancerConfig"
	},
{
		"type": "Move Class",
		"description":"Move Class com.addthis.hydra.job.spawn.SpawnBalancerTaskSizer moved to com.addthis.hydra.job.spawn.balancer.SpawnBalancerTaskSizer"
	},
{
		"type": "Move Class",
		"description":"Move Class com.addthis.hydra.job.spawn.SpawnBalancer.JobTaskItem moved to com.addthis.hydra.job.spawn.balancer.JobTaskItem"
	}],
	"time": "7/28/15 5:43 PM",
	"id": 1152530
}, {
	"sha1": "4aa2e8746b5492bbc1cf2b36af956cf3b01e40f5",
	"repository": "https://github.com/wildfly/wildfly.git",
	"author": "Paul Ferraro",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class GroupServiceNameFactory moved from org.wildfly.clustering.spi to org.wildfly.clustering.service"
	}],
	"time": "7/28/15 7:18 PM",
	"id": 1152936
}, {
	"sha1": "0b6ea757e34a63b1421b77ed5fbb61398377aab1",
	"repository": "https://github.com/hibernate/hibernate-orm.git",
	"author": "Gail Badner",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.hibernate.jpa.test.callbacks.EntityWithLazyProperty moved to org.hibernate.jpa.test.instrument.domain.EntityWithLazyProperty"
	}],
	"time": "7/29/15 12:10 AM",
	"id": 1152358
}, {
	"sha1": "8ad226067434cd39ce493b336bd0659778625959",
	"repository": "https://github.com/ReactiveX/RxJava.git",
	"author": "Yuya Tanaka",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private awaitForComplete(latch CountDownLatch, subscription Subscription) : void extracted from private blockForSingle(observable Observable<? extends T>) : T in class rx.observables.BlockingObservable"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private awaitForComplete(latch CountDownLatch, subscription Subscription) : void extracted from public forEach(onNext Action1<? super T>) : void in class rx.observables.BlockingObservable"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private createObservable() : Observable<Void> renamed to private createOnUnsubscribe() : Action0 in class rx.observables.BlockingObservableTest.InterruptionTests"
	}],
	"time": "7/29/15 2:36 PM",
	"id": 1153435
}, {
	"sha1": "3bdcaa336a6e6a9727c333b433bb9f5d3afc0fb1",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Carl Yeksigian",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.apache.cassandra.AbstractReadCommandBuilder moved to org.apache.cassandra.db.AbstractReadCommandBuilder"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public dumpMemtable() : void extracted from public truncateBlocking() : void in class org.apache.cassandra.db.ColumnFamilyStore"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public initRowCache() : void renamed to public init() : void in class org.apache.cassandra.db.ColumnFamilyStore"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private wrapResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, writeType WriteType) : WriteResponseHandlerWrapper renamed to private wrapBatchResponseHandler(mutation Mutation, consistency_level ConsistencyLevel, batchConsistencyLevel ConsistencyLevel, writeType WriteType, cleanup BatchlogCleanup) : WriteResponseHandlerWrapper in class org.apache.cassandra.service.StorageProxy"
	}],
	"time": "7/29/15 5:15 PM",
	"id": 1153409
}, {
	"sha1": "f9d3171f5020da5c359cdda28ef05172e858c464",
	"repository": "https://github.com/cwensel/cascading.git",
	"author": "Chris K Wensel",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method protected logInfo(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to protected logInfo(message String, arguments Object[]) : void from class cascading.stats.CascadingStats"
	}, {
		"type": "Move Method",
		"description": "Move Method protected logWarn(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to class cascading.stats.CascadingStats"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private prefixID : String from class cascading.stats.tez.TezNodeStats to class cascading.stats.CascadingStats"
	}, {
		"type": "Move Method",
		"description": "Move Method protected logDebug(message String, arguments Object[]) : void from class cascading.stats.tez.TezNodeStats to protected logDebug(message String, arguments Object[]) : void from class cascading.stats.CascadingStats"
	}, {
		"type": "Move Method",
		"description": "Move Method private getPrefix() : String from class cascading.stats.tez.TezNodeStats to private getPrefix() : String from class cascading.stats.CascadingStats"
	}],
	"time": "7/29/15 7:47 PM",
	"id": 1153579
}, {
	"sha1": "d05d92de40542e85f9f26712d976e710be82914e",
	"repository": "https://github.com/google/j2objc.git",
	"author": "kirbs",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.google.devtools.j2objc.translate.LambdaExpressionTest moved to com.google.devtools.j2objc.ast.LambdaExpressionTest"
	}],
	"time": "7/29/15 9:03 PM",
	"id": 1153111
}, {
	"sha1": "9d347ffb91f34933edb7b1124f6b70c3fc52e220",
	"repository": "https://github.com/netty/netty.git",
	"author": "Scott Mitchell",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private expand() : void extracted from public append(c char) : AppendableCharSequence in class io.netty.util.internal.AppendableCharSequence"
	}],
	"time": "7/30/15 3:25 AM",
	"id": 1153464
}, {
	"sha1": "7ffe37983e2f09637b0c84d526a2f824de652de4",
	"repository": "https://github.com/restlet/restlet-framework-java.git",
	"author": "Hugo Wood",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private fillRepresentation(model Model, name String, contract Contract) : void extracted from private fillRepresentations(swagger Swagger, contract Contract) : void in class org.restlet.ext.apispark.internal.conversion.swagger.v2_0.Swagger2Reader"
	}],
	"time": "7/30/15 10:40 AM",
	"id": 1153354
}, {
	"sha1": "ce4b0e22659c16ae83d421f9621fd3e922750764",
	"repository": "https://github.com/JetBrains/MPS.git",
	"author": "Mihail Muhin",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected renameModels(oldName String, newName String) : void extracted from public rename(newName String) : void in class jetbrains.mps.project.AbstractModule"
	}],
	"time": "7/30/15 1:39 PM",
	"id": 1153761
}, {
	"sha1": "deb8e5ca64fcf633edbd89523af472da813b6772",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Chris Wolff",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getNormalValue(r Random, magnitude double, min long, max long) : long extracted from private fillTable(client Client, tbl String) : void in class org.voltdb.regressionsuites.TestApproxCountDistinctSuite"
	}],
	"time": "7/30/15 2:19 PM",
	"id": 1153652
}, {
	"sha1": "d31fa31cdcc5ea2fa96116e3b1265baa180df58a",
	"repository": "https://github.com/netty/netty.git",
	"author": "Jakob Buchgraber",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method private comparator(ignoreCase boolean) : Comparator<CharSequence> inlined to public contains(name CharSequence, value CharSequence, ignoreCase boolean) : boolean in class io.netty.handler.codec.DefaultTextHeaders"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public as(value byte[]) : ByteString renamed to public bs(value byte[]) : ByteString in class io.netty.handler.codec.http2.Http2TestUtil"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.DefaultHeaders"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getInt(name T, defaultValue short) : short renamed to public getShort(name T, defaultValue short) : short in class io.netty.handler.codec.EmptyHeaders"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public visit(entry Entry<ByteString, ByteString>) : boolean renamed to public translate(entry Entry<ByteString, ByteString>) : void in class io.netty.handler.codec.http2.HttpUtil.Http2ToHttpHeaderTranslator"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public visit(entry Entry<CharSequence, CharSequence>) : boolean renamed to public encode(entry Entry<CharSequence, CharSequence>) : void in class io.netty.handler.codec.AsciiHeadersEncoder"
	}],
	"time": "7/30/15 2:38 PM",
	"id": 1153762
}, {
	"sha1": "e2de877a29217a50afbd142454a330e423d86045",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Christopher M. Wolff",
	"refactorings": [{
		"type": "Pull Up Method",
		"description": "Pull Up Method private findAllAggPlanNodes(node AbstractPlanNode) : List<AbstractPlanNode> from class org.voltdb.planner.TestPlansApproxCountDistinct to class org.voltdb.planner.PlannerTestCase"
	}],
	"time": "7/30/15 8:14 PM",
	"id": 1153866
}, {
	"sha1": "2b76aa336d696bbbbb205e6b6998e07ae5eb4261",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Max Medvedev",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.jetbrains.plugins.groovy.util.ResolveProfiler moved to com.intellij.util.profiling.ResolveProfiler"
	}],
	"time": "7/30/15 10:53 PM",
	"id": 1153913
}, {
	"sha1": "f8197cfe1bc3671aa6878ef9d1869b2fe8e57331",
	"repository": "https://github.com/apache/drill.git",
	"author": "Mehant Baid",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface org.apache.drill.exec.ops.OptimizerRulesContext from class org.apache.drill.exec.ops.QueryContext"
	}, {
		"type": "Extract Interface",
		"description": "Extract Interface org.apache.drill.exec.expr.fn.FunctionLookupContext from class org.apache.drill.exec.expr.fn.FunctionImplementationRegistry"
	}],
	"time": "7/31/15 12:17 AM",
	"id": 1155351
}, {
	"sha1": "07c26a3a1dd6fcc2494c2d755ee5a2753e0df87c",
	"repository": "https://github.com/geoserver/geoserver.git",
	"author": "Kevin Smith",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.geoserver.wfs.xml.PropertyRule moved to org.geoserver.util.PropertyRule"
	}],
	"time": "7/31/15 7:12 AM",
	"id": 1153812
}, {
	"sha1": "e19c6874431dc2c3046436c2ac249a0ab2ef3457",
	"repository": "https://github.com/brettwooldridge/HikariCP.git",
	"author": "David Schlosnagle",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private closeOpenStatements() : void extracted from public close() : void in class com.zaxxer.hikari.proxy.ConnectionProxy"
	}],
	"time": "7/31/15 1:03 PM",
	"id": 1155178
}, {
	"sha1": "58a4e74d28073e7c6f15d1f225ac1c2fd9aa4357",
	"repository": "https://github.com/jOOQ/jOOQ.git",
	"author": "lukaseder",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private millis(temporal Temporal) : long extracted from public from(from Object) : U in class org.jooq.tools.Convert.ConvertAll"
	}],
	"time": "7/31/15 1:51 PM",
	"id": 1155119
}, {
	"sha1": "4cca684f368d3ff719c62d3fa4cac3cdb7828bff",
	"repository": "https://github.com/spring-projects/spring-integration.git",
	"author": "Artem Bilan",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.springframework.integration.codec.CompositeCodecTests moved to org.springframework.integration.codec.kryo.CompositeCodecTests"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.springframework.integration.mail.config.ImapIdelIntegrationTests renamed to org.springframework.integration.mail.config.ImapIdleIntegrationTests"
	}],
	"time": "7/31/15 2:19 PM",
	"id": 1155401
}, {
	"sha1": "6c93f15f502f39dff99ecb01b56dcad7dddb0f0d",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Martin Kosiba",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method package getEnumerator(rType RType) : ResourceIdEnumerator extracted from public addIntResourceIfNotPresent(rType RType, name String) : void in class com.facebook.buck.android.aapt.AaptResourceCollector"
	}],
	"time": "7/31/15 3:01 PM",
	"id": 1155076
}, {
	"sha1": "0fa45e4a562fc2586b1ef06a88e9c186a0835316",
	"repository": "https://github.com/apache/hive.git",
	"author": "Alan Gates",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private setupObjectStore(rdbms RawStore, roles String[], dbNames String[], tokenIds String[], tokens String[], masterKeys String[], now int) : void extracted from public doImport() : void in class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private copyOneFunction(dbName String, funcName String) : void extracted from private copyFunctions() : void in class org.apache.hadoop.hive.metastore.hbase.HBaseImport"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public doImport() : void renamed to public importAll() : void in class org.apache.hadoop.hive.metastore.hbase.TestHBaseImport"
	}],
	"time": "7/31/15 3:07 PM",
	"id": 1155930
}, {
	"sha1": "83b3092c1ee11b70489732f9e69b8e01c2a966f0",
	"repository": "https://github.com/JetBrains/intellij-plugins.git",
	"author": "Alexander Doroshko",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getShortErrorMessage(methodName String, filePath String, error RequestError) : String extracted from private logError(methodName String, filePath String, error RequestError) : void in class com.jetbrains.lang.dart.analyzer.DartAnalysisServerService"
	}],
	"time": "7/31/15 3:41 PM",
	"id": 1154674
}, {
	"sha1": "892d1760c8e4c76c369cd5ec1eaed215d3a22c8a",
	"repository": "https://github.com/gwtproject/gwt.git",
	"author": "Julien Dramaix",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public startRow(rowValue T) : TableRowBuilder extracted from public startRow() : TableRowBuilder in class com.google.gwt.user.cellview.client.AbstractCellTableBuilder"
	}],
	"time": "7/31/15 4:56 PM",
	"id": 1155773
}, {
	"sha1": "d47e58f9bbce9a816378e8a7930c1de67a864c29",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Manju James",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public callProcedure(ic ImportContext, procCallback ProcedureCallback, proc String, fieldList Object[]) : boolean extracted from public callProcedure(ic ImportContext, proc String, fieldList Object[]) : boolean in class org.voltdb.ImportHandler"
	}],
	"time": "7/31/15 6:44 PM",
	"id": 1154537
}, {
	"sha1": "fd000ca2e78fce2f8aa11e6a81e4f23c2f1348e6",
	"repository": "https://github.com/raphw/byte-buddy.git",
	"author": "Rafael Winterhalter",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private invokeMethod(methodToken Token) : SpecialMethodInvocation extracted from public invokeSuper(methodToken Token) : SpecialMethodInvocation in class net.bytebuddy.dynamic.scaffold.subclass.SubclassImplementationTarget"
	}],
	"time": "7/31/15 8:22 PM",
	"id": 1155272
}, {
	"sha1": "5b7947034a656c463ca477e198f7728cccc9e4c1",
	"repository": "https://github.com/bitfireAT/davdroid.git",
	"author": "Ricki Hirner",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method package recurrenceSetsToAndroidString(dates List) : String from class at.bitfire.davdroid.resource.LocalCalendar to class at.bitfire.davdroid.DateUtils"
	}],
	"time": "8/1/15 8:25 AM",
	"id": 1155159
}, {
	"sha1": "dbd2d5048ae5e30fec98ddd969b6c1e91183fb65",
	"repository": "https://github.com/MovingBlocks/Terasology.git",
	"author": "Florian K\u00f6berle",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute private localPlayer : LocalPlayer from class org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider.ChunkTaskRelevanceComparator to class org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider"
	}, {
		"type": "Move Attribute",
		"description": "Move Attribute private localPlayer : LocalPlayer from class org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider.ReadyChunkRelevanceComparator to class org.terasology.world.chunks.remoteChunkProvider.RemoteChunkProvider"
	}],
	"time": "8/1/15 9:17 AM",
	"id": 1155375
}, {
	"sha1": "3815f293ba9338f423315d93a373608c95002b15",
	"repository": "https://github.com/droolsjbpm/jbpm.git",
	"author": "Marco Rietveld",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass org.jbpm.process.audit.JPAService from class org.jbpm.process.audit.JPAAuditLogService"
	}],
	"time": "8/1/15 7:38 PM",
	"id": 1155451
}, {
	"sha1": "f36b736cf1206dd1af794d6fb4cee967a3553b1f",
	"repository": "https://github.com/processing/processing.git",
	"author": "Jakub Valtar",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private createDepthAndStencilBuffer(multisample boolean, depthBits int, stencilBits int, packed boolean) : void extracted from private createFBOLayer() : void in class processing.opengl.PGL"
	}],
	"time": "8/3/15 12:36 PM",
	"id": 1157287
}, {
	"sha1": "043030723632627b0908dca6b24dae91d3dfd938",
	"repository": "https://github.com/infinispan/infinispan.git",
	"author": "gustavonalle",
	"refactorings": [{
			"type": "Extract Method",
			"description": "Extract Method private rehashAwareIteration(complete AtomicBoolean, consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream"
		}, {
			"type": "Extract Method",
			"description": "Extract Method private ignoreRehashIteration(consumer Consumer<R>, supplier IteratorSupplier<R>, iteratorParallelDistribute boolean) : void extracted from package remoteIterator() : Iterator<R> in class org.infinispan.stream.impl.DistributedCacheStream"
		}, {
			"type": "Extract Method",
			"description": "Extract Method protected supplierForSegments(ch ConsistentHash, targetSegments Set, excludedKeys Set, primaryOwnerOnly boolean) : Supplier extracted from protected supplierForSegments(ch ConsistentHash, targetSegments Set, excludedKeys Set) : Supplier in class org.infinispan.stream.impl.AbstractCacheStream"
		}

	],
	"time": "8/3/15 1:16 PM",
	"id": 1156578
}, {
	"sha1": "8f63cc5c8edb8e740026447bc4827f8e8e6c34b1",
	"repository": "https://github.com/MovingBlocks/Terasology.git",
	"author": "Limeth",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private ensurePreviewUnloaded() : boolean extracted from public onClosed() : void in class org.terasology.rendering.nui.layers.mainMenu.PreviewWorldScreen"
	}],
	"time": "8/3/15 1:20 PM",
	"id": 1156374
}, {
	"sha1": "d94ca2b27c9e8a5fa9fe19483d58d2f2ef024606",
	"repository": "https://github.com/jersey/jersey.git",
	"author": "Pavel Bucek",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.glassfish.jersey.client.HttpUrlConnector moved to org.glassfish.jersey.client.internal.HttpUrlConnector"
	}],
	"time": "8/3/15 2:32 PM",
	"id": 1156317
}, {
	"sha1": "2331fe19ea88a22de32f15375de8118226eaa1e6",
	"repository": "https://github.com/dropwizard/metrics.git",
	"author": "Ryan Tenney",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private registerMetricsForModel(resourceModel ResourceModel) : void extracted from public onEvent(event ApplicationEvent) : void in class io.dropwizard.metrics.jersey2.InstrumentedResourceMethodApplicationListener"
	}],
	"time": "8/3/15 3:30 PM",
	"id": 1156168
}, {
	"sha1": "3a7ccf5a252077332b9505acb22f190745f726f7",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Sterling Greene",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method private registerOrFindDeploymentHandle(deploymentRegistry DeploymentRegistry, deploymentId String) : PlayApplicationDeploymentHandle from class org.gradle.play.plugins.PlayApplicationPlugin.Rules to private registerOrFindDeploymentHandle(deploymentId String) : PlayApplicationDeploymentHandle from class org.gradle.play.tasks.PlayRun"
	}],
	"time": "8/3/15 4:21 PM",
	"id": 1156456
}, {
	"sha1": "eb500cca282e39d01a9882e1d0a83186da6d1a26",
	"repository": "https://github.com/JoanZapata/android-iconify.git",
	"author": "Damien",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private copy(inputStream InputStream, outputFile File) : void extracted from package resourceToFile(context Context, resourceName String) : File in class com.joanzapata.android.iconify.Utils"
	}],
	"time": "8/3/15 5:55 PM",
	"id": 1157172
}, {
	"sha1": "e37d577b6cfc2d3e11252cef87ab9ebba72e1d52",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Robert Stupp",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public assertUdfsEnabled(language String) : void extracted from public create(name FunctionName, argNames List<ColumnIdentifier>, argTypes List<AbstractType<?>>, returnType AbstractType<?>, calledOnNullInput boolean, language String, body String) : UDFunction in class org.apache.cassandra.cql3.functions.UDFunction"
	}],
	"time": "8/3/15 7:05 PM",
	"id": 1156434
}, {
	"sha1": "92dce401344a28ff966ad4cf3dd969a676852315",
	"repository": "https://github.com/apache/pig.git",
	"author": "Jianyong Dai",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public depthFirstSearchForFile(statusArray FileStatus[], fileSystem FileSystem, filter PathFilter) : Path extracted from public depthFirstSearchForFile(statusArray FileStatus[], fileSystem FileSystem) : Path in class org.apache.pig.impl.util.Utils"
	}],
	"time": "8/3/15 9:16 PM",
	"id": 1156548
}, {
	"sha1": "54fa890a6af4ccf564fb481d3e1b6ad4d084de9e",
	"repository": "https://github.com/linkedin/rest.li.git",
	"author": "Soojung Ha",
	"refactorings": [{
			"type": "Move Method",
			"description": "Move Method public contentEncodingGeneratorDataProvider() : Object[][] from class com.linkedin.restli.examples.TestCompressionServer to public contentEncodingGeneratorDataProvider() : Object[][] from class com.linkedin.r2.filter.compression.TestClientCompressionFilter"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public addResponseCompressionHeaders(responseCompressionOverride CompressionOption, req RestRequest) : RestRequest extracted from public onRestRequest(req RestRequest, requestContext RequestContext, wireAttrs Map<String,String>, nextFilter NextFilter<RestRequest,RestResponse>) : void in class com.linkedin.r2.filter.compression.ClientCompressionFilter"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompressionBetter(compressor Compressor) : void in class com.linkedin.restli.examples.TestCompressionServer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testAcceptEncoding(acceptedEncoding String, contentEncoding String) : void in class com.linkedin.restli.examples.TestCompressionServer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompressionWorse(compressor Compressor) : void in class com.linkedin.restli.examples.TestCompressionServer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public testCompatibleDefault(acceptEncoding String, contentEncoding String) : void in class com.linkedin.restli.examples.TestCompressionServer"
		}, {
			"type": "Extract Method",
			"description": "Extract Method public addCompressionHeaders(getMessage HttpGet, acceptEncoding String) : void extracted from public test406Error(acceptContent String) : void in class com.linkedin.restli.examples.TestCompressionServer"
		}, {
			"type": "Move Method",
			"description": "Move Method public shouldCompressRequest(entityLength int, requestCompressionOverride CompressionOption) : boolean from class com.linkedin.r2.filter.CompressionConfig to private shouldCompressRequest(entityLength int, requestCompressionOverride CompressionOption) : boolean from class com.linkedin.r2.filter.compression.ClientCompressionFilter"
		}, {
			"type": "Move Method",
			"description": "Move Method public testEncodingGeneration(encoding EncodingType[], acceptEncoding String) : void from class com.linkedin.restli.examples.TestCompressionServer to public testEncodingGeneration(encoding EncodingType[], acceptEncoding String) : void from class com.linkedin.r2.filter.compression.TestClientCompressionFilter"
		},
		{
			"type": "Inline Method",
			"description": "Inline Method public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int, requestFilters List, responseFilters List) : HttpServer inlined to public createServer(engine Engine, port int, supportedCompression String, useAsyncServletApi boolean, asyncTimeOut int) : HttpServer in class com.linkedin.restli.examples.RestLiIntTestServer"
		}, {
			"type": "Rename Method",
			"description": "Rename Method private shouldCompressResponse(operation String) : boolean renamed to private shouldCompressResponseForOperation(operation String) : boolean in class com.linkedin.r2.filter.compression.ClientCompressionFilter"
		}, {
			"type": "Rename Method",
			"description": "Rename Method public testGetCompressionConfig(serviceName String, requestCompressionThresholdDefault int, expectedConfig CompressionConfig) : void renamed to public testGetRequestCompressionConfig(serviceName String, requestCompressionThresholdDefault int, expectedConfig CompressionConfig) : void in class com.linkedin.r2.transport.http.client.TestHttpClientFactory"
		}, {
			"type": "Rename Method",
			"description": "Rename Method package getCompressionConfig(httpServiceName String, requestContentEncodingName String) : CompressionConfig renamed to package getRequestCompressionConfig(httpServiceName String, requestContentEncoding EncodingType) : CompressionConfig in class com.linkedin.r2.transport.http.client.HttpClientFactory"
		}, {
			"type": "Rename Method",
			"description": "Rename Method private provideRequestData() : Object[][] renamed to private provideRequestCompressionData() : Object[][] in class com.linkedin.r2.filter.compression.TestClientCompressionFilter"
		}
	],
	"time": "8/3/15 9:25 PM",
	"id": 1156276
}, {
	"sha1": "72dda3404820a82d53f1a16bb2ed9ad95f745d3c",
	"repository": "https://github.com/square/mortar.git",
	"author": "Ray Ryan",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public cannotRegisterOnDestroyed() : void from class mortar.ObjectGraphServiceTest to class mortar.MortarScopeTest"
	}, {
		"type": "Move Method",
		"description": "Move Method public isDestroyedGetsSet() : void from class mortar.ObjectGraphServiceTest to class mortar.MortarScopeTest"
	}, {
		"type": "Move Method",
		"description": "Move Method public isDestroyedStartsFalse() : void from class mortar.ObjectGraphServiceTest to class mortar.MortarScopeTest"
	}, {
		"type": "Move Method",
		"description": "Move Method public cannotFindChildFromDestroyed() : void from class mortar.ObjectGraphServiceTest to class mortar.MortarScopeTest"
	}, {
		"type": "Move Method",
		"description": "Move Method public rootDestroyIsIdempotent() : void from class mortar.ObjectGraphServiceTest to class mortar.MortarScopeTest"
	}, {
		"type": "Move Method",
		"description": "Move Method public destroyIsIdempotent() : void from class mortar.ObjectGraphServiceTest to class mortar.MortarScopeTest"
	}],
	"time": "8/3/15 10:11 PM",
	"id": 1156165
}, {
	"sha1": "1a2c1bcdc7267abec9b19d77726aedbb045d79a8",
	"repository": "https://github.com/apache/cassandra.git",
	"author": "Marcus Eriksson",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public minorWasTriggered(keyspace String, cf String) : boolean extracted from public testTriggerMinorCompaction() : void in class org.apache.cassandra.db.compaction.CompactionsCQLTest"
	}],
	"time": "8/4/15 4:51 AM",
	"id": 1156431
}, {
	"sha1": "8bdc57ba8975d851fe91edc908761aacea624766",
	"repository": "https://github.com/spring-projects/spring-hateoas.git",
	"author": "Oliver Gierke",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private assertCanWrite(converter GenericHttpMessageConverter<Object>, type Class<?>, expected boolean) : void extracted from public canWriteTypeIfAssignableToConfiguredType() : void in class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private assertCanRead(converter GenericHttpMessageConverter<Object>, type Class<?>, expected boolean) : void extracted from public canReadTypeIfAssignableToConfiguredType() : void in class org.springframework.hateoas.mvc.TypeConstrainedMappingJackson2HttpMessageConverterUnitTest"
	}],
	"time": "8/4/15 5:35 AM",
	"id": 1156210
}, {
	"sha1": "6b90205e9f7bbd1570f600d3812fd3efa1a0597e",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Sergey Savenko",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class com.intellij.execution.console.RunIdeConsoleAction.IDE moved to com.intellij.ide.script.IDE"
	}],
	"time": "8/4/15 8:47 AM",
	"id": 1156853
}, {
	"sha1": "d12e1c16d1c73142334e689eb01f20abaeba84b0",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Aleksey Pivovarov",
	"refactorings": [{
		"type": "Move Attribute",
		"description": "Move Attribute public ORIGINAL_DOCUMENT : Key from class com.intellij.diff.actions.DocumentFragmentContent to class com.intellij.openapi.command.undo.UndoManager"
	}],
	"time": "8/4/15 10:40 AM",
	"id": 1156821
}, {
	"sha1": "c41466b6fd11ef4edc40cb9fd42dc13cf4f6fde1",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Darrell DeBoer",
	"refactorings": [{
		"type": "Inline Method",
		"description": "Inline Method public resolveMetaDataArtifact(artifact ModuleComponentArtifactMetaData, result ResourceAwareResolveResult) : LocallyAvailableExternalResource inlined to public resolveArtifact(artifact ModuleComponentArtifactMetaData, result ResourceAwareResolveResult) : LocallyAvailableExternalResource in class org.gradle.api.internal.artifacts.repositories.resolver.DefaultExternalResourceArtifactResolver"
	}],
	"time": "8/4/15 11:52 AM",
	"id": 1157610
}, {
	"sha1": "664923815b5aeeba2025bfe1dc5a0cd1a02a80e2",
	"repository": "https://github.com/addthis/hydra.git",
	"author": "Matt Abrams",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public updateHits(state DataTreeNodeUpdater, path TreeDataParent) : boolean extracted from public updateChildData(state DataTreeNodeUpdater, path TreeDataParent) : void in class com.addthis.hydra.data.tree.concurrent.ConcurrentTreeNode"
	}],
	"time": "8/4/15 12:58 PM",
	"id": 1157680
}, {
	"sha1": "0e65ac4da70c6ca5c67bb8418e67db914218042f",
	"repository": "https://github.com/HdrHistogram/HdrHistogram.git",
	"author": "Gil Tene",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getIntervalHistogram() : EncodableHistogram extracted from public run() : void in class org.HdrHistogram.HistogramLogProcessor"
	}],
	"time": "8/4/15 3:44 PM",
	"id": 1157057
}, {
	"sha1": "b08f28a10d050beaba6250e9e9c46efe13d9caaa",
	"repository": "https://github.com/JoanZapata/android-iconify.git",
	"author": "Joan Zapata",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package android.widget to com.joanzapata.android.iconify.views"
	},
	{
		"type": "Inline Method",
		"description": "Inline Method public addIcons(icon T, textViews TextView[]) : void inlined to public addIcons(textViews TextView[]) : void in class com.joanzapata.android.iconify.Iconify"
	}],
	"time": "8/4/15 6:55 PM",
	"id": 1157168
}, {
	"sha1": "7ccbd4693288dbdbc2e6844aa0877640d63fbd04",
	"repository": "https://github.com/hibernate/hibernate-orm.git",
	"author": "Janario Oliveira",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.hibernate.test.annotations.enumerated.FirstLetterType moved to org.hibernate.test.annotations.enumerated.custom_types.FirstLetterType"
	}, {
		"type": "Move Class",
		"description": "Move Class org.hibernate.test.annotations.enumerated.LastNumberType moved to org.hibernate.test.annotations.enumerated.custom_types.LastNumberType"
	}],
	"time": "8/4/15 11:50 PM",
	"id": 1157522
}, {
	"sha1": "c97659888126e43e95f0d52d22188bfe194a8439",
	"repository": "https://github.com/github/android.git",
	"author": "Henri Sweers",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package com.github.mobile to com.github.pockethub"
	}],
	"time": "8/5/15 4:34 AM",
	"id": 1157300
}, {
	"sha1": "98ecc4cfd927f388645f6a6bc492c80868b1a11d",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Dmitry Batkovich",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private getFileNamesToCreate() : Set<String> extracted from private createPropertiesFiles() : List<PsiFile> in class com.intellij.lang.properties.create.CreateResourceBundleDialogComponent"
	}],
	"time": "8/5/15 12:07 PM",
	"id": 1158123
}, {
	"sha1": "e0072aac53b3b88de787e7ca653c7e17f9499018",
	"repository": "https://github.com/neo4j/neo4j.git",
	"author": "Nigel Small",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private unpackBytesHeader() : int extracted from public unpackBytes() : byte[] in class org.neo4j.packstream.PackStream.Unpacker"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public unpackString() : String renamed to public unpackText() : String in class org.neo4j.packstream.PackStream.Unpacker"
	}, {
		"type": "Rename Class",
		"description": "Rename Class org.neo4j.packstream.PackStream.PackstreamException renamed to org.neo4j.packstream.PackStream.PackStreamException"
	}],
	"time": "8/5/15 12:32 PM",
	"id": 1159151
}, {
	"sha1": "61215911ef28ca783c5106d7c01e74cf3000a866",
	"repository": "https://github.com/JetBrains/intellij-community.git",
	"author": "Konstantin Kolosovsky",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public format(path String, pegRevision SVNRevision) : String extracted from public put(parameters List<String>, path String, pegRevision SVNRevision) : void in class org.jetbrains.idea.svn.commandLine.CommandUtil"
	}],
	"time": "8/5/15 1:03 PM",
	"id": 1158121
}, {
	"sha1": "44aab6242f8c93059612c953af950eb1870e0774",
	"repository": "https://github.com/gradle/gradle.git",
	"author": "Adrian Kelly",
	"refactorings": [{
		"type": "Extract Interface",
		"description": "Extract Interface org.gradle.internal.file.RelativeFilePathResolver from class org.gradle.api.internal.file.FileResolver"
	}],
	"time": "8/5/15 1:14 PM",
	"id": 1158716
}, {
	"sha1": "b77de40c0f3dd43a16f2491558594a61682271fc",
	"repository": "https://github.com/Netflix/genie.git",
	"author": "Tom Gianos",
	"refactorings": [{
		"type": "Rename Package",
		"description": "Rename Package com.netflix.genie.server to com.netflix.genie.web"
	}],
	"time": "8/5/15 5:47 PM",
	"id": 1158352
}, {
	"sha1": "e78cda0fcf23de3973b659bc54f58a4e9b1f3bd3",
	"repository": "https://github.com/geoserver/geoserver.git",
	"author": "Stefano Costa",
	"refactorings": [{
		"type": "Extract Superclass",
		"description": "Extract Superclass org.geoserver.ogr.core.AbstractToolWrapper from class org.geoserver.wfs.response.OGRWrapper"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.geoserver.ogr.core.Format from class org.geoserver.wfs.response.OgrFormat"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.geoserver.ogr.core.ToolConfiguration from class org.geoserver.wfs.response.OgrConfiguration"
	}, {
		"type": "Extract Superclass",
		"description": "Extract Superclass org.geoserver.ogr.core.AbstractToolConfigurator from class org.geoserver.wfs.response.Ogr2OgrConfigurator"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getOgrExecutable() : String renamed to public getExecutable() : String in class org.geoserver.wfs.response.Ogr2OgrOutputFormat"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public setOgrExecutable(ogrExecutable String) : void renamed to public setExecutable(ogrExecutable String) : void in class org.geoserver.wfs.response.Ogr2OgrOutputFormat"
	}, {
		"type": "Rename Method",
		"description": "Rename Method public getGdalData() : String renamed to public getEnvironment() : Map<String, String> in class org.geoserver.wfs.response.Ogr2OgrOutputFormat"
	}],
	"time": "8/5/15 7:22 PM",
	"id": 1158913
}, {
	"sha1": "bf35b533f067b51d4c373c5e5124d88525db99f3",
	"repository": "https://github.com/wildfly/wildfly.git",
	"author": "James Perkins",
	"refactorings": [{
		"type": "Move Class",
		"description": "Move Class org.wildfly.extension.batch.jberet.deployment.BatchEnvironmentProcessor.JobXmlFilter moved to org.wildfly.extension.batch.jberet.deployment.WildFlyJobXmlResolver.JobXmlFilter"
	}],
	"time": "8/5/15 7:32 PM",
	"id": 1158180
}, {
	"sha1": "153611deab149accd8aeaf03fd102c0b069bd322",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "Roman Birg",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public of(cells Cell[][], row int, column int, size byte) : Cell extracted from public of(row int, column int, size byte) : Cell in class com.android.internal.widget.LockPatternView.Cell"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public stringToPattern(string String, size byte) : List<LockPatternView.Cell> extracted from public stringToPattern(string String) : List<LockPatternView.Cell> in class com.android.internal.widget.LockPatternUtils"
	}],
	"time": "8/5/15 9:45 PM",
	"id": 1157971
}, {
	"sha1": "61b5decd4a4e5e6bbdea99eb76f136ca10915b73",
	"repository": "https://github.com/JetBrains/MPS.git",
	"author": "Alexander Shatalin",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public startInsertMode(editorContext EditorContext, anchorCell EditorCell, insertBefore boolean) : void extracted from public insertNewChild(editorContext EditorContext, anchorCell EditorCell, insertBefore boolean) : void in class jetbrains.mps.nodeEditor.cellProviders.AbstractCellListHandler"
	}],
	"time": "8/6/15 5:14 AM",
	"id": 1159637
}, {
	"sha1": "7cac88b9a28efc05bdc60e585e3291862ffc9da1",
	"repository": "https://github.com/jayway/rest-assured.git",
	"author": "Johan Haleby",
	"refactorings": [{
		"type": "Move Method",
		"description": "Move Method public supportsOverridingKeystore() : void from class com.jayway.restassured.itest.java.SpecificationBuilderITest to public supportsOverridingKeystore() : void from class com.jayway.restassured.itest.java.SSLITest"
	}, {
		"type": "Move Method",
		"description": "Move Method public supportsSpecifyingKeystore() : void from class com.jayway.restassured.itest.java.SpecificationBuilderITest to public supportsSpecifyingKeystore() : void from class com.jayway.restassured.itest.java.SSLITest"
	}],
	"time": "8/6/15 5:44 AM",
	"id": 1158457
}, {
	"sha1": "e3b84c8753a21b1b15cfc9aa90b5e0c56d290f41",
	"repository": "https://github.com/ignatov/intellij-erlang.git",
	"author": "Alexandra Vesloguzova",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void extracted from private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> in class org.intellij.erlang.utils.ErlangModulesUtil"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private addSourceRoot(module Module, sourceRootName String, rootType JpsModuleSourceRootType<?>) : VirtualFile extracted from private addSourceRoot(module Module, sourceRootName String, isTestSourceRoot boolean) : VirtualFile in class org.intellij.erlang.compilation.ErlangCompilationTestBase"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private getErlangModuleDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List renamed to private getErlangFileDescriptorFromConfig(target ErlangTarget, context CompileContext, isTests boolean) : List in class org.intellij.erlang.jps.builder.ErlangBuilder"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private assertSameErlangModules(moduleDescriptors List, expectedModules String[]) : void renamed to private assertSameErlangFiles(moduleDescriptors List, expectedModules String[]) : void in class org.intellij.erlang.compilation.ErlangDependenciesResolutionTest"
	}, {
		"type": "Rename Method",
		"description": "Rename Method private addErlangModules(module Module, onlyTestModules boolean, erlangModules Collection<ErlangFile>) : Collection<ErlangFile> renamed to private collectFiles(module Module, onlyTestModules boolean, filesCollector Processor<VirtualFile>) : void in class org.intellij.erlang.utils.ErlangModulesUtil"
	}],
	"time": "8/6/15 12:37 PM",
	"id": 1159409
}, {
	"sha1": "8398fbf3dd0937a0a4a3d540977a95f97425f566",
	"repository": "https://github.com/apache/hive.git",
	"author": "Jimmy Xiang",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public closeSparkSession() : void extracted from public close() : void in class org.apache.hadoop.hive.ql.session.SessionState"
	}],
	"time": "8/6/15 1:00 PM",
	"id": 1159836
}, {
	"sha1": "6c3dde45e8cbd0c1fa73072fad7610275afc6240",
	"repository": "https://github.com/xetorthio/jedis.git",
	"author": "Marcos Lilljedahl",
	"refactorings": [{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.ProtocolCommand moved to redis.clients.jedis.commands.ProtocolCommand"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.BinaryJedisCommands moved to redis.clients.jedis.commands.BinaryJedisCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.BinaryScriptingCommandsPipeline moved to redis.clients.jedis.commands.BinaryScriptingCommandsPipeline"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.BasicRedisPipeline moved to redis.clients.jedis.commands.BasicRedisPipeline"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.JedisClusterBinaryScriptingCommands moved to redis.clients.jedis.commands.JedisClusterBinaryScriptingCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.MultiKeyBinaryJedisClusterCommands moved to redis.clients.jedis.commands.MultiKeyBinaryJedisClusterCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.ClusterCommands moved to redis.clients.jedis.commands.ClusterCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.JedisCommands moved to redis.clients.jedis.commands.JedisCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.MultiKeyBinaryCommands moved to redis.clients.jedis.commands.MultiKeyBinaryCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.MultiKeyCommands moved to redis.clients.jedis.commands.MultiKeyCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.Commands moved to redis.clients.jedis.commands.Commands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.BinaryScriptingCommands moved to redis.clients.jedis.commands.BinaryScriptingCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.BinaryRedisPipeline moved to redis.clients.jedis.commands.BinaryRedisPipeline"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.BasicCommands moved to redis.clients.jedis.commands.BasicCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.JedisClusterCommands moved to redis.clients.jedis.commands.JedisClusterCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.ScriptingCommands moved to redis.clients.jedis.commands.ScriptingCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.AdvancedJedisCommands moved to redis.clients.jedis.commands.AdvancedJedisCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.MultiKeyJedisClusterCommands moved to redis.clients.jedis.commands.MultiKeyJedisClusterCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.ScriptingCommandsPipeline moved to redis.clients.jedis.commands.ScriptingCommandsPipeline"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.ClusterPipeline moved to redis.clients.jedis.commands.ClusterPipeline"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.JedisClusterScriptingCommands moved to redis.clients.jedis.commands.JedisClusterScriptingCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.BinaryJedisClusterCommands moved to redis.clients.jedis.commands.BinaryJedisClusterCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.MultiKeyCommandsPipeline moved to redis.clients.jedis.commands.MultiKeyCommandsPipeline"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.SentinelCommands moved to redis.clients.jedis.commands.SentinelCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.AdvancedBinaryJedisCommands moved to redis.clients.jedis.commands.AdvancedBinaryJedisCommands"
	},{
		"type": "Move Class",
		"description":"Move Class redis.clients.jedis.MultiKeyBinaryRedisPipeline moved to redis.clients.jedis.commands.MultiKeyBinaryRedisPipeline"
	}],
	"time": "8/6/15 2:15 PM",
	"id": 1159198
}, {
	"sha1": "cc02c00b8a92ef34d1a8bcdf44a45fb01a8dea6c",
	"repository": "https://github.com/spotify/helios.git",
	"author": "Tom Geiger",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected createJobRawOutput(job Job) : String extracted from protected createJob(job Job) : JobId in class com.spotify.helios.system.SystemTestBase"
	}],
	"time": "8/6/15 2:22 PM",
	"id": 1159300
}, {
	"sha1": "f1b8ae1c44e6ba46118c2f66eae1725259acdccc",
	"repository": "https://github.com/CyanogenMod/android_frameworks_base.git",
	"author": "Roman Birg",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public of(cells Cell[][], row int, column int, size byte) : Cell extracted from public of(row int, column int, size byte) : Cell in class com.android.internal.widget.LockPatternView.Cell"
	}, {
		"type": "Extract Method",
		"description": "Extract Method public stringToPattern(string String, size byte) : List<LockPatternView.Cell> extracted from public stringToPattern(string String) : List<LockPatternView.Cell> in class com.android.internal.widget.LockPatternUtils"
	}],
	"time": "8/6/15 3:00 PM",
	"id": 1158923
}, {
	"sha1": "fffdd1e9e9dc887c3e8973147904d47d9fffbb47",
	"repository": "https://github.com/spring-projects/spring-framework.git",
	"author": "Craig Andrews",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private assertExistsAndReturn(content String) : Object extracted from public exists(content String) : void in class org.springframework.test.util.JsonPathExpectationsHelper"
	}],
	"time": "8/6/15 5:08 PM",
	"id": 1159696
}, {
	"sha1": "720b0d2064ecc4403809e794075e9fe8cfa857f1",
	"repository": "https://github.com/liferay/liferay-plugins.git",
	"author": "samanzanedo",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method protected validate(titleMap Map<Locale,String>, startTimeJCalendar Calendar, endTimeJCalendar Calendar, untilJCalendar Calendar) : void extracted from protected validate(titleMap Map<Locale,String>, startTimeJCalendar Calendar, endTimeJCalendar Calendar) : void in class com.liferay.calendar.service.impl.CalendarBookingLocalServiceImpl"
	}],
	"time": "8/6/15 6:31 PM",
	"id": 1159760
}, {
	"sha1": "8d14e557e01cc607dd2db66c29d106ef01aa81f7",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Ben Hamilton",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method public get(buildTarget BuildTarget, eventBus Optional<BuckEventBus>) : TargetNode<?> extracted from public get(buildTarget BuildTarget) : TargetNode<?> in class com.facebook.buck.parser.Parser.CachedState"
	}],
	"time": "8/6/15 7:42 PM",
	"id": 1159266
}, {
	"sha1": "89973a5e4f188040c5fcf87fb5a3e9167329d175",
	"repository": "https://github.com/facebook/buck.git",
	"author": "Mark Wang",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private installAppleBundleForSimulator(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult extracted from private installAppleBundle(params CommandRunnerParams, appleBundle AppleBundle, projectFilesystem ProjectFilesystem, processExecutor ProcessExecutor) : InstallResult in class com.facebook.buck.cli.InstallCommand"
	}],
	"time": "8/6/15 7:45 PM",
	"id": 1159248
}, {
	"sha1": "cfc54e8afa7ee7d5376525a84559e90b21487ccf",
	"repository": "https://github.com/VoltDB/voltdb.git",
	"author": "Qingyang",
	"refactorings": [{
		"type": "Extract Method",
		"description": "Extract Method private resetLeader() : void extracted from public getLastOffset(whichTime long) : long in class org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher"
	}, {
		"type": "Extract Method",
		"description": "Extract Method private resetLeader() : void extracted from public run() : void in class org.voltdb.importclient.kafka.KafkaStreamImporter.TopicPartitionFetcher"
	}],
	"time": "8/6/15 9:21 PM",
	"id": 1158974
}]
